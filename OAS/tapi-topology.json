{
  "swagger": "2.0",
  "info": {
    "title": "tapi-topology",
    "description": "\nThis module contains TAPI Topology Model definitions.\nSource: TapiTopology.uml\nCopyright (c) 2018 Open Networking Foundation (ONF). All rights reserved.\nLicense: This module is distributed under the Apache License 2.0\n- The TAPI YANG models included in this TAPI release are a *normative* part of the TAPI SDK.\n- The YANG specifications have been generated from the corresponding UML model using the [ONF EAGLE UML2YANG mapping tool]\n<https://github.com/OpenNetworkingFoundation/EagleUmlYang>\nand further edited manually to comply with the [ONF IISOMI UML2YANG mapping guidelines]\n<https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\n- Status of YANG model artifacts can be determined by referring to the corresponding UML artifacts.\nAs described in the UML models, some artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\n- The ONF TAPI release process does not guarantee backward compatibility of YANG models across major versions of TAPI releases.\nThe YANG model backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\nYANG models included in this release may not be backward compatible with previous TAPI releases.",
    "version": "2019-03-31"
  },
  "basePath": "/restconf",
  "tags": [
    {
      "name": "root",
      "description": "root resources"
    },
    {
      "name": "operations",
      "description": "operations resources"
    },
    {
      "name": "data",
      "description": "data resources"
    },
    {
      "name": "get",
      "description": "get resources"
    },
    {
      "name": "post",
      "description": "post resources"
    },
    {
      "name": "patch",
      "description": "patch resources"
    },
    {
      "name": "put",
      "description": "put resources"
    },
    {
      "name": "delete",
      "description": "delete resources"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "produces": [
    "application/yang-data+json"
  ],
  "consumes": [
    "application/yang-data+json"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "root",
          "get"
        ],
        "summary": "\nThis module contains TAPI Topology Model definitions.\nSource: TapiTopology.uml\nCopyright (c) 2018 Open Networking Foundation (ONF). All rights reserved.\nLicense: This module is distributed under the Apache License 2.0\n- The TAPI YANG models included in this TAPI release are a *normative* part of the TAPI SDK.\n- The YANG specifications have been generated from the corresponding UML model using the [ONF EAGLE UML2YANG mapping tool]\n<https://github.com/OpenNetworkingFoundation/EagleUmlYang>\nand further edited manually to comply with the [ONF IISOMI UML2YANG mapping guidelines]\n<https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\n- Status of YANG model artifacts can be determined by referring to the corresponding UML artifacts.\nAs described in the UML models, some artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\n- The ONF TAPI release process does not guarantee backward compatibility of YANG models across major versions of TAPI releases.\nThe YANG model backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\nYANG models included in this release may not be backward compatible with previous TAPI releases.",
        "description": "\nThis module contains TAPI Topology Model definitions.\nSource: TapiTopology.uml\nCopyright (c) 2018 Open Networking Foundation (ONF). All rights reserved.\nLicense: This module is distributed under the Apache License 2.0\n- The TAPI YANG models included in this TAPI release are a *normative* part of the TAPI SDK.\n- The YANG specifications have been generated from the corresponding UML model using the [ONF EAGLE UML2YANG mapping tool]\n<https://github.com/OpenNetworkingFoundation/EagleUmlYang>\nand further edited manually to comply with the [ONF IISOMI UML2YANG mapping guidelines]\n<https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\n- Status of YANG model artifacts can be determined by referring to the corresponding UML artifacts.\nAs described in the UML models, some artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\n- The ONF TAPI release process does not guarantee backward compatibility of YANG models across major versions of TAPI releases.\nThe YANG model backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\nYANG models included in this release may not be backward compatible with previous TAPI releases.",
        "operationId": "root_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "\nThis module contains TAPI Topology Model definitions.\nSource: TapiTopology.uml\nCopyright (c) 2018 Open Networking Foundation (ONF). All rights reserved.\nLicense: This module is distributed under the Apache License 2.0\n- The TAPI YANG models included in this TAPI release are a *normative* part of the TAPI SDK.\n- The YANG specifications have been generated from the corresponding UML model using the [ONF EAGLE UML2YANG mapping tool]\n<https://github.com/OpenNetworkingFoundation/EagleUmlYang>\nand further edited manually to comply with the [ONF IISOMI UML2YANG mapping guidelines]\n<https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\n- Status of YANG model artifacts can be determined by referring to the corresponding UML artifacts.\nAs described in the UML models, some artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\n- The ONF TAPI release process does not guarantee backward compatibility of YANG models across major versions of TAPI releases.\nThe YANG model backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\nYANG models included in this release may not be backward compatible with previous TAPI releases.",
            "schema": {
              "$ref": "#/definitions/root"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/operations": {
      "get": {
        "tags": [
          "operations",
          "get"
        ],
        "summary": "\nThis module contains TAPI Topology Model definitions.\nSource: TapiTopology.uml\nCopyright (c) 2018 Open Networking Foundation (ONF). All rights reserved.\nLicense: This module is distributed under the Apache License 2.0\n- The TAPI YANG models included in this TAPI release are a *normative* part of the TAPI SDK.\n- The YANG specifications have been generated from the corresponding UML model using the [ONF EAGLE UML2YANG mapping tool]\n<https://github.com/OpenNetworkingFoundation/EagleUmlYang>\nand further edited manually to comply with the [ONF IISOMI UML2YANG mapping guidelines]\n<https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\n- Status of YANG model artifacts can be determined by referring to the corresponding UML artifacts.\nAs described in the UML models, some artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\n- The ONF TAPI release process does not guarantee backward compatibility of YANG models across major versions of TAPI releases.\nThe YANG model backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\nYANG models included in this release may not be backward compatible with previous TAPI releases.",
        "description": "\nThis module contains TAPI Topology Model definitions.\nSource: TapiTopology.uml\nCopyright (c) 2018 Open Networking Foundation (ONF). All rights reserved.\nLicense: This module is distributed under the Apache License 2.0\n- The TAPI YANG models included in this TAPI release are a *normative* part of the TAPI SDK.\n- The YANG specifications have been generated from the corresponding UML model using the [ONF EAGLE UML2YANG mapping tool]\n<https://github.com/OpenNetworkingFoundation/EagleUmlYang>\nand further edited manually to comply with the [ONF IISOMI UML2YANG mapping guidelines]\n<https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\n- Status of YANG model artifacts can be determined by referring to the corresponding UML artifacts.\nAs described in the UML models, some artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\n- The ONF TAPI release process does not guarantee backward compatibility of YANG models across major versions of TAPI releases.\nThe YANG model backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\nYANG models included in this release may not be backward compatible with previous TAPI releases.",
        "operationId": "operations_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "\nThis module contains TAPI Topology Model definitions.\nSource: TapiTopology.uml\nCopyright (c) 2018 Open Networking Foundation (ONF). All rights reserved.\nLicense: This module is distributed under the Apache License 2.0\n- The TAPI YANG models included in this TAPI release are a *normative* part of the TAPI SDK.\n- The YANG specifications have been generated from the corresponding UML model using the [ONF EAGLE UML2YANG mapping tool]\n<https://github.com/OpenNetworkingFoundation/EagleUmlYang>\nand further edited manually to comply with the [ONF IISOMI UML2YANG mapping guidelines]\n<https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\n- Status of YANG model artifacts can be determined by referring to the corresponding UML artifacts.\nAs described in the UML models, some artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\n- The ONF TAPI release process does not guarantee backward compatibility of YANG models across major versions of TAPI releases.\nThe YANG model backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\nYANG models included in this release may not be backward compatible with previous TAPI releases.",
            "schema": {
              "$ref": "#/definitions/operations"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/operations/tapi-topology:get-topology-details": {
      "post": {
        "tags": [
          "operations",
          "post"
        ],
        "summary": "none",
        "description": "none",
        "operationId": "operations_tapi_topology_get_topology_details_post",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/operations_tapi-topology_get-topology-details-post-input"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/operations_tapi-topology_get-topology-details-post-output"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/operations/tapi-topology:get-topology-details/input": {
    },
    "/operations/tapi-topology:get-topology-details/input/topology-id-or-name": {
    },
    "/operations/tapi-topology:get-topology-details/output": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/layer-protocol-name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/available-cep-layer-protocol": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/available-cep-layer-protocol={available-cep-layer-protocol-layer-protocol-qualifier}/layer-protocol-qualifier": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/available-cep-layer-protocol={available-cep-layer-protocol-layer-protocol-qualifier}/number-of-cep-instances": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/aggregated-node-edge-point": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/mapped-service-interface-point": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/mapped-service-interface-point={mapped-service-interface-point-service-interface-point-uuid}/service-interface-point-uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/link-port-direction": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/link-port-role": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/name={name-value-name}/value-name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/name={name-value-name}/value": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/administrative-state": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/operational-state": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/lifecycle-state": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/termination-direction": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/termination-state": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/total-potential-capacity": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/total-potential-capacity/total-size": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/total-potential-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/total-potential-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/available-capacity": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/available-capacity/total-size": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/available-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/available-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/aggregated-node-edge-point": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/rule-type": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/forwarding-rule": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/override-priority": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/local-id": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/name={name-value-name}/value-name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/name={name-value-name}/value": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/node-edge-point": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/composed-rule-group": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/composed-rule-group={composed-rule-group-topology-uuid},{composed-rule-group-node-uuid},{composed-rule-group-node-rule-group-uuid}/topology-uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/composed-rule-group={composed-rule-group-topology-uuid},{composed-rule-group-node-uuid},{composed-rule-group-node-rule-group-uuid}/node-uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/composed-rule-group={composed-rule-group-topology-uuid},{composed-rule-group-node-uuid},{composed-rule-group-node-rule-group-uuid}/node-rule-group-uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/rule-type": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/forwarding-rule": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/override-priority": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/local-id": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/name={name-value-name}/value-name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/name={name-value-name}/value": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/associated-node-rule-group": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/associated-node-rule-group={associated-node-rule-group-topology-uuid},{associated-node-rule-group-node-uuid},{associated-node-rule-group-node-rule-group-uuid}/topology-uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/associated-node-rule-group={associated-node-rule-group-topology-uuid},{associated-node-rule-group-node-uuid},{associated-node-rule-group-node-rule-group-uuid}/node-uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/associated-node-rule-group={associated-node-rule-group-topology-uuid},{associated-node-rule-group-node-uuid},{associated-node-rule-group-node-rule-group-uuid}/node-rule-group-uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/name={name-value-name}/value-name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/name={name-value-name}/value": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/total-potential-capacity": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/total-potential-capacity/total-size": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/total-potential-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/total-potential-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/available-capacity": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/available-capacity/total-size": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/available-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/available-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/cost-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-value": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-algorithm": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/traffic-property-name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/fixed-latency-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/queing-latency-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/jitter-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/wander-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/risk-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-characteristic-name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-identifier-list": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/name={name-value-name}/value-name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/name={name-value-name}/value": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/total-potential-capacity": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/total-potential-capacity/total-size": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/total-potential-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/total-potential-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/available-capacity": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/available-capacity/total-size": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/available-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/available-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/cost-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-value": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-algorithm": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/latency-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/traffic-property-name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/fixed-latency-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/queing-latency-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/jitter-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/wander-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/risk-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-characteristic-name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-identifier-list": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/encap-topology": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/encap-topology/topology-uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/layer-protocol-name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/name={name-value-name}/value-name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/name={name-value-name}/value": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/administrative-state": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/operational-state": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/lifecycle-state": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/total-potential-capacity": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/total-potential-capacity/total-size": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/total-potential-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/total-potential-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/available-capacity": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/available-capacity/total-size": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/available-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/available-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/cost-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-value": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-algorithm": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/error-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/loss-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/repeat-delivery-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/delivery-order-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/unavailable-time-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/server-integrity-process-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/latency-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/traffic-property-name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/fixed-latency-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/queing-latency-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/jitter-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/node={node-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/wander-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/node-edge-point": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/layer-protocol-name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/direction": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/protection-type": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/restoration-policy": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/name={name-value-name}/value-name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/name={name-value-name}/value": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/administrative-state": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/operational-state": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/lifecycle-state": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/total-potential-capacity": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/total-potential-capacity/total-size": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/total-potential-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/total-potential-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/available-capacity": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/available-capacity/total-size": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/available-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/available-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/cost-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-value": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-algorithm": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/error-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/loss-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/repeat-delivery-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/delivery-order-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/unavailable-time-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/server-integrity-process-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/latency-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/traffic-property-name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/fixed-latency-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/queing-latency-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/jitter-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/wander-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/risk-characteristic": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-characteristic-name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-identifier-list": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/validation-mechanism": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/validation-mechanism={validation-mechanism-validation-mechanism}/validation-mechanism": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/validation-mechanism={validation-mechanism-validation-mechanism}/layer-protocol-adjacency-validated": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/validation-mechanism={validation-mechanism-validation-mechanism}/validation-robustness": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/link={link-uuid}/transitioned-layer-protocol-name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/layer-protocol-name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/boundary-node-edge-point": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/boundary-node-edge-point={boundary-node-edge-point-topology-uuid},{boundary-node-edge-point-node-uuid},{boundary-node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/boundary-node-edge-point={boundary-node-edge-point-topology-uuid},{boundary-node-edge-point-node-uuid},{boundary-node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/boundary-node-edge-point={boundary-node-edge-point-topology-uuid},{boundary-node-edge-point-node-uuid},{boundary-node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/uuid": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/name={name-value-name}/value-name": {
    },
    "/operations/tapi-topology:get-topology-details/output/topology/name={name-value-name}/value": {
    },
    "/operations/tapi-topology:get-node-details": {
      "post": {
        "tags": [
          "operations",
          "post"
        ],
        "summary": "none",
        "description": "none",
        "operationId": "operations_tapi_topology_get_node_details_post",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/operations_tapi-topology_get-node-details-post-input"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/operations_tapi-topology_get-node-details-post-output"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/operations/tapi-topology:get-node-details/input": {
    },
    "/operations/tapi-topology:get-node-details/input/topology-id-or-name": {
    },
    "/operations/tapi-topology:get-node-details/input/node-id-or-name": {
    },
    "/operations/tapi-topology:get-node-details/output": {
    },
    "/operations/tapi-topology:get-node-details/output/node": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/layer-protocol-name": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/available-cep-layer-protocol": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/available-cep-layer-protocol={available-cep-layer-protocol-layer-protocol-qualifier}/layer-protocol-qualifier": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/available-cep-layer-protocol={available-cep-layer-protocol-layer-protocol-qualifier}/number-of-cep-instances": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/aggregated-node-edge-point": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/mapped-service-interface-point": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/mapped-service-interface-point={mapped-service-interface-point-service-interface-point-uuid}/service-interface-point-uuid": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/link-port-direction": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/link-port-role": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/uuid": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/name": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/name={name-value-name}/value-name": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/name={name-value-name}/value": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/administrative-state": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/operational-state": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/lifecycle-state": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/termination-direction": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/termination-state": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/total-potential-capacity": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/total-potential-capacity/total-size": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/total-potential-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/total-potential-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/available-capacity": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/available-capacity/total-size": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/available-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/available-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-node-details/output/node/aggregated-node-edge-point": {
    },
    "/operations/tapi-topology:get-node-details/output/node/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/operations/tapi-topology:get-node-details/output/node/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/operations/tapi-topology:get-node-details/output/node/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/rule": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/rule-type": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/forwarding-rule": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/override-priority": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/local-id": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/name": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/name={name-value-name}/value-name": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/name={name-value-name}/value": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/node-edge-point": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/composed-rule-group": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/composed-rule-group={composed-rule-group-topology-uuid},{composed-rule-group-node-uuid},{composed-rule-group-node-rule-group-uuid}/topology-uuid": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/composed-rule-group={composed-rule-group-topology-uuid},{composed-rule-group-node-uuid},{composed-rule-group-node-rule-group-uuid}/node-uuid": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/composed-rule-group={composed-rule-group-topology-uuid},{composed-rule-group-node-uuid},{composed-rule-group-node-rule-group-uuid}/node-rule-group-uuid": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/rule-type": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/forwarding-rule": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/override-priority": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/local-id": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/name": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/name={name-value-name}/value-name": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/name={name-value-name}/value": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/associated-node-rule-group": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/associated-node-rule-group={associated-node-rule-group-topology-uuid},{associated-node-rule-group-node-uuid},{associated-node-rule-group-node-rule-group-uuid}/topology-uuid": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/associated-node-rule-group={associated-node-rule-group-topology-uuid},{associated-node-rule-group-node-uuid},{associated-node-rule-group-node-rule-group-uuid}/node-uuid": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/associated-node-rule-group={associated-node-rule-group-topology-uuid},{associated-node-rule-group-node-uuid},{associated-node-rule-group-node-rule-group-uuid}/node-rule-group-uuid": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/uuid": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/name": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/name={name-value-name}/value-name": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/name={name-value-name}/value": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/total-potential-capacity": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/total-potential-capacity/total-size": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/total-potential-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/total-potential-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/available-capacity": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/available-capacity/total-size": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/available-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/available-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/cost-characteristic": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-name": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-value": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-algorithm": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/traffic-property-name": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/fixed-latency-characteristic": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/queing-latency-characteristic": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/jitter-characteristic": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/wander-characteristic": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/risk-characteristic": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-characteristic-name": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-identifier-list": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/uuid": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/name": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/name={name-value-name}/value-name": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/name={name-value-name}/value": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/total-potential-capacity": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/total-potential-capacity/total-size": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/total-potential-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/total-potential-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/available-capacity": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/available-capacity/total-size": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/available-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/available-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/cost-characteristic": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-name": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-value": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-algorithm": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/latency-characteristic": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/traffic-property-name": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/fixed-latency-characteristic": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/queing-latency-characteristic": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/jitter-characteristic": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/wander-characteristic": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/risk-characteristic": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-characteristic-name": {
    },
    "/operations/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-identifier-list": {
    },
    "/operations/tapi-topology:get-node-details/output/node/encap-topology": {
    },
    "/operations/tapi-topology:get-node-details/output/node/encap-topology/topology-uuid": {
    },
    "/operations/tapi-topology:get-node-details/output/node/layer-protocol-name": {
    },
    "/operations/tapi-topology:get-node-details/output/node/uuid": {
    },
    "/operations/tapi-topology:get-node-details/output/node/name": {
    },
    "/operations/tapi-topology:get-node-details/output/node/name={name-value-name}/value-name": {
    },
    "/operations/tapi-topology:get-node-details/output/node/name={name-value-name}/value": {
    },
    "/operations/tapi-topology:get-node-details/output/node/administrative-state": {
    },
    "/operations/tapi-topology:get-node-details/output/node/operational-state": {
    },
    "/operations/tapi-topology:get-node-details/output/node/lifecycle-state": {
    },
    "/operations/tapi-topology:get-node-details/output/node/total-potential-capacity": {
    },
    "/operations/tapi-topology:get-node-details/output/node/total-potential-capacity/total-size": {
    },
    "/operations/tapi-topology:get-node-details/output/node/total-potential-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-node-details/output/node/total-potential-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-node-details/output/node/available-capacity": {
    },
    "/operations/tapi-topology:get-node-details/output/node/available-capacity/total-size": {
    },
    "/operations/tapi-topology:get-node-details/output/node/available-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-node-details/output/node/available-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-node-details/output/node/cost-characteristic": {
    },
    "/operations/tapi-topology:get-node-details/output/node/cost-characteristic={cost-characteristic-cost-name}/cost-name": {
    },
    "/operations/tapi-topology:get-node-details/output/node/cost-characteristic={cost-characteristic-cost-name}/cost-value": {
    },
    "/operations/tapi-topology:get-node-details/output/node/cost-characteristic={cost-characteristic-cost-name}/cost-algorithm": {
    },
    "/operations/tapi-topology:get-node-details/output/node/error-characteristic": {
    },
    "/operations/tapi-topology:get-node-details/output/node/loss-characteristic": {
    },
    "/operations/tapi-topology:get-node-details/output/node/repeat-delivery-characteristic": {
    },
    "/operations/tapi-topology:get-node-details/output/node/delivery-order-characteristic": {
    },
    "/operations/tapi-topology:get-node-details/output/node/unavailable-time-characteristic": {
    },
    "/operations/tapi-topology:get-node-details/output/node/server-integrity-process-characteristic": {
    },
    "/operations/tapi-topology:get-node-details/output/node/latency-characteristic": {
    },
    "/operations/tapi-topology:get-node-details/output/node/latency-characteristic={latency-characteristic-traffic-property-name}/traffic-property-name": {
    },
    "/operations/tapi-topology:get-node-details/output/node/latency-characteristic={latency-characteristic-traffic-property-name}/fixed-latency-characteristic": {
    },
    "/operations/tapi-topology:get-node-details/output/node/latency-characteristic={latency-characteristic-traffic-property-name}/queing-latency-characteristic": {
    },
    "/operations/tapi-topology:get-node-details/output/node/latency-characteristic={latency-characteristic-traffic-property-name}/jitter-characteristic": {
    },
    "/operations/tapi-topology:get-node-details/output/node/latency-characteristic={latency-characteristic-traffic-property-name}/wander-characteristic": {
    },
    "/operations/tapi-topology:get-node-edge-point-details": {
      "post": {
        "tags": [
          "operations",
          "post"
        ],
        "summary": "none",
        "description": "none",
        "operationId": "operations_tapi_topology_get_node_edge_point_details_post",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/operations_tapi-topology_get-node-edge-point-details-post-input"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/operations_tapi-topology_get-node-edge-point-details-post-output"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/operations/tapi-topology:get-node-edge-point-details/input": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/input/topology-id-or-name": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/input/node-id-or-name": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/input/ep-id-or-name": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/layer-protocol-name": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/available-cep-layer-protocol": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/available-cep-layer-protocol={available-cep-layer-protocol-layer-protocol-qualifier}/layer-protocol-qualifier": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/available-cep-layer-protocol={available-cep-layer-protocol-layer-protocol-qualifier}/number-of-cep-instances": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/aggregated-node-edge-point": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/mapped-service-interface-point": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/mapped-service-interface-point={mapped-service-interface-point-service-interface-point-uuid}/service-interface-point-uuid": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/link-port-direction": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/link-port-role": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/uuid": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/name": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/name={name-value-name}/value-name": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/name={name-value-name}/value": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/administrative-state": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/operational-state": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/lifecycle-state": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/termination-direction": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/termination-state": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/total-potential-capacity": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/total-potential-capacity/total-size": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/total-potential-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/total-potential-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/available-capacity": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/available-capacity/total-size": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/available-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-node-edge-point-details/output/node-edge-point/available-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-link-details": {
      "post": {
        "tags": [
          "operations",
          "post"
        ],
        "summary": "none",
        "description": "none",
        "operationId": "operations_tapi_topology_get_link_details_post",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/operations_tapi-topology_get-link-details-post-input"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/operations_tapi-topology_get-link-details-post-output"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/operations/tapi-topology:get-link-details/input": {
    },
    "/operations/tapi-topology:get-link-details/input/topology-id-or-name": {
    },
    "/operations/tapi-topology:get-link-details/input/link-id-or-name": {
    },
    "/operations/tapi-topology:get-link-details/output": {
    },
    "/operations/tapi-topology:get-link-details/output/link": {
    },
    "/operations/tapi-topology:get-link-details/output/link/node-edge-point": {
    },
    "/operations/tapi-topology:get-link-details/output/link/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/operations/tapi-topology:get-link-details/output/link/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/operations/tapi-topology:get-link-details/output/link/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/operations/tapi-topology:get-link-details/output/link/layer-protocol-name": {
    },
    "/operations/tapi-topology:get-link-details/output/link/direction": {
    },
    "/operations/tapi-topology:get-link-details/output/link/protection-type": {
    },
    "/operations/tapi-topology:get-link-details/output/link/restoration-policy": {
    },
    "/operations/tapi-topology:get-link-details/output/link/uuid": {
    },
    "/operations/tapi-topology:get-link-details/output/link/name": {
    },
    "/operations/tapi-topology:get-link-details/output/link/name={name-value-name}/value-name": {
    },
    "/operations/tapi-topology:get-link-details/output/link/name={name-value-name}/value": {
    },
    "/operations/tapi-topology:get-link-details/output/link/administrative-state": {
    },
    "/operations/tapi-topology:get-link-details/output/link/operational-state": {
    },
    "/operations/tapi-topology:get-link-details/output/link/lifecycle-state": {
    },
    "/operations/tapi-topology:get-link-details/output/link/total-potential-capacity": {
    },
    "/operations/tapi-topology:get-link-details/output/link/total-potential-capacity/total-size": {
    },
    "/operations/tapi-topology:get-link-details/output/link/total-potential-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-link-details/output/link/total-potential-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-link-details/output/link/available-capacity": {
    },
    "/operations/tapi-topology:get-link-details/output/link/available-capacity/total-size": {
    },
    "/operations/tapi-topology:get-link-details/output/link/available-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-link-details/output/link/available-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-link-details/output/link/cost-characteristic": {
    },
    "/operations/tapi-topology:get-link-details/output/link/cost-characteristic={cost-characteristic-cost-name}/cost-name": {
    },
    "/operations/tapi-topology:get-link-details/output/link/cost-characteristic={cost-characteristic-cost-name}/cost-value": {
    },
    "/operations/tapi-topology:get-link-details/output/link/cost-characteristic={cost-characteristic-cost-name}/cost-algorithm": {
    },
    "/operations/tapi-topology:get-link-details/output/link/error-characteristic": {
    },
    "/operations/tapi-topology:get-link-details/output/link/loss-characteristic": {
    },
    "/operations/tapi-topology:get-link-details/output/link/repeat-delivery-characteristic": {
    },
    "/operations/tapi-topology:get-link-details/output/link/delivery-order-characteristic": {
    },
    "/operations/tapi-topology:get-link-details/output/link/unavailable-time-characteristic": {
    },
    "/operations/tapi-topology:get-link-details/output/link/server-integrity-process-characteristic": {
    },
    "/operations/tapi-topology:get-link-details/output/link/latency-characteristic": {
    },
    "/operations/tapi-topology:get-link-details/output/link/latency-characteristic={latency-characteristic-traffic-property-name}/traffic-property-name": {
    },
    "/operations/tapi-topology:get-link-details/output/link/latency-characteristic={latency-characteristic-traffic-property-name}/fixed-latency-characteristic": {
    },
    "/operations/tapi-topology:get-link-details/output/link/latency-characteristic={latency-characteristic-traffic-property-name}/queing-latency-characteristic": {
    },
    "/operations/tapi-topology:get-link-details/output/link/latency-characteristic={latency-characteristic-traffic-property-name}/jitter-characteristic": {
    },
    "/operations/tapi-topology:get-link-details/output/link/latency-characteristic={latency-characteristic-traffic-property-name}/wander-characteristic": {
    },
    "/operations/tapi-topology:get-link-details/output/link/risk-characteristic": {
    },
    "/operations/tapi-topology:get-link-details/output/link/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-characteristic-name": {
    },
    "/operations/tapi-topology:get-link-details/output/link/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-identifier-list": {
    },
    "/operations/tapi-topology:get-link-details/output/link/validation-mechanism": {
    },
    "/operations/tapi-topology:get-link-details/output/link/validation-mechanism={validation-mechanism-validation-mechanism}/validation-mechanism": {
    },
    "/operations/tapi-topology:get-link-details/output/link/validation-mechanism={validation-mechanism-validation-mechanism}/layer-protocol-adjacency-validated": {
    },
    "/operations/tapi-topology:get-link-details/output/link/validation-mechanism={validation-mechanism-validation-mechanism}/validation-robustness": {
    },
    "/operations/tapi-topology:get-link-details/output/link/transitioned-layer-protocol-name": {
    },
    "/operations/tapi-topology:get-topology-list": {
      "post": {
        "tags": [
          "operations",
          "post"
        ],
        "summary": "none",
        "description": "none",
        "operationId": "operations_tapi_topology_get_topology_list_post",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/operations_tapi-topology_get-topology-list-post-input"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/operations_tapi-topology_get-topology-list-post-output"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/operations/tapi-topology:get-topology-list/input": {
    },
    "/operations/tapi-topology:get-topology-list/output": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/layer-protocol-name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/available-cep-layer-protocol": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/available-cep-layer-protocol={available-cep-layer-protocol-layer-protocol-qualifier}/layer-protocol-qualifier": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/available-cep-layer-protocol={available-cep-layer-protocol-layer-protocol-qualifier}/number-of-cep-instances": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/aggregated-node-edge-point": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/mapped-service-interface-point": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/mapped-service-interface-point={mapped-service-interface-point-service-interface-point-uuid}/service-interface-point-uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/link-port-direction": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/link-port-role": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/name={name-value-name}/value-name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/name={name-value-name}/value": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/administrative-state": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/operational-state": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/lifecycle-state": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/termination-direction": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/termination-state": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/total-potential-capacity": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/total-potential-capacity/total-size": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/total-potential-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/total-potential-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/available-capacity": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/available-capacity/total-size": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/available-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/available-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/aggregated-node-edge-point": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/rule-type": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/forwarding-rule": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/override-priority": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/local-id": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/name={name-value-name}/value-name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/name={name-value-name}/value": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/node-edge-point": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/composed-rule-group": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/composed-rule-group={composed-rule-group-topology-uuid},{composed-rule-group-node-uuid},{composed-rule-group-node-rule-group-uuid}/topology-uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/composed-rule-group={composed-rule-group-topology-uuid},{composed-rule-group-node-uuid},{composed-rule-group-node-rule-group-uuid}/node-uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/composed-rule-group={composed-rule-group-topology-uuid},{composed-rule-group-node-uuid},{composed-rule-group-node-rule-group-uuid}/node-rule-group-uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/rule-type": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/forwarding-rule": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/override-priority": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/local-id": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/name={name-value-name}/value-name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/name={name-value-name}/value": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/associated-node-rule-group": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/associated-node-rule-group={associated-node-rule-group-topology-uuid},{associated-node-rule-group-node-uuid},{associated-node-rule-group-node-rule-group-uuid}/topology-uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/associated-node-rule-group={associated-node-rule-group-topology-uuid},{associated-node-rule-group-node-uuid},{associated-node-rule-group-node-rule-group-uuid}/node-uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/associated-node-rule-group={associated-node-rule-group-topology-uuid},{associated-node-rule-group-node-uuid},{associated-node-rule-group-node-rule-group-uuid}/node-rule-group-uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/name={name-value-name}/value-name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/name={name-value-name}/value": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/total-potential-capacity": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/total-potential-capacity/total-size": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/total-potential-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/total-potential-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/available-capacity": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/available-capacity/total-size": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/available-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/available-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/cost-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-value": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-algorithm": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/traffic-property-name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/fixed-latency-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/queing-latency-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/jitter-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/wander-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/risk-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-characteristic-name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-identifier-list": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/name={name-value-name}/value-name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/name={name-value-name}/value": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/total-potential-capacity": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/total-potential-capacity/total-size": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/total-potential-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/total-potential-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/available-capacity": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/available-capacity/total-size": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/available-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/available-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/cost-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-value": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-algorithm": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/latency-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/traffic-property-name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/fixed-latency-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/queing-latency-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/jitter-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/wander-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/risk-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-characteristic-name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-identifier-list": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/encap-topology": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/encap-topology/topology-uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/layer-protocol-name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/name={name-value-name}/value-name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/name={name-value-name}/value": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/administrative-state": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/operational-state": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/lifecycle-state": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/total-potential-capacity": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/total-potential-capacity/total-size": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/total-potential-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/total-potential-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/available-capacity": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/available-capacity/total-size": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/available-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/available-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/cost-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-value": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-algorithm": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/error-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/loss-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/repeat-delivery-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/delivery-order-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/unavailable-time-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/server-integrity-process-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/latency-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/traffic-property-name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/fixed-latency-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/queing-latency-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/jitter-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/wander-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/node-edge-point": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/layer-protocol-name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/direction": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/protection-type": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/restoration-policy": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/name={name-value-name}/value-name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/name={name-value-name}/value": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/administrative-state": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/operational-state": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/lifecycle-state": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/total-potential-capacity": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/total-potential-capacity/total-size": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/total-potential-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/total-potential-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/available-capacity": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/available-capacity/total-size": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/available-capacity/total-size/value": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/available-capacity/total-size/unit": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/cost-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-value": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-algorithm": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/error-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/loss-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/repeat-delivery-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/delivery-order-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/unavailable-time-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/server-integrity-process-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/latency-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/traffic-property-name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/fixed-latency-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/queing-latency-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/jitter-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/wander-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/risk-characteristic": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-characteristic-name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-identifier-list": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/validation-mechanism": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/validation-mechanism={validation-mechanism-validation-mechanism}/validation-mechanism": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/validation-mechanism={validation-mechanism-validation-mechanism}/layer-protocol-adjacency-validated": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/validation-mechanism={validation-mechanism-validation-mechanism}/validation-robustness": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/transitioned-layer-protocol-name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/layer-protocol-name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/boundary-node-edge-point": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/boundary-node-edge-point={boundary-node-edge-point-topology-uuid},{boundary-node-edge-point-node-uuid},{boundary-node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/boundary-node-edge-point={boundary-node-edge-point-topology-uuid},{boundary-node-edge-point-node-uuid},{boundary-node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/boundary-node-edge-point={boundary-node-edge-point-topology-uuid},{boundary-node-edge-point-node-uuid},{boundary-node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/uuid": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/name={name-value-name}/value-name": {
    },
    "/operations/tapi-topology:get-topology-list/output/topology={topology-uuid}/name={name-value-name}/value": {
    },
    "/yang-library-version": {
      "get": {
        "tags": [
          "yang-library-version",
          "get"
        ],
        "summary": "\nThis module contains TAPI Topology Model definitions.\nSource: TapiTopology.uml\nCopyright (c) 2018 Open Networking Foundation (ONF). All rights reserved.\nLicense: This module is distributed under the Apache License 2.0\n- The TAPI YANG models included in this TAPI release are a *normative* part of the TAPI SDK.\n- The YANG specifications have been generated from the corresponding UML model using the [ONF EAGLE UML2YANG mapping tool]\n<https://github.com/OpenNetworkingFoundation/EagleUmlYang>\nand further edited manually to comply with the [ONF IISOMI UML2YANG mapping guidelines]\n<https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\n- Status of YANG model artifacts can be determined by referring to the corresponding UML artifacts.\nAs described in the UML models, some artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\n- The ONF TAPI release process does not guarantee backward compatibility of YANG models across major versions of TAPI releases.\nThe YANG model backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\nYANG models included in this release may not be backward compatible with previous TAPI releases.",
        "description": "\nThis module contains TAPI Topology Model definitions.\nSource: TapiTopology.uml\nCopyright (c) 2018 Open Networking Foundation (ONF). All rights reserved.\nLicense: This module is distributed under the Apache License 2.0\n- The TAPI YANG models included in this TAPI release are a *normative* part of the TAPI SDK.\n- The YANG specifications have been generated from the corresponding UML model using the [ONF EAGLE UML2YANG mapping tool]\n<https://github.com/OpenNetworkingFoundation/EagleUmlYang>\nand further edited manually to comply with the [ONF IISOMI UML2YANG mapping guidelines]\n<https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\n- Status of YANG model artifacts can be determined by referring to the corresponding UML artifacts.\nAs described in the UML models, some artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\n- The ONF TAPI release process does not guarantee backward compatibility of YANG models across major versions of TAPI releases.\nThe YANG model backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\nYANG models included in this release may not be backward compatible with previous TAPI releases.",
        "operationId": "yang_library_version_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "\nThis module contains TAPI Topology Model definitions.\nSource: TapiTopology.uml\nCopyright (c) 2018 Open Networking Foundation (ONF). All rights reserved.\nLicense: This module is distributed under the Apache License 2.0\n- The TAPI YANG models included in this TAPI release are a *normative* part of the TAPI SDK.\n- The YANG specifications have been generated from the corresponding UML model using the [ONF EAGLE UML2YANG mapping tool]\n<https://github.com/OpenNetworkingFoundation/EagleUmlYang>\nand further edited manually to comply with the [ONF IISOMI UML2YANG mapping guidelines]\n<https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\n- Status of YANG model artifacts can be determined by referring to the corresponding UML artifacts.\nAs described in the UML models, some artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\n- The ONF TAPI release process does not guarantee backward compatibility of YANG models across major versions of TAPI releases.\nThe YANG model backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\nYANG models included in this release may not be backward compatible with previous TAPI releases.",
            "schema": {
              "$ref": "#/definitions/yang-library-version"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "\nThis module contains TAPI Topology Model definitions.\nSource: TapiTopology.uml\nCopyright (c) 2018 Open Networking Foundation (ONF). All rights reserved.\nLicense: This module is distributed under the Apache License 2.0\n- The TAPI YANG models included in this TAPI release are a *normative* part of the TAPI SDK.\n- The YANG specifications have been generated from the corresponding UML model using the [ONF EAGLE UML2YANG mapping tool]\n<https://github.com/OpenNetworkingFoundation/EagleUmlYang>\nand further edited manually to comply with the [ONF IISOMI UML2YANG mapping guidelines]\n<https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\n- Status of YANG model artifacts can be determined by referring to the corresponding UML artifacts.\nAs described in the UML models, some artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\n- The ONF TAPI release process does not guarantee backward compatibility of YANG models across major versions of TAPI releases.\nThe YANG model backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\nYANG models included in this release may not be backward compatible with previous TAPI releases.",
        "description": "\nThis module contains TAPI Topology Model definitions.\nSource: TapiTopology.uml\nCopyright (c) 2018 Open Networking Foundation (ONF). All rights reserved.\nLicense: This module is distributed under the Apache License 2.0\n- The TAPI YANG models included in this TAPI release are a *normative* part of the TAPI SDK.\n- The YANG specifications have been generated from the corresponding UML model using the [ONF EAGLE UML2YANG mapping tool]\n<https://github.com/OpenNetworkingFoundation/EagleUmlYang>\nand further edited manually to comply with the [ONF IISOMI UML2YANG mapping guidelines]\n<https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\n- Status of YANG model artifacts can be determined by referring to the corresponding UML artifacts.\nAs described in the UML models, some artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\n- The ONF TAPI release process does not guarantee backward compatibility of YANG models across major versions of TAPI releases.\nThe YANG model backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\nYANG models included in this release may not be backward compatible with previous TAPI releases.",
        "operationId": "data_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "\nThis module contains TAPI Topology Model definitions.\nSource: TapiTopology.uml\nCopyright (c) 2018 Open Networking Foundation (ONF). All rights reserved.\nLicense: This module is distributed under the Apache License 2.0\n- The TAPI YANG models included in this TAPI release are a *normative* part of the TAPI SDK.\n- The YANG specifications have been generated from the corresponding UML model using the [ONF EAGLE UML2YANG mapping tool]\n<https://github.com/OpenNetworkingFoundation/EagleUmlYang>\nand further edited manually to comply with the [ONF IISOMI UML2YANG mapping guidelines]\n<https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\n- Status of YANG model artifacts can be determined by referring to the corresponding UML artifacts.\nAs described in the UML models, some artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\n- The ONF TAPI release process does not guarantee backward compatibility of YANG models across major versions of TAPI releases.\nThe YANG model backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\nYANG models included in this release may not be backward compatible with previous TAPI releases.",
            "schema": {
              "$ref": "#/definitions/data"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "data",
          "post"
        ],
        "summary": "\nThis module contains TAPI Topology Model definitions.\nSource: TapiTopology.uml\nCopyright (c) 2018 Open Networking Foundation (ONF). All rights reserved.\nLicense: This module is distributed under the Apache License 2.0\n- The TAPI YANG models included in this TAPI release are a *normative* part of the TAPI SDK.\n- The YANG specifications have been generated from the corresponding UML model using the [ONF EAGLE UML2YANG mapping tool]\n<https://github.com/OpenNetworkingFoundation/EagleUmlYang>\nand further edited manually to comply with the [ONF IISOMI UML2YANG mapping guidelines]\n<https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\n- Status of YANG model artifacts can be determined by referring to the corresponding UML artifacts.\nAs described in the UML models, some artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\n- The ONF TAPI release process does not guarantee backward compatibility of YANG models across major versions of TAPI releases.\nThe YANG model backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\nYANG models included in this release may not be backward compatible with previous TAPI releases.",
        "description": "\nThis module contains TAPI Topology Model definitions.\nSource: TapiTopology.uml\nCopyright (c) 2018 Open Networking Foundation (ONF). All rights reserved.\nLicense: This module is distributed under the Apache License 2.0\n- The TAPI YANG models included in this TAPI release are a *normative* part of the TAPI SDK.\n- The YANG specifications have been generated from the corresponding UML model using the [ONF EAGLE UML2YANG mapping tool]\n<https://github.com/OpenNetworkingFoundation/EagleUmlYang>\nand further edited manually to comply with the [ONF IISOMI UML2YANG mapping guidelines]\n<https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\n- Status of YANG model artifacts can be determined by referring to the corresponding UML artifacts.\nAs described in the UML models, some artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\n- The ONF TAPI release process does not guarantee backward compatibility of YANG models across major versions of TAPI releases.\nThe YANG model backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\nYANG models included in this release may not be backward compatible with previous TAPI releases.",
        "operationId": "data_post",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/data-post"
          }
        ],
        "responses": {
          "201": {
            "description": "\nThis module contains TAPI Topology Model definitions.\nSource: TapiTopology.uml\nCopyright (c) 2018 Open Networking Foundation (ONF). All rights reserved.\nLicense: This module is distributed under the Apache License 2.0\n- The TAPI YANG models included in this TAPI release are a *normative* part of the TAPI SDK.\n- The YANG specifications have been generated from the corresponding UML model using the [ONF EAGLE UML2YANG mapping tool]\n<https://github.com/OpenNetworkingFoundation/EagleUmlYang>\nand further edited manually to comply with the [ONF IISOMI UML2YANG mapping guidelines]\n<https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\n- Status of YANG model artifacts can be determined by referring to the corresponding UML artifacts.\nAs described in the UML models, some artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\n- The ONF TAPI release process does not guarantee backward compatibility of YANG models across major versions of TAPI releases.\nThe YANG model backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\nYANG models included in this release may not be backward compatible with previous TAPI releases."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "data",
          "put"
        ],
        "summary": "\nThis module contains TAPI Topology Model definitions.\nSource: TapiTopology.uml\nCopyright (c) 2018 Open Networking Foundation (ONF). All rights reserved.\nLicense: This module is distributed under the Apache License 2.0\n- The TAPI YANG models included in this TAPI release are a *normative* part of the TAPI SDK.\n- The YANG specifications have been generated from the corresponding UML model using the [ONF EAGLE UML2YANG mapping tool]\n<https://github.com/OpenNetworkingFoundation/EagleUmlYang>\nand further edited manually to comply with the [ONF IISOMI UML2YANG mapping guidelines]\n<https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\n- Status of YANG model artifacts can be determined by referring to the corresponding UML artifacts.\nAs described in the UML models, some artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\n- The ONF TAPI release process does not guarantee backward compatibility of YANG models across major versions of TAPI releases.\nThe YANG model backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\nYANG models included in this release may not be backward compatible with previous TAPI releases.",
        "description": "\nThis module contains TAPI Topology Model definitions.\nSource: TapiTopology.uml\nCopyright (c) 2018 Open Networking Foundation (ONF). All rights reserved.\nLicense: This module is distributed under the Apache License 2.0\n- The TAPI YANG models included in this TAPI release are a *normative* part of the TAPI SDK.\n- The YANG specifications have been generated from the corresponding UML model using the [ONF EAGLE UML2YANG mapping tool]\n<https://github.com/OpenNetworkingFoundation/EagleUmlYang>\nand further edited manually to comply with the [ONF IISOMI UML2YANG mapping guidelines]\n<https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\n- Status of YANG model artifacts can be determined by referring to the corresponding UML artifacts.\nAs described in the UML models, some artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\n- The ONF TAPI release process does not guarantee backward compatibility of YANG models across major versions of TAPI releases.\nThe YANG model backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\nYANG models included in this release may not be backward compatible with previous TAPI releases.",
        "operationId": "data_put",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/data-put-patch"
          }
        ],
        "responses": {
          "201": {
            "description": "\nThis module contains TAPI Topology Model definitions.\nSource: TapiTopology.uml\nCopyright (c) 2018 Open Networking Foundation (ONF). All rights reserved.\nLicense: This module is distributed under the Apache License 2.0\n- The TAPI YANG models included in this TAPI release are a *normative* part of the TAPI SDK.\n- The YANG specifications have been generated from the corresponding UML model using the [ONF EAGLE UML2YANG mapping tool]\n<https://github.com/OpenNetworkingFoundation/EagleUmlYang>\nand further edited manually to comply with the [ONF IISOMI UML2YANG mapping guidelines]\n<https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\n- Status of YANG model artifacts can be determined by referring to the corresponding UML artifacts.\nAs described in the UML models, some artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\n- The ONF TAPI release process does not guarantee backward compatibility of YANG models across major versions of TAPI releases.\nThe YANG model backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\nYANG models included in this release may not be backward compatible with previous TAPI releases."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "data",
          "patch"
        ],
        "summary": "\nThis module contains TAPI Topology Model definitions.\nSource: TapiTopology.uml\nCopyright (c) 2018 Open Networking Foundation (ONF). All rights reserved.\nLicense: This module is distributed under the Apache License 2.0\n- The TAPI YANG models included in this TAPI release are a *normative* part of the TAPI SDK.\n- The YANG specifications have been generated from the corresponding UML model using the [ONF EAGLE UML2YANG mapping tool]\n<https://github.com/OpenNetworkingFoundation/EagleUmlYang>\nand further edited manually to comply with the [ONF IISOMI UML2YANG mapping guidelines]\n<https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\n- Status of YANG model artifacts can be determined by referring to the corresponding UML artifacts.\nAs described in the UML models, some artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\n- The ONF TAPI release process does not guarantee backward compatibility of YANG models across major versions of TAPI releases.\nThe YANG model backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\nYANG models included in this release may not be backward compatible with previous TAPI releases.",
        "description": "\nThis module contains TAPI Topology Model definitions.\nSource: TapiTopology.uml\nCopyright (c) 2018 Open Networking Foundation (ONF). All rights reserved.\nLicense: This module is distributed under the Apache License 2.0\n- The TAPI YANG models included in this TAPI release are a *normative* part of the TAPI SDK.\n- The YANG specifications have been generated from the corresponding UML model using the [ONF EAGLE UML2YANG mapping tool]\n<https://github.com/OpenNetworkingFoundation/EagleUmlYang>\nand further edited manually to comply with the [ONF IISOMI UML2YANG mapping guidelines]\n<https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\n- Status of YANG model artifacts can be determined by referring to the corresponding UML artifacts.\nAs described in the UML models, some artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\n- The ONF TAPI release process does not guarantee backward compatibility of YANG models across major versions of TAPI releases.\nThe YANG model backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\nYANG models included in this release may not be backward compatible with previous TAPI releases.",
        "operationId": "data_patch",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/data-put-patch"
          }
        ],
        "responses": {
          "204": {
            "description": "\nThis module contains TAPI Topology Model definitions.\nSource: TapiTopology.uml\nCopyright (c) 2018 Open Networking Foundation (ONF). All rights reserved.\nLicense: This module is distributed under the Apache License 2.0\n- The TAPI YANG models included in this TAPI release are a *normative* part of the TAPI SDK.\n- The YANG specifications have been generated from the corresponding UML model using the [ONF EAGLE UML2YANG mapping tool]\n<https://github.com/OpenNetworkingFoundation/EagleUmlYang>\nand further edited manually to comply with the [ONF IISOMI UML2YANG mapping guidelines]\n<https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\n- Status of YANG model artifacts can be determined by referring to the corresponding UML artifacts.\nAs described in the UML models, some artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\n- The ONF TAPI release process does not guarantee backward compatibility of YANG models across major versions of TAPI releases.\nThe YANG model backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\nYANG models included in this release may not be backward compatible with previous TAPI releases."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/tapi-topology:get-topology-details": {
      "post": {
        "tags": [
          "data",
          "post"
        ],
        "summary": "none",
        "description": "none",
        "operationId": "data_tapi_topology_get_topology_details_post",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/data_tapi-topology_get-topology-details-post-input"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/data_tapi-topology_get-topology-details-post-output"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/tapi-topology:get-topology-details/input": {
    },
    "/data/tapi-topology:get-topology-details/input/topology-id-or-name": {
    },
    "/data/tapi-topology:get-topology-details/output": {
    },
    "/data/tapi-topology:get-topology-details/output/topology": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/layer-protocol-name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/available-cep-layer-protocol": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/available-cep-layer-protocol={available-cep-layer-protocol-layer-protocol-qualifier}/layer-protocol-qualifier": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/available-cep-layer-protocol={available-cep-layer-protocol-layer-protocol-qualifier}/number-of-cep-instances": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/aggregated-node-edge-point": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/mapped-service-interface-point": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/mapped-service-interface-point={mapped-service-interface-point-service-interface-point-uuid}/service-interface-point-uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/link-port-direction": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/link-port-role": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/name={name-value-name}/value-name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/name={name-value-name}/value": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/administrative-state": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/operational-state": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/lifecycle-state": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/termination-direction": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/termination-state": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/total-potential-capacity": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/total-potential-capacity/total-size": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/total-potential-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/total-potential-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/available-capacity": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/available-capacity/total-size": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/available-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-edge-point={node-edge-point-uuid}/available-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/aggregated-node-edge-point": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/rule-type": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/forwarding-rule": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/override-priority": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/local-id": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/name={name-value-name}/value-name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/name={name-value-name}/value": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/node-edge-point": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/composed-rule-group": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/composed-rule-group={composed-rule-group-topology-uuid},{composed-rule-group-node-uuid},{composed-rule-group-node-rule-group-uuid}/topology-uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/composed-rule-group={composed-rule-group-topology-uuid},{composed-rule-group-node-uuid},{composed-rule-group-node-rule-group-uuid}/node-uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/composed-rule-group={composed-rule-group-topology-uuid},{composed-rule-group-node-uuid},{composed-rule-group-node-rule-group-uuid}/node-rule-group-uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/rule-type": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/forwarding-rule": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/override-priority": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/local-id": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/name={name-value-name}/value-name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/name={name-value-name}/value": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/associated-node-rule-group": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/associated-node-rule-group={associated-node-rule-group-topology-uuid},{associated-node-rule-group-node-uuid},{associated-node-rule-group-node-rule-group-uuid}/topology-uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/associated-node-rule-group={associated-node-rule-group-topology-uuid},{associated-node-rule-group-node-uuid},{associated-node-rule-group-node-rule-group-uuid}/node-uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/associated-node-rule-group={associated-node-rule-group-topology-uuid},{associated-node-rule-group-node-uuid},{associated-node-rule-group-node-rule-group-uuid}/node-rule-group-uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/name={name-value-name}/value-name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/name={name-value-name}/value": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/total-potential-capacity": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/total-potential-capacity/total-size": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/total-potential-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/total-potential-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/available-capacity": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/available-capacity/total-size": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/available-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/available-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/cost-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-value": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-algorithm": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/traffic-property-name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/fixed-latency-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/queing-latency-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/jitter-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/wander-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/risk-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-characteristic-name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-identifier-list": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/name={name-value-name}/value-name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/name={name-value-name}/value": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/total-potential-capacity": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/total-potential-capacity/total-size": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/total-potential-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/total-potential-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/available-capacity": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/available-capacity/total-size": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/available-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/available-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/cost-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-value": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-algorithm": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/latency-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/traffic-property-name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/fixed-latency-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/queing-latency-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/jitter-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/wander-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/risk-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-characteristic-name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/node-rule-group={node-rule-group-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-identifier-list": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/encap-topology": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/encap-topology/topology-uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/layer-protocol-name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/name={name-value-name}/value-name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/name={name-value-name}/value": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/administrative-state": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/operational-state": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/lifecycle-state": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/total-potential-capacity": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/total-potential-capacity/total-size": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/total-potential-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/total-potential-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/available-capacity": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/available-capacity/total-size": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/available-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/available-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/cost-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-value": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-algorithm": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/error-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/loss-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/repeat-delivery-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/delivery-order-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/unavailable-time-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/server-integrity-process-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/latency-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/traffic-property-name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/fixed-latency-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/queing-latency-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/jitter-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/node={node-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/wander-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/node-edge-point": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/layer-protocol-name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/direction": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/protection-type": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/restoration-policy": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/name={name-value-name}/value-name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/name={name-value-name}/value": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/administrative-state": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/operational-state": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/lifecycle-state": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/total-potential-capacity": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/total-potential-capacity/total-size": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/total-potential-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/total-potential-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/available-capacity": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/available-capacity/total-size": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/available-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/available-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/cost-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-value": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-algorithm": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/error-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/loss-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/repeat-delivery-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/delivery-order-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/unavailable-time-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/server-integrity-process-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/latency-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/traffic-property-name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/fixed-latency-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/queing-latency-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/jitter-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/wander-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/risk-characteristic": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-characteristic-name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-identifier-list": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/validation-mechanism": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/validation-mechanism={validation-mechanism-validation-mechanism}/validation-mechanism": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/validation-mechanism={validation-mechanism-validation-mechanism}/layer-protocol-adjacency-validated": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/validation-mechanism={validation-mechanism-validation-mechanism}/validation-robustness": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/link={link-uuid}/transitioned-layer-protocol-name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/layer-protocol-name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/boundary-node-edge-point": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/boundary-node-edge-point={boundary-node-edge-point-topology-uuid},{boundary-node-edge-point-node-uuid},{boundary-node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/boundary-node-edge-point={boundary-node-edge-point-topology-uuid},{boundary-node-edge-point-node-uuid},{boundary-node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/boundary-node-edge-point={boundary-node-edge-point-topology-uuid},{boundary-node-edge-point-node-uuid},{boundary-node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/uuid": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/name={name-value-name}/value-name": {
    },
    "/data/tapi-topology:get-topology-details/output/topology/name={name-value-name}/value": {
    },
    "/data/tapi-topology:get-node-details": {
      "post": {
        "tags": [
          "data",
          "post"
        ],
        "summary": "none",
        "description": "none",
        "operationId": "data_tapi_topology_get_node_details_post",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/data_tapi-topology_get-node-details-post-input"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/data_tapi-topology_get-node-details-post-output"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/tapi-topology:get-node-details/input": {
    },
    "/data/tapi-topology:get-node-details/input/topology-id-or-name": {
    },
    "/data/tapi-topology:get-node-details/input/node-id-or-name": {
    },
    "/data/tapi-topology:get-node-details/output": {
    },
    "/data/tapi-topology:get-node-details/output/node": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/layer-protocol-name": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/available-cep-layer-protocol": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/available-cep-layer-protocol={available-cep-layer-protocol-layer-protocol-qualifier}/layer-protocol-qualifier": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/available-cep-layer-protocol={available-cep-layer-protocol-layer-protocol-qualifier}/number-of-cep-instances": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/aggregated-node-edge-point": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/mapped-service-interface-point": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/mapped-service-interface-point={mapped-service-interface-point-service-interface-point-uuid}/service-interface-point-uuid": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/link-port-direction": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/link-port-role": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/uuid": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/name": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/name={name-value-name}/value-name": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/name={name-value-name}/value": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/administrative-state": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/operational-state": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/lifecycle-state": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/termination-direction": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/termination-state": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/total-potential-capacity": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/total-potential-capacity/total-size": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/total-potential-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/total-potential-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/available-capacity": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/available-capacity/total-size": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/available-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-edge-point={node-edge-point-uuid}/available-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-node-details/output/node/aggregated-node-edge-point": {
    },
    "/data/tapi-topology:get-node-details/output/node/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/data/tapi-topology:get-node-details/output/node/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/data/tapi-topology:get-node-details/output/node/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/rule": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/rule-type": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/forwarding-rule": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/override-priority": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/local-id": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/name": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/name={name-value-name}/value-name": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/name={name-value-name}/value": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/node-edge-point": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/composed-rule-group": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/composed-rule-group={composed-rule-group-topology-uuid},{composed-rule-group-node-uuid},{composed-rule-group-node-rule-group-uuid}/topology-uuid": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/composed-rule-group={composed-rule-group-topology-uuid},{composed-rule-group-node-uuid},{composed-rule-group-node-rule-group-uuid}/node-uuid": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/composed-rule-group={composed-rule-group-topology-uuid},{composed-rule-group-node-uuid},{composed-rule-group-node-rule-group-uuid}/node-rule-group-uuid": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/rule-type": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/forwarding-rule": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/override-priority": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/local-id": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/name": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/name={name-value-name}/value-name": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/name={name-value-name}/value": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/associated-node-rule-group": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/associated-node-rule-group={associated-node-rule-group-topology-uuid},{associated-node-rule-group-node-uuid},{associated-node-rule-group-node-rule-group-uuid}/topology-uuid": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/associated-node-rule-group={associated-node-rule-group-topology-uuid},{associated-node-rule-group-node-uuid},{associated-node-rule-group-node-rule-group-uuid}/node-uuid": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/associated-node-rule-group={associated-node-rule-group-topology-uuid},{associated-node-rule-group-node-uuid},{associated-node-rule-group-node-rule-group-uuid}/node-rule-group-uuid": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/uuid": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/name": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/name={name-value-name}/value-name": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/name={name-value-name}/value": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/total-potential-capacity": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/total-potential-capacity/total-size": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/total-potential-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/total-potential-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/available-capacity": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/available-capacity/total-size": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/available-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/available-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/cost-characteristic": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-name": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-value": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-algorithm": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/traffic-property-name": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/fixed-latency-characteristic": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/queing-latency-characteristic": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/jitter-characteristic": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/wander-characteristic": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/risk-characteristic": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-characteristic-name": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-identifier-list": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/uuid": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/name": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/name={name-value-name}/value-name": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/name={name-value-name}/value": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/total-potential-capacity": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/total-potential-capacity/total-size": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/total-potential-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/total-potential-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/available-capacity": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/available-capacity/total-size": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/available-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/available-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/cost-characteristic": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-name": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-value": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-algorithm": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/latency-characteristic": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/traffic-property-name": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/fixed-latency-characteristic": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/queing-latency-characteristic": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/jitter-characteristic": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/wander-characteristic": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/risk-characteristic": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-characteristic-name": {
    },
    "/data/tapi-topology:get-node-details/output/node/node-rule-group={node-rule-group-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-identifier-list": {
    },
    "/data/tapi-topology:get-node-details/output/node/encap-topology": {
    },
    "/data/tapi-topology:get-node-details/output/node/encap-topology/topology-uuid": {
    },
    "/data/tapi-topology:get-node-details/output/node/layer-protocol-name": {
    },
    "/data/tapi-topology:get-node-details/output/node/uuid": {
    },
    "/data/tapi-topology:get-node-details/output/node/name": {
    },
    "/data/tapi-topology:get-node-details/output/node/name={name-value-name}/value-name": {
    },
    "/data/tapi-topology:get-node-details/output/node/name={name-value-name}/value": {
    },
    "/data/tapi-topology:get-node-details/output/node/administrative-state": {
    },
    "/data/tapi-topology:get-node-details/output/node/operational-state": {
    },
    "/data/tapi-topology:get-node-details/output/node/lifecycle-state": {
    },
    "/data/tapi-topology:get-node-details/output/node/total-potential-capacity": {
    },
    "/data/tapi-topology:get-node-details/output/node/total-potential-capacity/total-size": {
    },
    "/data/tapi-topology:get-node-details/output/node/total-potential-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-node-details/output/node/total-potential-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-node-details/output/node/available-capacity": {
    },
    "/data/tapi-topology:get-node-details/output/node/available-capacity/total-size": {
    },
    "/data/tapi-topology:get-node-details/output/node/available-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-node-details/output/node/available-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-node-details/output/node/cost-characteristic": {
    },
    "/data/tapi-topology:get-node-details/output/node/cost-characteristic={cost-characteristic-cost-name}/cost-name": {
    },
    "/data/tapi-topology:get-node-details/output/node/cost-characteristic={cost-characteristic-cost-name}/cost-value": {
    },
    "/data/tapi-topology:get-node-details/output/node/cost-characteristic={cost-characteristic-cost-name}/cost-algorithm": {
    },
    "/data/tapi-topology:get-node-details/output/node/error-characteristic": {
    },
    "/data/tapi-topology:get-node-details/output/node/loss-characteristic": {
    },
    "/data/tapi-topology:get-node-details/output/node/repeat-delivery-characteristic": {
    },
    "/data/tapi-topology:get-node-details/output/node/delivery-order-characteristic": {
    },
    "/data/tapi-topology:get-node-details/output/node/unavailable-time-characteristic": {
    },
    "/data/tapi-topology:get-node-details/output/node/server-integrity-process-characteristic": {
    },
    "/data/tapi-topology:get-node-details/output/node/latency-characteristic": {
    },
    "/data/tapi-topology:get-node-details/output/node/latency-characteristic={latency-characteristic-traffic-property-name}/traffic-property-name": {
    },
    "/data/tapi-topology:get-node-details/output/node/latency-characteristic={latency-characteristic-traffic-property-name}/fixed-latency-characteristic": {
    },
    "/data/tapi-topology:get-node-details/output/node/latency-characteristic={latency-characteristic-traffic-property-name}/queing-latency-characteristic": {
    },
    "/data/tapi-topology:get-node-details/output/node/latency-characteristic={latency-characteristic-traffic-property-name}/jitter-characteristic": {
    },
    "/data/tapi-topology:get-node-details/output/node/latency-characteristic={latency-characteristic-traffic-property-name}/wander-characteristic": {
    },
    "/data/tapi-topology:get-node-edge-point-details": {
      "post": {
        "tags": [
          "data",
          "post"
        ],
        "summary": "none",
        "description": "none",
        "operationId": "data_tapi_topology_get_node_edge_point_details_post",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/data_tapi-topology_get-node-edge-point-details-post-input"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/data_tapi-topology_get-node-edge-point-details-post-output"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/tapi-topology:get-node-edge-point-details/input": {
    },
    "/data/tapi-topology:get-node-edge-point-details/input/topology-id-or-name": {
    },
    "/data/tapi-topology:get-node-edge-point-details/input/node-id-or-name": {
    },
    "/data/tapi-topology:get-node-edge-point-details/input/ep-id-or-name": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/layer-protocol-name": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/available-cep-layer-protocol": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/available-cep-layer-protocol={available-cep-layer-protocol-layer-protocol-qualifier}/layer-protocol-qualifier": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/available-cep-layer-protocol={available-cep-layer-protocol-layer-protocol-qualifier}/number-of-cep-instances": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/aggregated-node-edge-point": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/mapped-service-interface-point": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/mapped-service-interface-point={mapped-service-interface-point-service-interface-point-uuid}/service-interface-point-uuid": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/link-port-direction": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/link-port-role": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/uuid": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/name": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/name={name-value-name}/value-name": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/name={name-value-name}/value": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/administrative-state": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/operational-state": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/lifecycle-state": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/termination-direction": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/termination-state": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/total-potential-capacity": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/total-potential-capacity/total-size": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/total-potential-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/total-potential-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/available-capacity": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/available-capacity/total-size": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/available-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-node-edge-point-details/output/node-edge-point/available-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-link-details": {
      "post": {
        "tags": [
          "data",
          "post"
        ],
        "summary": "none",
        "description": "none",
        "operationId": "data_tapi_topology_get_link_details_post",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/data_tapi-topology_get-link-details-post-input"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/data_tapi-topology_get-link-details-post-output"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/tapi-topology:get-link-details/input": {
    },
    "/data/tapi-topology:get-link-details/input/topology-id-or-name": {
    },
    "/data/tapi-topology:get-link-details/input/link-id-or-name": {
    },
    "/data/tapi-topology:get-link-details/output": {
    },
    "/data/tapi-topology:get-link-details/output/link": {
    },
    "/data/tapi-topology:get-link-details/output/link/node-edge-point": {
    },
    "/data/tapi-topology:get-link-details/output/link/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/data/tapi-topology:get-link-details/output/link/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/data/tapi-topology:get-link-details/output/link/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/data/tapi-topology:get-link-details/output/link/layer-protocol-name": {
    },
    "/data/tapi-topology:get-link-details/output/link/direction": {
    },
    "/data/tapi-topology:get-link-details/output/link/protection-type": {
    },
    "/data/tapi-topology:get-link-details/output/link/restoration-policy": {
    },
    "/data/tapi-topology:get-link-details/output/link/uuid": {
    },
    "/data/tapi-topology:get-link-details/output/link/name": {
    },
    "/data/tapi-topology:get-link-details/output/link/name={name-value-name}/value-name": {
    },
    "/data/tapi-topology:get-link-details/output/link/name={name-value-name}/value": {
    },
    "/data/tapi-topology:get-link-details/output/link/administrative-state": {
    },
    "/data/tapi-topology:get-link-details/output/link/operational-state": {
    },
    "/data/tapi-topology:get-link-details/output/link/lifecycle-state": {
    },
    "/data/tapi-topology:get-link-details/output/link/total-potential-capacity": {
    },
    "/data/tapi-topology:get-link-details/output/link/total-potential-capacity/total-size": {
    },
    "/data/tapi-topology:get-link-details/output/link/total-potential-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-link-details/output/link/total-potential-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-link-details/output/link/available-capacity": {
    },
    "/data/tapi-topology:get-link-details/output/link/available-capacity/total-size": {
    },
    "/data/tapi-topology:get-link-details/output/link/available-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-link-details/output/link/available-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-link-details/output/link/cost-characteristic": {
    },
    "/data/tapi-topology:get-link-details/output/link/cost-characteristic={cost-characteristic-cost-name}/cost-name": {
    },
    "/data/tapi-topology:get-link-details/output/link/cost-characteristic={cost-characteristic-cost-name}/cost-value": {
    },
    "/data/tapi-topology:get-link-details/output/link/cost-characteristic={cost-characteristic-cost-name}/cost-algorithm": {
    },
    "/data/tapi-topology:get-link-details/output/link/error-characteristic": {
    },
    "/data/tapi-topology:get-link-details/output/link/loss-characteristic": {
    },
    "/data/tapi-topology:get-link-details/output/link/repeat-delivery-characteristic": {
    },
    "/data/tapi-topology:get-link-details/output/link/delivery-order-characteristic": {
    },
    "/data/tapi-topology:get-link-details/output/link/unavailable-time-characteristic": {
    },
    "/data/tapi-topology:get-link-details/output/link/server-integrity-process-characteristic": {
    },
    "/data/tapi-topology:get-link-details/output/link/latency-characteristic": {
    },
    "/data/tapi-topology:get-link-details/output/link/latency-characteristic={latency-characteristic-traffic-property-name}/traffic-property-name": {
    },
    "/data/tapi-topology:get-link-details/output/link/latency-characteristic={latency-characteristic-traffic-property-name}/fixed-latency-characteristic": {
    },
    "/data/tapi-topology:get-link-details/output/link/latency-characteristic={latency-characteristic-traffic-property-name}/queing-latency-characteristic": {
    },
    "/data/tapi-topology:get-link-details/output/link/latency-characteristic={latency-characteristic-traffic-property-name}/jitter-characteristic": {
    },
    "/data/tapi-topology:get-link-details/output/link/latency-characteristic={latency-characteristic-traffic-property-name}/wander-characteristic": {
    },
    "/data/tapi-topology:get-link-details/output/link/risk-characteristic": {
    },
    "/data/tapi-topology:get-link-details/output/link/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-characteristic-name": {
    },
    "/data/tapi-topology:get-link-details/output/link/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-identifier-list": {
    },
    "/data/tapi-topology:get-link-details/output/link/validation-mechanism": {
    },
    "/data/tapi-topology:get-link-details/output/link/validation-mechanism={validation-mechanism-validation-mechanism}/validation-mechanism": {
    },
    "/data/tapi-topology:get-link-details/output/link/validation-mechanism={validation-mechanism-validation-mechanism}/layer-protocol-adjacency-validated": {
    },
    "/data/tapi-topology:get-link-details/output/link/validation-mechanism={validation-mechanism-validation-mechanism}/validation-robustness": {
    },
    "/data/tapi-topology:get-link-details/output/link/transitioned-layer-protocol-name": {
    },
    "/data/tapi-topology:get-topology-list": {
      "post": {
        "tags": [
          "data",
          "post"
        ],
        "summary": "none",
        "description": "none",
        "operationId": "data_tapi_topology_get_topology_list_post",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/data_tapi-topology_get-topology-list-post-input"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/data_tapi-topology_get-topology-list-post-output"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/tapi-topology:get-topology-list/input": {
    },
    "/data/tapi-topology:get-topology-list/output": {
    },
    "/data/tapi-topology:get-topology-list/output/topology": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/layer-protocol-name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/available-cep-layer-protocol": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/available-cep-layer-protocol={available-cep-layer-protocol-layer-protocol-qualifier}/layer-protocol-qualifier": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/available-cep-layer-protocol={available-cep-layer-protocol-layer-protocol-qualifier}/number-of-cep-instances": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/aggregated-node-edge-point": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/mapped-service-interface-point": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/mapped-service-interface-point={mapped-service-interface-point-service-interface-point-uuid}/service-interface-point-uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/link-port-direction": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/link-port-role": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/name={name-value-name}/value-name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/name={name-value-name}/value": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/administrative-state": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/operational-state": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/lifecycle-state": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/termination-direction": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/termination-state": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/total-potential-capacity": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/total-potential-capacity/total-size": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/total-potential-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/total-potential-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/available-capacity": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/available-capacity/total-size": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/available-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-edge-point={node-edge-point-uuid}/available-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/aggregated-node-edge-point": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/aggregated-node-edge-point={aggregated-node-edge-point-topology-uuid},{aggregated-node-edge-point-node-uuid},{aggregated-node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/rule-type": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/forwarding-rule": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/override-priority": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/local-id": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/name={name-value-name}/value-name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/rule={rule-local-id}/name={name-value-name}/value": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/node-edge-point": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/composed-rule-group": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/composed-rule-group={composed-rule-group-topology-uuid},{composed-rule-group-node-uuid},{composed-rule-group-node-rule-group-uuid}/topology-uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/composed-rule-group={composed-rule-group-topology-uuid},{composed-rule-group-node-uuid},{composed-rule-group-node-rule-group-uuid}/node-uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/composed-rule-group={composed-rule-group-topology-uuid},{composed-rule-group-node-uuid},{composed-rule-group-node-rule-group-uuid}/node-rule-group-uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/rule-type": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/forwarding-rule": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/override-priority": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/local-id": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/name={name-value-name}/value-name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/rule={rule-local-id}/name={name-value-name}/value": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/associated-node-rule-group": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/associated-node-rule-group={associated-node-rule-group-topology-uuid},{associated-node-rule-group-node-uuid},{associated-node-rule-group-node-rule-group-uuid}/topology-uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/associated-node-rule-group={associated-node-rule-group-topology-uuid},{associated-node-rule-group-node-uuid},{associated-node-rule-group-node-rule-group-uuid}/node-uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/associated-node-rule-group={associated-node-rule-group-topology-uuid},{associated-node-rule-group-node-uuid},{associated-node-rule-group-node-rule-group-uuid}/node-rule-group-uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/name={name-value-name}/value-name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/name={name-value-name}/value": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/total-potential-capacity": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/total-potential-capacity/total-size": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/total-potential-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/total-potential-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/available-capacity": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/available-capacity/total-size": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/available-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/available-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/cost-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-value": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-algorithm": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/traffic-property-name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/fixed-latency-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/queing-latency-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/jitter-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/wander-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/risk-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-characteristic-name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-identifier-list": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/name={name-value-name}/value-name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/name={name-value-name}/value": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/total-potential-capacity": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/total-potential-capacity/total-size": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/total-potential-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/total-potential-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/available-capacity": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/available-capacity/total-size": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/available-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/available-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/cost-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-value": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-algorithm": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/latency-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/traffic-property-name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/fixed-latency-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/queing-latency-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/jitter-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/wander-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/risk-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-characteristic-name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-identifier-list": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/encap-topology": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/encap-topology/topology-uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/layer-protocol-name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/name={name-value-name}/value-name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/name={name-value-name}/value": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/administrative-state": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/operational-state": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/lifecycle-state": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/total-potential-capacity": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/total-potential-capacity/total-size": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/total-potential-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/total-potential-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/available-capacity": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/available-capacity/total-size": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/available-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/available-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/cost-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-value": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-algorithm": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/error-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/loss-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/repeat-delivery-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/delivery-order-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/unavailable-time-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/server-integrity-process-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/latency-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/traffic-property-name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/fixed-latency-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/queing-latency-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/jitter-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/node={node-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/wander-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/node-edge-point": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/node-edge-point={node-edge-point-topology-uuid},{node-edge-point-node-uuid},{node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/layer-protocol-name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/direction": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/protection-type": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/restoration-policy": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/name={name-value-name}/value-name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/name={name-value-name}/value": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/administrative-state": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/operational-state": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/lifecycle-state": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/total-potential-capacity": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/total-potential-capacity/total-size": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/total-potential-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/total-potential-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/available-capacity": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/available-capacity/total-size": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/available-capacity/total-size/value": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/available-capacity/total-size/unit": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/cost-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-value": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/cost-characteristic={cost-characteristic-cost-name}/cost-algorithm": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/error-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/loss-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/repeat-delivery-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/delivery-order-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/unavailable-time-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/server-integrity-process-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/latency-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/traffic-property-name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/fixed-latency-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/queing-latency-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/jitter-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/latency-characteristic={latency-characteristic-traffic-property-name}/wander-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/risk-characteristic": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-characteristic-name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/risk-characteristic={risk-characteristic-risk-characteristic-name}/risk-identifier-list": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/validation-mechanism": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/validation-mechanism={validation-mechanism-validation-mechanism}/validation-mechanism": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/validation-mechanism={validation-mechanism-validation-mechanism}/layer-protocol-adjacency-validated": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/validation-mechanism={validation-mechanism-validation-mechanism}/validation-robustness": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/link={link-uuid}/transitioned-layer-protocol-name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/layer-protocol-name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/boundary-node-edge-point": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/boundary-node-edge-point={boundary-node-edge-point-topology-uuid},{boundary-node-edge-point-node-uuid},{boundary-node-edge-point-node-edge-point-uuid}/topology-uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/boundary-node-edge-point={boundary-node-edge-point-topology-uuid},{boundary-node-edge-point-node-uuid},{boundary-node-edge-point-node-edge-point-uuid}/node-uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/boundary-node-edge-point={boundary-node-edge-point-topology-uuid},{boundary-node-edge-point-node-uuid},{boundary-node-edge-point-node-edge-point-uuid}/node-edge-point-uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/uuid": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/name={name-value-name}/value-name": {
    },
    "/data/tapi-topology:get-topology-list/output/topology={topology-uuid}/name={name-value-name}/value": {
    }
  },
  "parameters": {
    "content": {
      "name": "content",
      "in": "query",
      "description": "controlling descendant nodes in response",
      "required": false,
      "type": "string",
      "format": "enumeration",
      "default": "config",
      "enum": [
        "config",
        "nonconfig",
        "all"
      ]
    },
    "depth": {
      "name": "depth",
      "in": "query",
      "description": "limit the depth of nodes in response",
      "required": false,
      "type": "integer",
      "format": "uint16"
    },
    "fields": {
      "name": "fields",
      "in": "query",
      "description": "optionally identify specific data nodes in response",
      "required": false,
      "type": "string",
      "format": "string"
    },
    "filter": {
      "name": "filter",
      "in": "query",
      "description": "xpath expression to filter data nodes in response",
      "required": false,
      "type": "string",
      "format": "string"
    },
    "with-defaults": {
      "name": "with-defaults",
      "in": "query",
      "description": "controlling default values in response",
      "required": false,
      "type": "string",
      "format": "enumeration",
      "default": "report-all",
      "enum": [
        "report-all",
        "trim",
        "explicit",
        "report-all-tagged"
      ]
    },
    "insert": {
      "name": "insert",
      "in": "query",
      "description": "controlling the order when adding new list elements",
      "required": false,
      "type": "string",
      "format": "enumeration",
      "default": "first",
      "enum": [
        "first",
        "last",
        "before",
        "after"
      ]
    },
    "point": {
      "name": "point",
      "in": "query",
      "description": "used to specify the insertion point",
      "required": false,
      "type": "string",
      "format": "string"
    },
    "validation-mechanism-validation-mechanism": {
      "name": "validation-mechanism-validation-mechanism",
      "in": "path",
      "description": "Name of mechanism used to validate adjacency",
      "required": true,
      "type": "string",
      "format": "string"
    },
    "transitioned-layer-protocol-name-id": {
      "name": "transitioned-layer-protocol-name-id",
      "in": "path",
      "description": "Provides the ordered structure of layer protocol transitions encapsulated in the TopologicalEntity. The ordering relates to the LinkPort role.",
      "required": true,
      "type": "string",
      "format": "string"
    },
    "topology-uuid": {
      "name": "topology-uuid",
      "in": "path",
      "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6",
      "required": true,
      "type": "string",
      "format": "string"
    },
    "rule-local-id": {
      "name": "rule-local-id",
      "in": "path",
      "description": "none",
      "required": true,
      "type": "string",
      "format": "string"
    },
    "risk-identifier-list-id": {
      "name": "risk-identifier-list-id",
      "in": "path",
      "description": "A list of the identifiers of each physical/geographic unit (with the specific risk characteristic) that is related to a segment of the TopologicalEntity.",
      "required": true,
      "type": "string",
      "format": "string"
    },
    "risk-characteristic-risk-characteristic-name": {
      "name": "risk-characteristic-risk-characteristic-name",
      "in": "path",
      "description": "The name of the risk characteristic. The characteristic may be related to a specific degree of closeness.\nFor example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).\nDepending upon the importance of the traffic being routed different risk characteristics will be evaluated.",
      "required": true,
      "type": "string",
      "format": "string"
    },
    "operations_tapi-topology_get-topology-list-post-input": {
      "name": "get-topology-list",
      "in": "body",
      "description": "none",
      "required": true,
      "schema": {
        "$ref": "#/definitions/operations_tapi-topology_get-topology-list-post-input"
      }
    },
    "operations_tapi-topology_get-topology-details-post-input": {
      "name": "get-topology-details",
      "in": "body",
      "description": "none",
      "required": true,
      "schema": {
        "$ref": "#/definitions/operations_tapi-topology_get-topology-details-post-input"
      }
    },
    "operations_tapi-topology_get-node-edge-point-details-post-input": {
      "name": "get-node-edge-point-details",
      "in": "body",
      "description": "none",
      "required": true,
      "schema": {
        "$ref": "#/definitions/operations_tapi-topology_get-node-edge-point-details-post-input"
      }
    },
    "operations_tapi-topology_get-node-details-post-input": {
      "name": "get-node-details",
      "in": "body",
      "description": "none",
      "required": true,
      "schema": {
        "$ref": "#/definitions/operations_tapi-topology_get-node-details-post-input"
      }
    },
    "operations_tapi-topology_get-link-details-post-input": {
      "name": "get-link-details",
      "in": "body",
      "description": "none",
      "required": true,
      "schema": {
        "$ref": "#/definitions/operations_tapi-topology_get-link-details-post-input"
      }
    },
    "node-uuid": {
      "name": "node-uuid",
      "in": "path",
      "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6",
      "required": true,
      "type": "string",
      "format": "string"
    },
    "node-rule-group-uuid": {
      "name": "node-rule-group-uuid",
      "in": "path",
      "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6",
      "required": true,
      "type": "string",
      "format": "string"
    },
    "node-edge-point-uuid": {
      "name": "node-edge-point-uuid",
      "in": "path",
      "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6",
      "required": true,
      "type": "string",
      "format": "string"
    },
    "node-edge-point-topology-uuid": {
      "name": "node-edge-point-topology-uuid",
      "in": "path",
      "description": "none",
      "required": true,
      "type": "string",
      "format": "leafref"
    },
    "node-edge-point-node-uuid": {
      "name": "node-edge-point-node-uuid",
      "in": "path",
      "description": "none",
      "required": true,
      "type": "string",
      "format": "leafref"
    },
    "node-edge-point-node-edge-point-uuid": {
      "name": "node-edge-point-node-edge-point-uuid",
      "in": "path",
      "description": "none",
      "required": true,
      "type": "string",
      "format": "leafref"
    },
    "name-value-name": {
      "name": "name-value-name",
      "in": "path",
      "description": "The name of the value. The value need not have a name.",
      "required": true,
      "type": "string",
      "format": "string"
    },
    "mapped-service-interface-point-service-interface-point-uuid": {
      "name": "mapped-service-interface-point-service-interface-point-uuid",
      "in": "path",
      "description": "none",
      "required": true,
      "type": "string",
      "format": "leafref"
    },
    "link-uuid": {
      "name": "link-uuid",
      "in": "path",
      "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6",
      "required": true,
      "type": "string",
      "format": "string"
    },
    "layer-protocol-name-id": {
      "name": "layer-protocol-name-id",
      "in": "path",
      "description": "none",
      "required": true,
      "type": "string",
      "format": "enumeration",
      "default": "ODU",
      "enum": [
        "ODU",
        "ETH",
        "DSR",
        "PHOTONIC_MEDIA"
      ]
    },
    "latency-characteristic-traffic-property-name": {
      "name": "latency-characteristic-traffic-property-name",
      "in": "path",
      "description": "The identifier of the specific traffic property to which the queuing latency applies.",
      "required": true,
      "type": "string",
      "format": "string"
    },
    "inter-rule-group-uuid": {
      "name": "inter-rule-group-uuid",
      "in": "path",
      "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6",
      "required": true,
      "type": "string",
      "format": "string"
    },
    "data_tapi-topology_get-topology-list-post-input": {
      "name": "get-topology-list",
      "in": "body",
      "description": "none",
      "required": true,
      "schema": {
        "$ref": "#/definitions/data_tapi-topology_get-topology-list-post-input"
      }
    },
    "data_tapi-topology_get-topology-details-post-input": {
      "name": "get-topology-details",
      "in": "body",
      "description": "none",
      "required": true,
      "schema": {
        "$ref": "#/definitions/data_tapi-topology_get-topology-details-post-input"
      }
    },
    "data_tapi-topology_get-node-edge-point-details-post-input": {
      "name": "get-node-edge-point-details",
      "in": "body",
      "description": "none",
      "required": true,
      "schema": {
        "$ref": "#/definitions/data_tapi-topology_get-node-edge-point-details-post-input"
      }
    },
    "data_tapi-topology_get-node-details-post-input": {
      "name": "get-node-details",
      "in": "body",
      "description": "none",
      "required": true,
      "schema": {
        "$ref": "#/definitions/data_tapi-topology_get-node-details-post-input"
      }
    },
    "data_tapi-topology_get-link-details-post-input": {
      "name": "get-link-details",
      "in": "body",
      "description": "none",
      "required": true,
      "schema": {
        "$ref": "#/definitions/data_tapi-topology_get-link-details-post-input"
      }
    },
    "data-put-patch": {
      "name": "data",
      "in": "body",
      "description": "\nThis module contains TAPI Topology Model definitions.\nSource: TapiTopology.uml\nCopyright (c) 2018 Open Networking Foundation (ONF). All rights reserved.\nLicense: This module is distributed under the Apache License 2.0\n- The TAPI YANG models included in this TAPI release are a *normative* part of the TAPI SDK.\n- The YANG specifications have been generated from the corresponding UML model using the [ONF EAGLE UML2YANG mapping tool]\n<https://github.com/OpenNetworkingFoundation/EagleUmlYang>\nand further edited manually to comply with the [ONF IISOMI UML2YANG mapping guidelines]\n<https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\n- Status of YANG model artifacts can be determined by referring to the corresponding UML artifacts.\nAs described in the UML models, some artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\n- The ONF TAPI release process does not guarantee backward compatibility of YANG models across major versions of TAPI releases.\nThe YANG model backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\nYANG models included in this release may not be backward compatible with previous TAPI releases.",
      "required": true,
      "schema": {
        "$ref": "#/definitions/data-put-patch"
      }
    },
    "data-post": {
      "name": "data",
      "in": "body",
      "description": "\nThis module contains TAPI Topology Model definitions.\nSource: TapiTopology.uml\nCopyright (c) 2018 Open Networking Foundation (ONF). All rights reserved.\nLicense: This module is distributed under the Apache License 2.0\n- The TAPI YANG models included in this TAPI release are a *normative* part of the TAPI SDK.\n- The YANG specifications have been generated from the corresponding UML model using the [ONF EAGLE UML2YANG mapping tool]\n<https://github.com/OpenNetworkingFoundation/EagleUmlYang>\nand further edited manually to comply with the [ONF IISOMI UML2YANG mapping guidelines]\n<https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\n- Status of YANG model artifacts can be determined by referring to the corresponding UML artifacts.\nAs described in the UML models, some artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\n- The ONF TAPI release process does not guarantee backward compatibility of YANG models across major versions of TAPI releases.\nThe YANG model backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\nYANG models included in this release may not be backward compatible with previous TAPI releases.",
      "required": true,
      "schema": {
        "$ref": "#/definitions/data-post"
      }
    },
    "cost-characteristic-cost-name": {
      "name": "cost-characteristic-cost-name",
      "in": "path",
      "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName.",
      "required": true,
      "type": "string",
      "format": "string"
    },
    "composed-rule-group-topology-uuid": {
      "name": "composed-rule-group-topology-uuid",
      "in": "path",
      "description": "none",
      "required": true,
      "type": "string",
      "format": "leafref"
    },
    "composed-rule-group-node-uuid": {
      "name": "composed-rule-group-node-uuid",
      "in": "path",
      "description": "none",
      "required": true,
      "type": "string",
      "format": "leafref"
    },
    "composed-rule-group-node-rule-group-uuid": {
      "name": "composed-rule-group-node-rule-group-uuid",
      "in": "path",
      "description": "none",
      "required": true,
      "type": "string",
      "format": "leafref"
    },
    "boundary-node-edge-point-topology-uuid": {
      "name": "boundary-node-edge-point-topology-uuid",
      "in": "path",
      "description": "none",
      "required": true,
      "type": "string",
      "format": "leafref"
    },
    "boundary-node-edge-point-node-uuid": {
      "name": "boundary-node-edge-point-node-uuid",
      "in": "path",
      "description": "none",
      "required": true,
      "type": "string",
      "format": "leafref"
    },
    "boundary-node-edge-point-node-edge-point-uuid": {
      "name": "boundary-node-edge-point-node-edge-point-uuid",
      "in": "path",
      "description": "none",
      "required": true,
      "type": "string",
      "format": "leafref"
    },
    "available-cep-layer-protocol-layer-protocol-qualifier": {
      "name": "available-cep-layer-protocol-layer-protocol-qualifier",
      "in": "path",
      "description": "none",
      "required": true,
      "type": "string",
      "format": "identityref"
    },
    "associated-node-rule-group-topology-uuid": {
      "name": "associated-node-rule-group-topology-uuid",
      "in": "path",
      "description": "none",
      "required": true,
      "type": "string",
      "format": "leafref"
    },
    "associated-node-rule-group-node-uuid": {
      "name": "associated-node-rule-group-node-uuid",
      "in": "path",
      "description": "none",
      "required": true,
      "type": "string",
      "format": "leafref"
    },
    "associated-node-rule-group-node-rule-group-uuid": {
      "name": "associated-node-rule-group-node-rule-group-uuid",
      "in": "path",
      "description": "none",
      "required": true,
      "type": "string",
      "format": "leafref"
    },
    "aggregated-node-edge-point-topology-uuid": {
      "name": "aggregated-node-edge-point-topology-uuid",
      "in": "path",
      "description": "none",
      "required": true,
      "type": "string",
      "format": "leafref"
    },
    "aggregated-node-edge-point-node-uuid": {
      "name": "aggregated-node-edge-point-node-uuid",
      "in": "path",
      "description": "none",
      "required": true,
      "type": "string",
      "format": "leafref"
    },
    "aggregated-node-edge-point-node-edge-point-uuid": {
      "name": "aggregated-node-edge-point-node-edge-point-uuid",
      "in": "path",
      "description": "none",
      "required": true,
      "type": "string",
      "format": "leafref"
    }
  },
  "responses": {
    "200": {
      "description": "OK"
    },
    "201": {
      "description": "Created"
    },
    "204": {
      "description": "No Content"
    },
    "400": {
      "description": "Bad Request"
    },
    "401": {
      "description": "Unauthorized"
    },
    "404": {
      "description": "Not Found"
    },
    "405": {
      "description": "Method Not Allowed"
    },
    "409": {
      "description": "Conflict"
    }
  },
  "securityDefinitions": {
    "basicAuth": {
      "type": "basic"
    }
  },
  "definitions": {
    "yang-library-version": {
      "type": "object",
      "properties": {
        "ietf-restconf:yang-library-version": {
          "type": "object",
          "description": "This leaf identifies the revision date of the 'ietf-yang-library' YANG module that is implemented by this server. See RESTCONF RFC 8040 for further information.",
          "x-yang": {
            "type": "leaf"
          },
          "properties": {
          }
        }
      }
    },
    "root": {
      "type": "object",
      "properties": {
        "ietf-restconf:restconf": {
          "type": "object",
          "x-yang": {
            "type": "root"
          },
          "description": "This is the RESTCONF root resource for the RESTCONF datastore and operation resources. See RESTCONF RFC 8040 for further information.",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
              }
            },
            "operations": {
              "type": "object",
              "properties": {
              }
            },
            "yang-library-version": {
              "type": "string"
            }
          }
        }
      }
    },
    "operations_tapi-topology_get-topology-list-post-output": {
      "type": "object",
      "properties": {
        "tapi-topology:topology": {
          "type": "array",
          "description": "none (list)",
          "x-yang": {
            "type": "list"
          },
          "items": {
            "type": "object",
            "properties": {
              "node": {
                "type": "array",
                "description": "none (list)",
                "x-yang": {
                  "type": "list"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "node-edge-point": {
                      "type": "array",
                      "description": "none (list)",
                      "x-yang": {
                        "type": "list"
                      },
                      "items": {
                        "type": "object",
                        "properties": {
                          "layer-protocol-name": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "ODU",
                            "enum": [
                              "ODU",
                              "ETH",
                              "DSR",
                              "PHOTONIC_MEDIA"
                            ]
                          },
                          "available-cep-layer-protocol": {
                            "type": "array",
                            "description": "none (list)",
                            "x-yang": {
                              "type": "list"
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "layer-protocol-qualifier": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "identityref"
                                },
                                "number-of-cep-instances": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "integer",
                                  "format": "uint64"
                                }
                              }
                            }
                          },
                          "aggregated-node-edge-point": {
                            "type": "array",
                            "description": "none (list)",
                            "x-yang": {
                              "type": "list"
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "topology-uuid": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "leafref"
                                },
                                "node-uuid": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "leafref"
                                },
                                "node-edge-point-uuid": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "leafref"
                                }
                              }
                            }
                          },
                          "mapped-service-interface-point": {
                            "type": "array",
                            "description": "NodeEdgePoint mapped to more than ServiceInterfacePoint (slicing/virtualizing) or a ServiceInterfacePoint mapped to more than one NodeEdgePoint (load balancing/Resilience) should be considered experimental (list)",
                            "x-yang": {
                              "type": "list"
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "service-interface-point-uuid": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "leafref"
                                }
                              }
                            }
                          },
                          "link-port-direction": {
                            "description": "The orientation of defined flow at the LinkEnd. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "BIDIRECTIONAL",
                            "enum": [
                              "BIDIRECTIONAL",
                              "INPUT",
                              "OUTPUT",
                              "UNIDENTIFIED_OR_UNKNOWN"
                            ]
                          },
                          "link-port-role": {
                            "description": "Each LinkEnd of the Link has a role (e.g., symmetric, hub, spoke, leaf, root)  in the context of the Link with respect to the Link function.  (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "SYMMETRIC",
                            "enum": [
                              "SYMMETRIC",
                              "ROOT",
                              "LEAF",
                              "TRUNK",
                              "UNKNOWN"
                            ]
                          },
                          "uuid": {
                            "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "name": {
                            "type": "array",
                            "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                            "x-yang": {
                              "type": "list"
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "value-name": {
                                  "description": "The name of the value. The value need not have a name. (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                },
                                "value": {
                                  "description": "The value (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                }
                              }
                            }
                          },
                          "administrative-state": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "LOCKED",
                            "enum": [
                              "LOCKED",
                              "UNLOCKED"
                            ]
                          },
                          "operational-state": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "DISABLED",
                            "enum": [
                              "DISABLED",
                              "ENABLED"
                            ]
                          },
                          "lifecycle-state": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "PLANNED",
                            "enum": [
                              "PLANNED",
                              "POTENTIAL_AVAILABLE",
                              "POTENTIAL_BUSY",
                              "INSTALLED",
                              "PENDING_REMOVAL"
                            ]
                          },
                          "termination-direction": {
                            "description": "The overall directionality of the LP.\n- A BIDIRECTIONAL LP will have some SINK and/or SOURCE flowss.\n- A SINK LP can only contain elements with SINK flows or CONTRA_DIRECTION_SOURCE flows\n- A SOURCE LP can only contain SOURCE flows or CONTRA_DIRECTION_SINK flows (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "BIDIRECTIONAL",
                            "enum": [
                              "BIDIRECTIONAL",
                              "SINK",
                              "SOURCE",
                              "UNDEFINED_OR_UNKNOWN"
                            ]
                          },
                          "termination-state": {
                            "description": "Indicates whether the layer is terminated and if so how. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "LP_CAN_NEVER_TERMINATE",
                            "enum": [
                              "LP_CAN_NEVER_TERMINATE",
                              "LT_NOT_TERMINATED",
                              "TERMINATED_SERVER_TO_CLIENT_FLOW",
                              "TERMINATED_CLIENT_TO_SERVER_FLOW",
                              "TERMINATED_BIDIRECTIONAL",
                              "LT_PERMENANTLY_TERMINATED",
                              "TERMINATION_STATE_UNKNOWN"
                            ]
                          },
                          "total-potential-capacity": {
                            "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
                            "type": "object",
                            "x-yang": {
                              "type": "container",
                              "is_presence": "false"
                            },
                            "properties": {
                              "total-size": {
                                "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                                "type": "object",
                                "x-yang": {
                                  "type": "container",
                                  "is_presence": "false"
                                },
                                "properties": {
                                  "value": {
                                    "description": "none (leaf)",
                                    "x-yang": {
                                      "type": "leaf"
                                    },
                                    "type": "integer",
                                    "format": "uint64"
                                  },
                                  "unit": {
                                    "description": "none (leaf)",
                                    "x-yang": {
                                      "type": "leaf"
                                    },
                                    "type": "string",
                                    "format": "enumeration",
                                    "default": "TB",
                                    "enum": [
                                      "TB",
                                      "TBPS",
                                      "GB",
                                      "GBPS",
                                      "MB",
                                      "MBPS",
                                      "KB",
                                      "KBPS",
                                      "GHz",
                                      "MHz"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "available-capacity": {
                            "description": "Capacity available to be assigned. (non-presence)",
                            "type": "object",
                            "x-yang": {
                              "type": "container",
                              "is_presence": "false"
                            },
                            "properties": {
                              "total-size": {
                                "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                                "type": "object",
                                "x-yang": {
                                  "type": "container",
                                  "is_presence": "false"
                                },
                                "properties": {
                                  "value": {
                                    "description": "none (leaf)",
                                    "x-yang": {
                                      "type": "leaf"
                                    },
                                    "type": "integer",
                                    "format": "uint64"
                                  },
                                  "unit": {
                                    "description": "none (leaf)",
                                    "x-yang": {
                                      "type": "leaf"
                                    },
                                    "type": "string",
                                    "format": "enumeration",
                                    "default": "TB",
                                    "enum": [
                                      "TB",
                                      "TBPS",
                                      "GB",
                                      "GBPS",
                                      "MB",
                                      "MBPS",
                                      "KB",
                                      "KBPS",
                                      "GHz",
                                      "MHz"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "aggregated-node-edge-point": {
                      "type": "array",
                      "description": "none (list)",
                      "x-yang": {
                        "type": "list"
                      },
                      "items": {
                        "type": "object",
                        "properties": {
                          "topology-uuid": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "leafref"
                          },
                          "node-uuid": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "leafref"
                          },
                          "node-edge-point-uuid": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "leafref"
                          }
                        }
                      }
                    },
                    "node-rule-group": {
                      "type": "array",
                      "description": "none (list)",
                      "x-yang": {
                        "type": "list"
                      },
                      "items": {
                        "type": "object",
                        "properties": {
                          "rule": {
                            "type": "array",
                            "description": "none (list)",
                            "x-yang": {
                              "type": "list"
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "rule-type": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "enumeration",
                                  "default": "FORWARDING",
                                  "enum": [
                                    "FORWARDING",
                                    "CAPACITY",
                                    "COST",
                                    "TIMING",
                                    "RISK",
                                    "GROUPING"
                                  ]
                                },
                                "forwarding-rule": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "enumeration",
                                  "default": "MAY_FORWARD_ACROSS_GROUP",
                                  "enum": [
                                    "MAY_FORWARD_ACROSS_GROUP",
                                    "MUST_FORWARD_ACROSS_GROUP",
                                    "CANNOT_FORWARD_ACROSS_GROUP",
                                    "NO_STATEMENT_ON_FORWARDING"
                                  ]
                                },
                                "override-priority": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "integer",
                                  "format": "uint64"
                                },
                                "local-id": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                },
                                "name": {
                                  "type": "array",
                                  "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                                  "x-yang": {
                                    "type": "list"
                                  },
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "value-name": {
                                        "description": "The name of the value. The value need not have a name. (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "string"
                                      },
                                      "value": {
                                        "description": "The value (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "node-edge-point": {
                            "type": "array",
                            "description": "none (list)",
                            "x-yang": {
                              "type": "list"
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "topology-uuid": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "leafref"
                                },
                                "node-uuid": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "leafref"
                                },
                                "node-edge-point-uuid": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "leafref"
                                }
                              }
                            }
                          },
                          "composed-rule-group": {
                            "type": "array",
                            "description": "none (list)",
                            "x-yang": {
                              "type": "list"
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "topology-uuid": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "leafref"
                                },
                                "node-uuid": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "leafref"
                                },
                                "node-rule-group-uuid": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "leafref"
                                }
                              }
                            }
                          },
                          "inter-rule-group": {
                            "type": "array",
                            "description": "none (list)",
                            "x-yang": {
                              "type": "list"
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "rule": {
                                  "type": "array",
                                  "description": "none (list)",
                                  "x-yang": {
                                    "type": "list"
                                  },
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "rule-type": {
                                        "description": "none (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "enumeration",
                                        "default": "FORWARDING",
                                        "enum": [
                                          "FORWARDING",
                                          "CAPACITY",
                                          "COST",
                                          "TIMING",
                                          "RISK",
                                          "GROUPING"
                                        ]
                                      },
                                      "forwarding-rule": {
                                        "description": "none (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "enumeration",
                                        "default": "MAY_FORWARD_ACROSS_GROUP",
                                        "enum": [
                                          "MAY_FORWARD_ACROSS_GROUP",
                                          "MUST_FORWARD_ACROSS_GROUP",
                                          "CANNOT_FORWARD_ACROSS_GROUP",
                                          "NO_STATEMENT_ON_FORWARDING"
                                        ]
                                      },
                                      "override-priority": {
                                        "description": "none (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "integer",
                                        "format": "uint64"
                                      },
                                      "local-id": {
                                        "description": "none (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "string"
                                      },
                                      "name": {
                                        "type": "array",
                                        "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                                        "x-yang": {
                                          "type": "list"
                                        },
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "value-name": {
                                              "description": "The name of the value. The value need not have a name. (leaf)",
                                              "x-yang": {
                                                "type": "leaf"
                                              },
                                              "type": "string",
                                              "format": "string"
                                            },
                                            "value": {
                                              "description": "The value (leaf)",
                                              "x-yang": {
                                                "type": "leaf"
                                              },
                                              "type": "string",
                                              "format": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "associated-node-rule-group": {
                                  "type": "array",
                                  "description": "none (list)",
                                  "x-yang": {
                                    "type": "list"
                                  },
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "topology-uuid": {
                                        "description": "none (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "leafref"
                                      },
                                      "node-uuid": {
                                        "description": "none (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "leafref"
                                      },
                                      "node-rule-group-uuid": {
                                        "description": "none (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "leafref"
                                      }
                                    }
                                  }
                                },
                                "uuid": {
                                  "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                },
                                "name": {
                                  "type": "array",
                                  "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                                  "x-yang": {
                                    "type": "list"
                                  },
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "value-name": {
                                        "description": "The name of the value. The value need not have a name. (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "string"
                                      },
                                      "value": {
                                        "description": "The value (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "string"
                                      }
                                    }
                                  }
                                },
                                "total-potential-capacity": {
                                  "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
                                  "type": "object",
                                  "x-yang": {
                                    "type": "container",
                                    "is_presence": "false"
                                  },
                                  "properties": {
                                    "total-size": {
                                      "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                                      "type": "object",
                                      "x-yang": {
                                        "type": "container",
                                        "is_presence": "false"
                                      },
                                      "properties": {
                                        "value": {
                                          "description": "none (leaf)",
                                          "x-yang": {
                                            "type": "leaf"
                                          },
                                          "type": "integer",
                                          "format": "uint64"
                                        },
                                        "unit": {
                                          "description": "none (leaf)",
                                          "x-yang": {
                                            "type": "leaf"
                                          },
                                          "type": "string",
                                          "format": "enumeration",
                                          "default": "TB",
                                          "enum": [
                                            "TB",
                                            "TBPS",
                                            "GB",
                                            "GBPS",
                                            "MB",
                                            "MBPS",
                                            "KB",
                                            "KBPS",
                                            "GHz",
                                            "MHz"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                },
                                "available-capacity": {
                                  "description": "Capacity available to be assigned. (non-presence)",
                                  "type": "object",
                                  "x-yang": {
                                    "type": "container",
                                    "is_presence": "false"
                                  },
                                  "properties": {
                                    "total-size": {
                                      "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                                      "type": "object",
                                      "x-yang": {
                                        "type": "container",
                                        "is_presence": "false"
                                      },
                                      "properties": {
                                        "value": {
                                          "description": "none (leaf)",
                                          "x-yang": {
                                            "type": "leaf"
                                          },
                                          "type": "integer",
                                          "format": "uint64"
                                        },
                                        "unit": {
                                          "description": "none (leaf)",
                                          "x-yang": {
                                            "type": "leaf"
                                          },
                                          "type": "string",
                                          "format": "enumeration",
                                          "default": "TB",
                                          "enum": [
                                            "TB",
                                            "TBPS",
                                            "GB",
                                            "GBPS",
                                            "MB",
                                            "MBPS",
                                            "KB",
                                            "KBPS",
                                            "GHz",
                                            "MHz"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                },
                                "cost-characteristic": {
                                  "type": "array",
                                  "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity. (list)",
                                  "x-yang": {
                                    "type": "list"
                                  },
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "cost-name": {
                                        "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName. (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "string"
                                      },
                                      "cost-value": {
                                        "description": "The specific cost. (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "string"
                                      },
                                      "cost-algorithm": {
                                        "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm. (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "string"
                                      }
                                    }
                                  }
                                },
                                "latency-characteristic": {
                                  "type": "array",
                                  "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic. (list)",
                                  "x-yang": {
                                    "type": "list"
                                  },
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "traffic-property-name": {
                                        "description": "The identifier of the specific traffic property to which the queuing latency applies. (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "string"
                                      },
                                      "fixed-latency-characteristic": {
                                        "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "string"
                                      },
                                      "queing-latency-characteristic": {
                                        "description": "The specific queuing latency for the traffic property. (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "string"
                                      },
                                      "jitter-characteristic": {
                                        "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "string"
                                      },
                                      "wander-characteristic": {
                                        "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "string"
                                      }
                                    }
                                  }
                                },
                                "risk-characteristic": {
                                  "type": "array",
                                  "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration. (list)",
                                  "x-yang": {
                                    "type": "list"
                                  },
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "risk-characteristic-name": {
                                        "description": "The name of the risk characteristic. The characteristic may be related to a specific degree of closeness.\nFor example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).\nDepending upon the importance of the traffic being routed different risk characteristics will be evaluated. (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "string"
                                      },
                                      "risk-identifier-list": {
                                        "type": "array",
                                        "x-yang": {
                                          "type": "leaf-list"
                                        },
                                        "items": {
                                          "description": "A list of the identifiers of each physical/geographic unit (with the specific risk characteristic) that is related to a segment of the TopologicalEntity. (leaf-list)",
                                          "type": "string",
                                          "format": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "uuid": {
                            "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "name": {
                            "type": "array",
                            "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                            "x-yang": {
                              "type": "list"
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "value-name": {
                                  "description": "The name of the value. The value need not have a name. (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                },
                                "value": {
                                  "description": "The value (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                }
                              }
                            }
                          },
                          "total-potential-capacity": {
                            "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
                            "type": "object",
                            "x-yang": {
                              "type": "container",
                              "is_presence": "false"
                            },
                            "properties": {
                              "total-size": {
                                "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                                "type": "object",
                                "x-yang": {
                                  "type": "container",
                                  "is_presence": "false"
                                },
                                "properties": {
                                  "value": {
                                    "description": "none (leaf)",
                                    "x-yang": {
                                      "type": "leaf"
                                    },
                                    "type": "integer",
                                    "format": "uint64"
                                  },
                                  "unit": {
                                    "description": "none (leaf)",
                                    "x-yang": {
                                      "type": "leaf"
                                    },
                                    "type": "string",
                                    "format": "enumeration",
                                    "default": "TB",
                                    "enum": [
                                      "TB",
                                      "TBPS",
                                      "GB",
                                      "GBPS",
                                      "MB",
                                      "MBPS",
                                      "KB",
                                      "KBPS",
                                      "GHz",
                                      "MHz"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "available-capacity": {
                            "description": "Capacity available to be assigned. (non-presence)",
                            "type": "object",
                            "x-yang": {
                              "type": "container",
                              "is_presence": "false"
                            },
                            "properties": {
                              "total-size": {
                                "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                                "type": "object",
                                "x-yang": {
                                  "type": "container",
                                  "is_presence": "false"
                                },
                                "properties": {
                                  "value": {
                                    "description": "none (leaf)",
                                    "x-yang": {
                                      "type": "leaf"
                                    },
                                    "type": "integer",
                                    "format": "uint64"
                                  },
                                  "unit": {
                                    "description": "none (leaf)",
                                    "x-yang": {
                                      "type": "leaf"
                                    },
                                    "type": "string",
                                    "format": "enumeration",
                                    "default": "TB",
                                    "enum": [
                                      "TB",
                                      "TBPS",
                                      "GB",
                                      "GBPS",
                                      "MB",
                                      "MBPS",
                                      "KB",
                                      "KBPS",
                                      "GHz",
                                      "MHz"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "cost-characteristic": {
                            "type": "array",
                            "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity. (list)",
                            "x-yang": {
                              "type": "list"
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "cost-name": {
                                  "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName. (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                },
                                "cost-value": {
                                  "description": "The specific cost. (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                },
                                "cost-algorithm": {
                                  "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm. (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                }
                              }
                            }
                          },
                          "latency-characteristic": {
                            "type": "array",
                            "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic. (list)",
                            "x-yang": {
                              "type": "list"
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "traffic-property-name": {
                                  "description": "The identifier of the specific traffic property to which the queuing latency applies. (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                },
                                "fixed-latency-characteristic": {
                                  "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                },
                                "queing-latency-characteristic": {
                                  "description": "The specific queuing latency for the traffic property. (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                },
                                "jitter-characteristic": {
                                  "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                },
                                "wander-characteristic": {
                                  "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                }
                              }
                            }
                          },
                          "risk-characteristic": {
                            "type": "array",
                            "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration. (list)",
                            "x-yang": {
                              "type": "list"
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "risk-characteristic-name": {
                                  "description": "The name of the risk characteristic. The characteristic may be related to a specific degree of closeness.\nFor example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).\nDepending upon the importance of the traffic being routed different risk characteristics will be evaluated. (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                },
                                "risk-identifier-list": {
                                  "type": "array",
                                  "x-yang": {
                                    "type": "leaf-list"
                                  },
                                  "items": {
                                    "description": "A list of the identifiers of each physical/geographic unit (with the specific risk characteristic) that is related to a segment of the TopologicalEntity. (leaf-list)",
                                    "type": "string",
                                    "format": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "encap-topology": {
                      "description": "none (non-presence)",
                      "type": "object",
                      "x-yang": {
                        "type": "container",
                        "is_presence": "false"
                      },
                      "properties": {
                        "topology-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        }
                      }
                    },
                    "layer-protocol-name": {
                      "type": "array",
                      "x-yang": {
                        "type": "leaf-list"
                      },
                      "items": {
                        "description": "none (leaf-list)",
                        "type": "string",
                        "format": "enumeration",
                        "default": "ODU",
                        "enum": [
                          "ODU",
                          "ETH",
                          "DSR",
                          "PHOTONIC_MEDIA"
                        ]
                      }
                    },
                    "uuid": {
                      "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "name": {
                      "type": "array",
                      "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                      "x-yang": {
                        "type": "list"
                      },
                      "items": {
                        "type": "object",
                        "properties": {
                          "value-name": {
                            "description": "The name of the value. The value need not have a name. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "value": {
                            "description": "The value (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          }
                        }
                      }
                    },
                    "administrative-state": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "LOCKED",
                      "enum": [
                        "LOCKED",
                        "UNLOCKED"
                      ]
                    },
                    "operational-state": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "DISABLED",
                      "enum": [
                        "DISABLED",
                        "ENABLED"
                      ]
                    },
                    "lifecycle-state": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "PLANNED",
                      "enum": [
                        "PLANNED",
                        "POTENTIAL_AVAILABLE",
                        "POTENTIAL_BUSY",
                        "INSTALLED",
                        "PENDING_REMOVAL"
                      ]
                    },
                    "total-potential-capacity": {
                      "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
                      "type": "object",
                      "x-yang": {
                        "type": "container",
                        "is_presence": "false"
                      },
                      "properties": {
                        "total-size": {
                          "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                          "type": "object",
                          "x-yang": {
                            "type": "container",
                            "is_presence": "false"
                          },
                          "properties": {
                            "value": {
                              "description": "none (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "integer",
                              "format": "uint64"
                            },
                            "unit": {
                              "description": "none (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "string",
                              "format": "enumeration",
                              "default": "TB",
                              "enum": [
                                "TB",
                                "TBPS",
                                "GB",
                                "GBPS",
                                "MB",
                                "MBPS",
                                "KB",
                                "KBPS",
                                "GHz",
                                "MHz"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "available-capacity": {
                      "description": "Capacity available to be assigned. (non-presence)",
                      "type": "object",
                      "x-yang": {
                        "type": "container",
                        "is_presence": "false"
                      },
                      "properties": {
                        "total-size": {
                          "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                          "type": "object",
                          "x-yang": {
                            "type": "container",
                            "is_presence": "false"
                          },
                          "properties": {
                            "value": {
                              "description": "none (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "integer",
                              "format": "uint64"
                            },
                            "unit": {
                              "description": "none (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "string",
                              "format": "enumeration",
                              "default": "TB",
                              "enum": [
                                "TB",
                                "TBPS",
                                "GB",
                                "GBPS",
                                "MB",
                                "MBPS",
                                "KB",
                                "KBPS",
                                "GHz",
                                "MHz"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "cost-characteristic": {
                      "type": "array",
                      "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity. (list)",
                      "x-yang": {
                        "type": "list"
                      },
                      "items": {
                        "type": "object",
                        "properties": {
                          "cost-name": {
                            "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "cost-value": {
                            "description": "The specific cost. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "cost-algorithm": {
                            "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          }
                        }
                      }
                    },
                    "error-characteristic": {
                      "description": "Describes the degree to which the signal propagated can be errored.\nApplies to TDM systems as the errored signal will be propagated and not packet as errored packets will be discarded. (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "loss-characteristic": {
                      "description": "Describes the acceptable characteristic of lost packets where loss may result from discard due to errors or overflow.\nApplies to packet systems and not TDM (as for TDM errored signals are propagated unless grossly errored and overflow/underflow turns into timing slips). (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "repeat-delivery-characteristic": {
                      "description": "Primarily applies to packet systems where a packet may be delivered more than once (in fault recovery for example).\nIt can also apply to TDM where several frames may be received twice due to switching in a system with a large differential propagation delay. (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "delivery-order-characteristic": {
                      "description": "Describes the degree to which packets will be delivered out of sequence.\nDoes not apply to TDM as the TDM protocols maintain strict order. (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "unavailable-time-characteristic": {
                      "description": "Describes the duration for which there may be no valid signal propagated. (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "server-integrity-process-characteristic": {
                      "description": "Describes the effect of any server integrity enhancement process on the characteristics of the TopologicalEntity. (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "latency-characteristic": {
                      "type": "array",
                      "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic. (list)",
                      "x-yang": {
                        "type": "list"
                      },
                      "items": {
                        "type": "object",
                        "properties": {
                          "traffic-property-name": {
                            "description": "The identifier of the specific traffic property to which the queuing latency applies. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "fixed-latency-characteristic": {
                            "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "queing-latency-characteristic": {
                            "description": "The specific queuing latency for the traffic property. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "jitter-characteristic": {
                            "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "wander-characteristic": {
                            "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "link": {
                "type": "array",
                "description": "none (list)",
                "x-yang": {
                  "type": "list"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "node-edge-point": {
                      "type": "array",
                      "description": "none (list)",
                      "x-yang": {
                        "type": "list"
                      },
                      "items": {
                        "type": "object",
                        "properties": {
                          "topology-uuid": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "leafref"
                          },
                          "node-uuid": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "leafref"
                          },
                          "node-edge-point-uuid": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "leafref"
                          }
                        }
                      }
                    },
                    "layer-protocol-name": {
                      "type": "array",
                      "x-yang": {
                        "type": "leaf-list"
                      },
                      "items": {
                        "description": "none (leaf-list)",
                        "type": "string",
                        "format": "enumeration",
                        "default": "ODU",
                        "enum": [
                          "ODU",
                          "ETH",
                          "DSR",
                          "PHOTONIC_MEDIA"
                        ]
                      }
                    },
                    "direction": {
                      "description": "The directionality of the Link.\nIs applicable to simple Links where all LinkEnds are BIDIRECTIONAL (the Link will be BIDIRECTIONAL) or UNIDIRECTIONAL (the Link will be UNIDIRECTIONAL).\nIs not present in more complex cases. (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "BIDIRECTIONAL",
                      "enum": [
                        "BIDIRECTIONAL",
                        "UNIDIRECTIONAL",
                        "UNDEFINED_OR_UNKNOWN"
                      ]
                    },
                    "protection-type": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "NO_PROTECTION",
                      "enum": [
                        "NO_PROTECTION",
                        "ONE_PLUS_ONE_PROTECTION",
                        "ONE_FOR_ONE_PROTECTION",
                        "ONE_FOR_N_PROTECTION",
                        "M_FOR_N_PROTECTION",
                        "ONE_FOR_ONE_BY_N"
                      ]
                    },
                    "restoration-policy": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "PER_DOMAIN_RESTORATION",
                      "enum": [
                        "PER_DOMAIN_RESTORATION",
                        "END_TO_END_RESTORATION",
                        "NA",
                        "DYNAMIC_RESTORATION",
                        "PRE_COMPUTED_RESTORATION"
                      ]
                    },
                    "uuid": {
                      "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "name": {
                      "type": "array",
                      "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                      "x-yang": {
                        "type": "list"
                      },
                      "items": {
                        "type": "object",
                        "properties": {
                          "value-name": {
                            "description": "The name of the value. The value need not have a name. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "value": {
                            "description": "The value (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          }
                        }
                      }
                    },
                    "administrative-state": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "LOCKED",
                      "enum": [
                        "LOCKED",
                        "UNLOCKED"
                      ]
                    },
                    "operational-state": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "DISABLED",
                      "enum": [
                        "DISABLED",
                        "ENABLED"
                      ]
                    },
                    "lifecycle-state": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "PLANNED",
                      "enum": [
                        "PLANNED",
                        "POTENTIAL_AVAILABLE",
                        "POTENTIAL_BUSY",
                        "INSTALLED",
                        "PENDING_REMOVAL"
                      ]
                    },
                    "total-potential-capacity": {
                      "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
                      "type": "object",
                      "x-yang": {
                        "type": "container",
                        "is_presence": "false"
                      },
                      "properties": {
                        "total-size": {
                          "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                          "type": "object",
                          "x-yang": {
                            "type": "container",
                            "is_presence": "false"
                          },
                          "properties": {
                            "value": {
                              "description": "none (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "integer",
                              "format": "uint64"
                            },
                            "unit": {
                              "description": "none (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "string",
                              "format": "enumeration",
                              "default": "TB",
                              "enum": [
                                "TB",
                                "TBPS",
                                "GB",
                                "GBPS",
                                "MB",
                                "MBPS",
                                "KB",
                                "KBPS",
                                "GHz",
                                "MHz"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "available-capacity": {
                      "description": "Capacity available to be assigned. (non-presence)",
                      "type": "object",
                      "x-yang": {
                        "type": "container",
                        "is_presence": "false"
                      },
                      "properties": {
                        "total-size": {
                          "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                          "type": "object",
                          "x-yang": {
                            "type": "container",
                            "is_presence": "false"
                          },
                          "properties": {
                            "value": {
                              "description": "none (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "integer",
                              "format": "uint64"
                            },
                            "unit": {
                              "description": "none (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "string",
                              "format": "enumeration",
                              "default": "TB",
                              "enum": [
                                "TB",
                                "TBPS",
                                "GB",
                                "GBPS",
                                "MB",
                                "MBPS",
                                "KB",
                                "KBPS",
                                "GHz",
                                "MHz"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "cost-characteristic": {
                      "type": "array",
                      "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity. (list)",
                      "x-yang": {
                        "type": "list"
                      },
                      "items": {
                        "type": "object",
                        "properties": {
                          "cost-name": {
                            "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "cost-value": {
                            "description": "The specific cost. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "cost-algorithm": {
                            "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          }
                        }
                      }
                    },
                    "error-characteristic": {
                      "description": "Describes the degree to which the signal propagated can be errored.\nApplies to TDM systems as the errored signal will be propagated and not packet as errored packets will be discarded. (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "loss-characteristic": {
                      "description": "Describes the acceptable characteristic of lost packets where loss may result from discard due to errors or overflow.\nApplies to packet systems and not TDM (as for TDM errored signals are propagated unless grossly errored and overflow/underflow turns into timing slips). (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "repeat-delivery-characteristic": {
                      "description": "Primarily applies to packet systems where a packet may be delivered more than once (in fault recovery for example).\nIt can also apply to TDM where several frames may be received twice due to switching in a system with a large differential propagation delay. (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "delivery-order-characteristic": {
                      "description": "Describes the degree to which packets will be delivered out of sequence.\nDoes not apply to TDM as the TDM protocols maintain strict order. (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "unavailable-time-characteristic": {
                      "description": "Describes the duration for which there may be no valid signal propagated. (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "server-integrity-process-characteristic": {
                      "description": "Describes the effect of any server integrity enhancement process on the characteristics of the TopologicalEntity. (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "latency-characteristic": {
                      "type": "array",
                      "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic. (list)",
                      "x-yang": {
                        "type": "list"
                      },
                      "items": {
                        "type": "object",
                        "properties": {
                          "traffic-property-name": {
                            "description": "The identifier of the specific traffic property to which the queuing latency applies. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "fixed-latency-characteristic": {
                            "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "queing-latency-characteristic": {
                            "description": "The specific queuing latency for the traffic property. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "jitter-characteristic": {
                            "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "wander-characteristic": {
                            "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          }
                        }
                      }
                    },
                    "risk-characteristic": {
                      "type": "array",
                      "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration. (list)",
                      "x-yang": {
                        "type": "list"
                      },
                      "items": {
                        "type": "object",
                        "properties": {
                          "risk-characteristic-name": {
                            "description": "The name of the risk characteristic. The characteristic may be related to a specific degree of closeness.\nFor example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).\nDepending upon the importance of the traffic being routed different risk characteristics will be evaluated. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "risk-identifier-list": {
                            "type": "array",
                            "x-yang": {
                              "type": "leaf-list"
                            },
                            "items": {
                              "description": "A list of the identifiers of each physical/geographic unit (with the specific risk characteristic) that is related to a segment of the TopologicalEntity. (leaf-list)",
                              "type": "string",
                              "format": "string"
                            }
                          }
                        }
                      }
                    },
                    "validation-mechanism": {
                      "type": "array",
                      "description": "Provides details of the specific validation mechanism(s) used to confirm the presence of an intended topologicalEntity. (list)",
                      "x-yang": {
                        "type": "list"
                      },
                      "items": {
                        "type": "object",
                        "properties": {
                          "validation-mechanism": {
                            "description": "Name of mechanism used to validate adjacency (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "layer-protocol-adjacency-validated": {
                            "description": "State of validatiion (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "validation-robustness": {
                            "description": "Quality of validation (i.e. how likely is the stated validation to be invalid) (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          }
                        }
                      }
                    },
                    "transitioned-layer-protocol-name": {
                      "type": "array",
                      "x-yang": {
                        "type": "leaf-list"
                      },
                      "items": {
                        "description": "Provides the ordered structure of layer protocol transitions encapsulated in the TopologicalEntity. The ordering relates to the LinkPort role. (leaf-list)",
                        "type": "string",
                        "format": "string"
                      }
                    }
                  }
                }
              },
              "layer-protocol-name": {
                "type": "array",
                "x-yang": {
                  "type": "leaf-list"
                },
                "items": {
                  "description": "none (leaf-list)",
                  "type": "string",
                  "format": "enumeration",
                  "default": "ODU",
                  "enum": [
                    "ODU",
                    "ETH",
                    "DSR",
                    "PHOTONIC_MEDIA"
                  ]
                }
              },
              "boundary-node-edge-point": {
                "type": "array",
                "description": "none (list)",
                "x-yang": {
                  "type": "list"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "topology-uuid": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "leafref"
                    },
                    "node-uuid": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "leafref"
                    },
                    "node-edge-point-uuid": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "leafref"
                    }
                  }
                }
              },
              "uuid": {
                "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "string",
                "format": "string"
              },
              "name": {
                "type": "array",
                "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                "x-yang": {
                  "type": "list"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "value-name": {
                      "description": "The name of the value. The value need not have a name. (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "value": {
                      "description": "The value (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "operations_tapi-topology_get-topology-list-post-input": {
      "type": "object",
      "properties": {
      }
    },
    "operations_tapi-topology_get-topology-details-post-output": {
      "type": "object",
      "properties": {
        "tapi-topology:topology": {
          "description": "none (non-presence)",
          "type": "object",
          "x-yang": {
            "type": "container",
            "is_presence": "false"
          },
          "properties": {
            "node": {
              "type": "array",
              "description": "none (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "node-edge-point": {
                    "type": "array",
                    "description": "none (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "layer-protocol-name": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "enumeration",
                          "default": "ODU",
                          "enum": [
                            "ODU",
                            "ETH",
                            "DSR",
                            "PHOTONIC_MEDIA"
                          ]
                        },
                        "available-cep-layer-protocol": {
                          "type": "array",
                          "description": "none (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "layer-protocol-qualifier": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "identityref"
                              },
                              "number-of-cep-instances": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "integer",
                                "format": "uint64"
                              }
                            }
                          }
                        },
                        "aggregated-node-edge-point": {
                          "type": "array",
                          "description": "none (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "topology-uuid": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "leafref"
                              },
                              "node-uuid": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "leafref"
                              },
                              "node-edge-point-uuid": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "leafref"
                              }
                            }
                          }
                        },
                        "mapped-service-interface-point": {
                          "type": "array",
                          "description": "NodeEdgePoint mapped to more than ServiceInterfacePoint (slicing/virtualizing) or a ServiceInterfacePoint mapped to more than one NodeEdgePoint (load balancing/Resilience) should be considered experimental (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "service-interface-point-uuid": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "leafref"
                              }
                            }
                          }
                        },
                        "link-port-direction": {
                          "description": "The orientation of defined flow at the LinkEnd. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "enumeration",
                          "default": "BIDIRECTIONAL",
                          "enum": [
                            "BIDIRECTIONAL",
                            "INPUT",
                            "OUTPUT",
                            "UNIDENTIFIED_OR_UNKNOWN"
                          ]
                        },
                        "link-port-role": {
                          "description": "Each LinkEnd of the Link has a role (e.g., symmetric, hub, spoke, leaf, root)  in the context of the Link with respect to the Link function.  (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "enumeration",
                          "default": "SYMMETRIC",
                          "enum": [
                            "SYMMETRIC",
                            "ROOT",
                            "LEAF",
                            "TRUNK",
                            "UNKNOWN"
                          ]
                        },
                        "uuid": {
                          "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "name": {
                          "type": "array",
                          "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "value-name": {
                                "description": "The name of the value. The value need not have a name. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "value": {
                                "description": "The value (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              }
                            }
                          }
                        },
                        "administrative-state": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "enumeration",
                          "default": "LOCKED",
                          "enum": [
                            "LOCKED",
                            "UNLOCKED"
                          ]
                        },
                        "operational-state": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "enumeration",
                          "default": "DISABLED",
                          "enum": [
                            "DISABLED",
                            "ENABLED"
                          ]
                        },
                        "lifecycle-state": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "enumeration",
                          "default": "PLANNED",
                          "enum": [
                            "PLANNED",
                            "POTENTIAL_AVAILABLE",
                            "POTENTIAL_BUSY",
                            "INSTALLED",
                            "PENDING_REMOVAL"
                          ]
                        },
                        "termination-direction": {
                          "description": "The overall directionality of the LP.\n- A BIDIRECTIONAL LP will have some SINK and/or SOURCE flowss.\n- A SINK LP can only contain elements with SINK flows or CONTRA_DIRECTION_SOURCE flows\n- A SOURCE LP can only contain SOURCE flows or CONTRA_DIRECTION_SINK flows (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "enumeration",
                          "default": "BIDIRECTIONAL",
                          "enum": [
                            "BIDIRECTIONAL",
                            "SINK",
                            "SOURCE",
                            "UNDEFINED_OR_UNKNOWN"
                          ]
                        },
                        "termination-state": {
                          "description": "Indicates whether the layer is terminated and if so how. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "enumeration",
                          "default": "LP_CAN_NEVER_TERMINATE",
                          "enum": [
                            "LP_CAN_NEVER_TERMINATE",
                            "LT_NOT_TERMINATED",
                            "TERMINATED_SERVER_TO_CLIENT_FLOW",
                            "TERMINATED_CLIENT_TO_SERVER_FLOW",
                            "TERMINATED_BIDIRECTIONAL",
                            "LT_PERMENANTLY_TERMINATED",
                            "TERMINATION_STATE_UNKNOWN"
                          ]
                        },
                        "total-potential-capacity": {
                          "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
                          "type": "object",
                          "x-yang": {
                            "type": "container",
                            "is_presence": "false"
                          },
                          "properties": {
                            "total-size": {
                              "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                              "type": "object",
                              "x-yang": {
                                "type": "container",
                                "is_presence": "false"
                              },
                              "properties": {
                                "value": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "integer",
                                  "format": "uint64"
                                },
                                "unit": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "enumeration",
                                  "default": "TB",
                                  "enum": [
                                    "TB",
                                    "TBPS",
                                    "GB",
                                    "GBPS",
                                    "MB",
                                    "MBPS",
                                    "KB",
                                    "KBPS",
                                    "GHz",
                                    "MHz"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "available-capacity": {
                          "description": "Capacity available to be assigned. (non-presence)",
                          "type": "object",
                          "x-yang": {
                            "type": "container",
                            "is_presence": "false"
                          },
                          "properties": {
                            "total-size": {
                              "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                              "type": "object",
                              "x-yang": {
                                "type": "container",
                                "is_presence": "false"
                              },
                              "properties": {
                                "value": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "integer",
                                  "format": "uint64"
                                },
                                "unit": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "enumeration",
                                  "default": "TB",
                                  "enum": [
                                    "TB",
                                    "TBPS",
                                    "GB",
                                    "GBPS",
                                    "MB",
                                    "MBPS",
                                    "KB",
                                    "KBPS",
                                    "GHz",
                                    "MHz"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "aggregated-node-edge-point": {
                    "type": "array",
                    "description": "none (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "topology-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        },
                        "node-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        },
                        "node-edge-point-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        }
                      }
                    }
                  },
                  "node-rule-group": {
                    "type": "array",
                    "description": "none (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "rule": {
                          "type": "array",
                          "description": "none (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "rule-type": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "enumeration",
                                "default": "FORWARDING",
                                "enum": [
                                  "FORWARDING",
                                  "CAPACITY",
                                  "COST",
                                  "TIMING",
                                  "RISK",
                                  "GROUPING"
                                ]
                              },
                              "forwarding-rule": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "enumeration",
                                "default": "MAY_FORWARD_ACROSS_GROUP",
                                "enum": [
                                  "MAY_FORWARD_ACROSS_GROUP",
                                  "MUST_FORWARD_ACROSS_GROUP",
                                  "CANNOT_FORWARD_ACROSS_GROUP",
                                  "NO_STATEMENT_ON_FORWARDING"
                                ]
                              },
                              "override-priority": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "integer",
                                "format": "uint64"
                              },
                              "local-id": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "name": {
                                "type": "array",
                                "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                                "x-yang": {
                                  "type": "list"
                                },
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "value-name": {
                                      "description": "The name of the value. The value need not have a name. (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    },
                                    "value": {
                                      "description": "The value (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "node-edge-point": {
                          "type": "array",
                          "description": "none (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "topology-uuid": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "leafref"
                              },
                              "node-uuid": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "leafref"
                              },
                              "node-edge-point-uuid": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "leafref"
                              }
                            }
                          }
                        },
                        "composed-rule-group": {
                          "type": "array",
                          "description": "none (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "topology-uuid": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "leafref"
                              },
                              "node-uuid": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "leafref"
                              },
                              "node-rule-group-uuid": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "leafref"
                              }
                            }
                          }
                        },
                        "inter-rule-group": {
                          "type": "array",
                          "description": "none (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "rule": {
                                "type": "array",
                                "description": "none (list)",
                                "x-yang": {
                                  "type": "list"
                                },
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "rule-type": {
                                      "description": "none (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "enumeration",
                                      "default": "FORWARDING",
                                      "enum": [
                                        "FORWARDING",
                                        "CAPACITY",
                                        "COST",
                                        "TIMING",
                                        "RISK",
                                        "GROUPING"
                                      ]
                                    },
                                    "forwarding-rule": {
                                      "description": "none (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "enumeration",
                                      "default": "MAY_FORWARD_ACROSS_GROUP",
                                      "enum": [
                                        "MAY_FORWARD_ACROSS_GROUP",
                                        "MUST_FORWARD_ACROSS_GROUP",
                                        "CANNOT_FORWARD_ACROSS_GROUP",
                                        "NO_STATEMENT_ON_FORWARDING"
                                      ]
                                    },
                                    "override-priority": {
                                      "description": "none (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "integer",
                                      "format": "uint64"
                                    },
                                    "local-id": {
                                      "description": "none (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    },
                                    "name": {
                                      "type": "array",
                                      "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                                      "x-yang": {
                                        "type": "list"
                                      },
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "value-name": {
                                            "description": "The name of the value. The value need not have a name. (leaf)",
                                            "x-yang": {
                                              "type": "leaf"
                                            },
                                            "type": "string",
                                            "format": "string"
                                          },
                                          "value": {
                                            "description": "The value (leaf)",
                                            "x-yang": {
                                              "type": "leaf"
                                            },
                                            "type": "string",
                                            "format": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "associated-node-rule-group": {
                                "type": "array",
                                "description": "none (list)",
                                "x-yang": {
                                  "type": "list"
                                },
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "topology-uuid": {
                                      "description": "none (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "leafref"
                                    },
                                    "node-uuid": {
                                      "description": "none (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "leafref"
                                    },
                                    "node-rule-group-uuid": {
                                      "description": "none (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "leafref"
                                    }
                                  }
                                }
                              },
                              "uuid": {
                                "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "name": {
                                "type": "array",
                                "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                                "x-yang": {
                                  "type": "list"
                                },
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "value-name": {
                                      "description": "The name of the value. The value need not have a name. (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    },
                                    "value": {
                                      "description": "The value (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    }
                                  }
                                }
                              },
                              "total-potential-capacity": {
                                "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
                                "type": "object",
                                "x-yang": {
                                  "type": "container",
                                  "is_presence": "false"
                                },
                                "properties": {
                                  "total-size": {
                                    "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                                    "type": "object",
                                    "x-yang": {
                                      "type": "container",
                                      "is_presence": "false"
                                    },
                                    "properties": {
                                      "value": {
                                        "description": "none (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "integer",
                                        "format": "uint64"
                                      },
                                      "unit": {
                                        "description": "none (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "enumeration",
                                        "default": "TB",
                                        "enum": [
                                          "TB",
                                          "TBPS",
                                          "GB",
                                          "GBPS",
                                          "MB",
                                          "MBPS",
                                          "KB",
                                          "KBPS",
                                          "GHz",
                                          "MHz"
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "available-capacity": {
                                "description": "Capacity available to be assigned. (non-presence)",
                                "type": "object",
                                "x-yang": {
                                  "type": "container",
                                  "is_presence": "false"
                                },
                                "properties": {
                                  "total-size": {
                                    "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                                    "type": "object",
                                    "x-yang": {
                                      "type": "container",
                                      "is_presence": "false"
                                    },
                                    "properties": {
                                      "value": {
                                        "description": "none (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "integer",
                                        "format": "uint64"
                                      },
                                      "unit": {
                                        "description": "none (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "enumeration",
                                        "default": "TB",
                                        "enum": [
                                          "TB",
                                          "TBPS",
                                          "GB",
                                          "GBPS",
                                          "MB",
                                          "MBPS",
                                          "KB",
                                          "KBPS",
                                          "GHz",
                                          "MHz"
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "cost-characteristic": {
                                "type": "array",
                                "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity. (list)",
                                "x-yang": {
                                  "type": "list"
                                },
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "cost-name": {
                                      "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName. (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    },
                                    "cost-value": {
                                      "description": "The specific cost. (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    },
                                    "cost-algorithm": {
                                      "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm. (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    }
                                  }
                                }
                              },
                              "latency-characteristic": {
                                "type": "array",
                                "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic. (list)",
                                "x-yang": {
                                  "type": "list"
                                },
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "traffic-property-name": {
                                      "description": "The identifier of the specific traffic property to which the queuing latency applies. (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    },
                                    "fixed-latency-characteristic": {
                                      "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    },
                                    "queing-latency-characteristic": {
                                      "description": "The specific queuing latency for the traffic property. (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    },
                                    "jitter-characteristic": {
                                      "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    },
                                    "wander-characteristic": {
                                      "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    }
                                  }
                                }
                              },
                              "risk-characteristic": {
                                "type": "array",
                                "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration. (list)",
                                "x-yang": {
                                  "type": "list"
                                },
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "risk-characteristic-name": {
                                      "description": "The name of the risk characteristic. The characteristic may be related to a specific degree of closeness.\nFor example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).\nDepending upon the importance of the traffic being routed different risk characteristics will be evaluated. (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    },
                                    "risk-identifier-list": {
                                      "type": "array",
                                      "x-yang": {
                                        "type": "leaf-list"
                                      },
                                      "items": {
                                        "description": "A list of the identifiers of each physical/geographic unit (with the specific risk characteristic) that is related to a segment of the TopologicalEntity. (leaf-list)",
                                        "type": "string",
                                        "format": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "uuid": {
                          "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "name": {
                          "type": "array",
                          "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "value-name": {
                                "description": "The name of the value. The value need not have a name. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "value": {
                                "description": "The value (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              }
                            }
                          }
                        },
                        "total-potential-capacity": {
                          "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
                          "type": "object",
                          "x-yang": {
                            "type": "container",
                            "is_presence": "false"
                          },
                          "properties": {
                            "total-size": {
                              "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                              "type": "object",
                              "x-yang": {
                                "type": "container",
                                "is_presence": "false"
                              },
                              "properties": {
                                "value": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "integer",
                                  "format": "uint64"
                                },
                                "unit": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "enumeration",
                                  "default": "TB",
                                  "enum": [
                                    "TB",
                                    "TBPS",
                                    "GB",
                                    "GBPS",
                                    "MB",
                                    "MBPS",
                                    "KB",
                                    "KBPS",
                                    "GHz",
                                    "MHz"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "available-capacity": {
                          "description": "Capacity available to be assigned. (non-presence)",
                          "type": "object",
                          "x-yang": {
                            "type": "container",
                            "is_presence": "false"
                          },
                          "properties": {
                            "total-size": {
                              "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                              "type": "object",
                              "x-yang": {
                                "type": "container",
                                "is_presence": "false"
                              },
                              "properties": {
                                "value": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "integer",
                                  "format": "uint64"
                                },
                                "unit": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "enumeration",
                                  "default": "TB",
                                  "enum": [
                                    "TB",
                                    "TBPS",
                                    "GB",
                                    "GBPS",
                                    "MB",
                                    "MBPS",
                                    "KB",
                                    "KBPS",
                                    "GHz",
                                    "MHz"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "cost-characteristic": {
                          "type": "array",
                          "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity. (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "cost-name": {
                                "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "cost-value": {
                                "description": "The specific cost. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "cost-algorithm": {
                                "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              }
                            }
                          }
                        },
                        "latency-characteristic": {
                          "type": "array",
                          "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic. (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "traffic-property-name": {
                                "description": "The identifier of the specific traffic property to which the queuing latency applies. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "fixed-latency-characteristic": {
                                "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "queing-latency-characteristic": {
                                "description": "The specific queuing latency for the traffic property. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "jitter-characteristic": {
                                "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "wander-characteristic": {
                                "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              }
                            }
                          }
                        },
                        "risk-characteristic": {
                          "type": "array",
                          "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration. (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "risk-characteristic-name": {
                                "description": "The name of the risk characteristic. The characteristic may be related to a specific degree of closeness.\nFor example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).\nDepending upon the importance of the traffic being routed different risk characteristics will be evaluated. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "risk-identifier-list": {
                                "type": "array",
                                "x-yang": {
                                  "type": "leaf-list"
                                },
                                "items": {
                                  "description": "A list of the identifiers of each physical/geographic unit (with the specific risk characteristic) that is related to a segment of the TopologicalEntity. (leaf-list)",
                                  "type": "string",
                                  "format": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "encap-topology": {
                    "description": "none (non-presence)",
                    "type": "object",
                    "x-yang": {
                      "type": "container",
                      "is_presence": "false"
                    },
                    "properties": {
                      "topology-uuid": {
                        "description": "none (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "string",
                        "format": "leafref"
                      }
                    }
                  },
                  "layer-protocol-name": {
                    "type": "array",
                    "x-yang": {
                      "type": "leaf-list"
                    },
                    "items": {
                      "description": "none (leaf-list)",
                      "type": "string",
                      "format": "enumeration",
                      "default": "ODU",
                      "enum": [
                        "ODU",
                        "ETH",
                        "DSR",
                        "PHOTONIC_MEDIA"
                      ]
                    }
                  },
                  "uuid": {
                    "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "name": {
                    "type": "array",
                    "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "value-name": {
                          "description": "The name of the value. The value need not have a name. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "value": {
                          "description": "The value (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        }
                      }
                    }
                  },
                  "administrative-state": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "LOCKED",
                    "enum": [
                      "LOCKED",
                      "UNLOCKED"
                    ]
                  },
                  "operational-state": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "DISABLED",
                    "enum": [
                      "DISABLED",
                      "ENABLED"
                    ]
                  },
                  "lifecycle-state": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "PLANNED",
                    "enum": [
                      "PLANNED",
                      "POTENTIAL_AVAILABLE",
                      "POTENTIAL_BUSY",
                      "INSTALLED",
                      "PENDING_REMOVAL"
                    ]
                  },
                  "total-potential-capacity": {
                    "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
                    "type": "object",
                    "x-yang": {
                      "type": "container",
                      "is_presence": "false"
                    },
                    "properties": {
                      "total-size": {
                        "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                        "type": "object",
                        "x-yang": {
                          "type": "container",
                          "is_presence": "false"
                        },
                        "properties": {
                          "value": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "integer",
                            "format": "uint64"
                          },
                          "unit": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "TB",
                            "enum": [
                              "TB",
                              "TBPS",
                              "GB",
                              "GBPS",
                              "MB",
                              "MBPS",
                              "KB",
                              "KBPS",
                              "GHz",
                              "MHz"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "available-capacity": {
                    "description": "Capacity available to be assigned. (non-presence)",
                    "type": "object",
                    "x-yang": {
                      "type": "container",
                      "is_presence": "false"
                    },
                    "properties": {
                      "total-size": {
                        "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                        "type": "object",
                        "x-yang": {
                          "type": "container",
                          "is_presence": "false"
                        },
                        "properties": {
                          "value": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "integer",
                            "format": "uint64"
                          },
                          "unit": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "TB",
                            "enum": [
                              "TB",
                              "TBPS",
                              "GB",
                              "GBPS",
                              "MB",
                              "MBPS",
                              "KB",
                              "KBPS",
                              "GHz",
                              "MHz"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "cost-characteristic": {
                    "type": "array",
                    "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity. (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "cost-name": {
                          "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "cost-value": {
                          "description": "The specific cost. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "cost-algorithm": {
                          "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        }
                      }
                    }
                  },
                  "error-characteristic": {
                    "description": "Describes the degree to which the signal propagated can be errored.\nApplies to TDM systems as the errored signal will be propagated and not packet as errored packets will be discarded. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "loss-characteristic": {
                    "description": "Describes the acceptable characteristic of lost packets where loss may result from discard due to errors or overflow.\nApplies to packet systems and not TDM (as for TDM errored signals are propagated unless grossly errored and overflow/underflow turns into timing slips). (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "repeat-delivery-characteristic": {
                    "description": "Primarily applies to packet systems where a packet may be delivered more than once (in fault recovery for example).\nIt can also apply to TDM where several frames may be received twice due to switching in a system with a large differential propagation delay. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "delivery-order-characteristic": {
                    "description": "Describes the degree to which packets will be delivered out of sequence.\nDoes not apply to TDM as the TDM protocols maintain strict order. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "unavailable-time-characteristic": {
                    "description": "Describes the duration for which there may be no valid signal propagated. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "server-integrity-process-characteristic": {
                    "description": "Describes the effect of any server integrity enhancement process on the characteristics of the TopologicalEntity. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "latency-characteristic": {
                    "type": "array",
                    "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic. (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "traffic-property-name": {
                          "description": "The identifier of the specific traffic property to which the queuing latency applies. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "fixed-latency-characteristic": {
                          "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "queing-latency-characteristic": {
                          "description": "The specific queuing latency for the traffic property. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "jitter-characteristic": {
                          "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "wander-characteristic": {
                          "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "link": {
              "type": "array",
              "description": "none (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "node-edge-point": {
                    "type": "array",
                    "description": "none (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "topology-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        },
                        "node-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        },
                        "node-edge-point-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        }
                      }
                    }
                  },
                  "layer-protocol-name": {
                    "type": "array",
                    "x-yang": {
                      "type": "leaf-list"
                    },
                    "items": {
                      "description": "none (leaf-list)",
                      "type": "string",
                      "format": "enumeration",
                      "default": "ODU",
                      "enum": [
                        "ODU",
                        "ETH",
                        "DSR",
                        "PHOTONIC_MEDIA"
                      ]
                    }
                  },
                  "direction": {
                    "description": "The directionality of the Link.\nIs applicable to simple Links where all LinkEnds are BIDIRECTIONAL (the Link will be BIDIRECTIONAL) or UNIDIRECTIONAL (the Link will be UNIDIRECTIONAL).\nIs not present in more complex cases. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "BIDIRECTIONAL",
                    "enum": [
                      "BIDIRECTIONAL",
                      "UNIDIRECTIONAL",
                      "UNDEFINED_OR_UNKNOWN"
                    ]
                  },
                  "protection-type": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "NO_PROTECTION",
                    "enum": [
                      "NO_PROTECTION",
                      "ONE_PLUS_ONE_PROTECTION",
                      "ONE_FOR_ONE_PROTECTION",
                      "ONE_FOR_N_PROTECTION",
                      "M_FOR_N_PROTECTION",
                      "ONE_FOR_ONE_BY_N"
                    ]
                  },
                  "restoration-policy": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "PER_DOMAIN_RESTORATION",
                    "enum": [
                      "PER_DOMAIN_RESTORATION",
                      "END_TO_END_RESTORATION",
                      "NA",
                      "DYNAMIC_RESTORATION",
                      "PRE_COMPUTED_RESTORATION"
                    ]
                  },
                  "uuid": {
                    "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "name": {
                    "type": "array",
                    "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "value-name": {
                          "description": "The name of the value. The value need not have a name. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "value": {
                          "description": "The value (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        }
                      }
                    }
                  },
                  "administrative-state": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "LOCKED",
                    "enum": [
                      "LOCKED",
                      "UNLOCKED"
                    ]
                  },
                  "operational-state": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "DISABLED",
                    "enum": [
                      "DISABLED",
                      "ENABLED"
                    ]
                  },
                  "lifecycle-state": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "PLANNED",
                    "enum": [
                      "PLANNED",
                      "POTENTIAL_AVAILABLE",
                      "POTENTIAL_BUSY",
                      "INSTALLED",
                      "PENDING_REMOVAL"
                    ]
                  },
                  "total-potential-capacity": {
                    "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
                    "type": "object",
                    "x-yang": {
                      "type": "container",
                      "is_presence": "false"
                    },
                    "properties": {
                      "total-size": {
                        "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                        "type": "object",
                        "x-yang": {
                          "type": "container",
                          "is_presence": "false"
                        },
                        "properties": {
                          "value": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "integer",
                            "format": "uint64"
                          },
                          "unit": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "TB",
                            "enum": [
                              "TB",
                              "TBPS",
                              "GB",
                              "GBPS",
                              "MB",
                              "MBPS",
                              "KB",
                              "KBPS",
                              "GHz",
                              "MHz"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "available-capacity": {
                    "description": "Capacity available to be assigned. (non-presence)",
                    "type": "object",
                    "x-yang": {
                      "type": "container",
                      "is_presence": "false"
                    },
                    "properties": {
                      "total-size": {
                        "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                        "type": "object",
                        "x-yang": {
                          "type": "container",
                          "is_presence": "false"
                        },
                        "properties": {
                          "value": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "integer",
                            "format": "uint64"
                          },
                          "unit": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "TB",
                            "enum": [
                              "TB",
                              "TBPS",
                              "GB",
                              "GBPS",
                              "MB",
                              "MBPS",
                              "KB",
                              "KBPS",
                              "GHz",
                              "MHz"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "cost-characteristic": {
                    "type": "array",
                    "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity. (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "cost-name": {
                          "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "cost-value": {
                          "description": "The specific cost. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "cost-algorithm": {
                          "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        }
                      }
                    }
                  },
                  "error-characteristic": {
                    "description": "Describes the degree to which the signal propagated can be errored.\nApplies to TDM systems as the errored signal will be propagated and not packet as errored packets will be discarded. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "loss-characteristic": {
                    "description": "Describes the acceptable characteristic of lost packets where loss may result from discard due to errors or overflow.\nApplies to packet systems and not TDM (as for TDM errored signals are propagated unless grossly errored and overflow/underflow turns into timing slips). (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "repeat-delivery-characteristic": {
                    "description": "Primarily applies to packet systems where a packet may be delivered more than once (in fault recovery for example).\nIt can also apply to TDM where several frames may be received twice due to switching in a system with a large differential propagation delay. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "delivery-order-characteristic": {
                    "description": "Describes the degree to which packets will be delivered out of sequence.\nDoes not apply to TDM as the TDM protocols maintain strict order. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "unavailable-time-characteristic": {
                    "description": "Describes the duration for which there may be no valid signal propagated. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "server-integrity-process-characteristic": {
                    "description": "Describes the effect of any server integrity enhancement process on the characteristics of the TopologicalEntity. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "latency-characteristic": {
                    "type": "array",
                    "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic. (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "traffic-property-name": {
                          "description": "The identifier of the specific traffic property to which the queuing latency applies. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "fixed-latency-characteristic": {
                          "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "queing-latency-characteristic": {
                          "description": "The specific queuing latency for the traffic property. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "jitter-characteristic": {
                          "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "wander-characteristic": {
                          "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        }
                      }
                    }
                  },
                  "risk-characteristic": {
                    "type": "array",
                    "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration. (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "risk-characteristic-name": {
                          "description": "The name of the risk characteristic. The characteristic may be related to a specific degree of closeness.\nFor example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).\nDepending upon the importance of the traffic being routed different risk characteristics will be evaluated. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "risk-identifier-list": {
                          "type": "array",
                          "x-yang": {
                            "type": "leaf-list"
                          },
                          "items": {
                            "description": "A list of the identifiers of each physical/geographic unit (with the specific risk characteristic) that is related to a segment of the TopologicalEntity. (leaf-list)",
                            "type": "string",
                            "format": "string"
                          }
                        }
                      }
                    }
                  },
                  "validation-mechanism": {
                    "type": "array",
                    "description": "Provides details of the specific validation mechanism(s) used to confirm the presence of an intended topologicalEntity. (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "validation-mechanism": {
                          "description": "Name of mechanism used to validate adjacency (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "layer-protocol-adjacency-validated": {
                          "description": "State of validatiion (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "validation-robustness": {
                          "description": "Quality of validation (i.e. how likely is the stated validation to be invalid) (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        }
                      }
                    }
                  },
                  "transitioned-layer-protocol-name": {
                    "type": "array",
                    "x-yang": {
                      "type": "leaf-list"
                    },
                    "items": {
                      "description": "Provides the ordered structure of layer protocol transitions encapsulated in the TopologicalEntity. The ordering relates to the LinkPort role. (leaf-list)",
                      "type": "string",
                      "format": "string"
                    }
                  }
                }
              }
            },
            "layer-protocol-name": {
              "type": "array",
              "x-yang": {
                "type": "leaf-list"
              },
              "items": {
                "description": "none (leaf-list)",
                "type": "string",
                "format": "enumeration",
                "default": "ODU",
                "enum": [
                  "ODU",
                  "ETH",
                  "DSR",
                  "PHOTONIC_MEDIA"
                ]
              }
            },
            "boundary-node-edge-point": {
              "type": "array",
              "description": "none (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "topology-uuid": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "leafref"
                  },
                  "node-uuid": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "leafref"
                  },
                  "node-edge-point-uuid": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "leafref"
                  }
                }
              }
            },
            "uuid": {
              "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "name": {
              "type": "array",
              "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "value-name": {
                    "description": "The name of the value. The value need not have a name. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "value": {
                    "description": "The value (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "operations_tapi-topology_get-topology-details-post-input": {
      "type": "object",
      "properties": {
        "tapi-topology:topology-id-or-name": {
          "description": "none (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "string"
        }
      }
    },
    "operations_tapi-topology_get-node-edge-point-details-post-output": {
      "type": "object",
      "properties": {
        "tapi-topology:node-edge-point": {
          "description": "none (non-presence)",
          "type": "object",
          "x-yang": {
            "type": "container",
            "is_presence": "false"
          },
          "properties": {
            "layer-protocol-name": {
              "description": "none (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "ODU",
              "enum": [
                "ODU",
                "ETH",
                "DSR",
                "PHOTONIC_MEDIA"
              ]
            },
            "available-cep-layer-protocol": {
              "type": "array",
              "description": "none (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "layer-protocol-qualifier": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "identityref"
                  },
                  "number-of-cep-instances": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "integer",
                    "format": "uint64"
                  }
                }
              }
            },
            "aggregated-node-edge-point": {
              "type": "array",
              "description": "none (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "topology-uuid": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "leafref"
                  },
                  "node-uuid": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "leafref"
                  },
                  "node-edge-point-uuid": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "leafref"
                  }
                }
              }
            },
            "mapped-service-interface-point": {
              "type": "array",
              "description": "NodeEdgePoint mapped to more than ServiceInterfacePoint (slicing/virtualizing) or a ServiceInterfacePoint mapped to more than one NodeEdgePoint (load balancing/Resilience) should be considered experimental (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "service-interface-point-uuid": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "leafref"
                  }
                }
              }
            },
            "link-port-direction": {
              "description": "The orientation of defined flow at the LinkEnd. (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "BIDIRECTIONAL",
              "enum": [
                "BIDIRECTIONAL",
                "INPUT",
                "OUTPUT",
                "UNIDENTIFIED_OR_UNKNOWN"
              ]
            },
            "link-port-role": {
              "description": "Each LinkEnd of the Link has a role (e.g., symmetric, hub, spoke, leaf, root)  in the context of the Link with respect to the Link function.  (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "SYMMETRIC",
              "enum": [
                "SYMMETRIC",
                "ROOT",
                "LEAF",
                "TRUNK",
                "UNKNOWN"
              ]
            },
            "uuid": {
              "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "name": {
              "type": "array",
              "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "value-name": {
                    "description": "The name of the value. The value need not have a name. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "value": {
                    "description": "The value (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  }
                }
              }
            },
            "administrative-state": {
              "description": "none (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "LOCKED",
              "enum": [
                "LOCKED",
                "UNLOCKED"
              ]
            },
            "operational-state": {
              "description": "none (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "DISABLED",
              "enum": [
                "DISABLED",
                "ENABLED"
              ]
            },
            "lifecycle-state": {
              "description": "none (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "PLANNED",
              "enum": [
                "PLANNED",
                "POTENTIAL_AVAILABLE",
                "POTENTIAL_BUSY",
                "INSTALLED",
                "PENDING_REMOVAL"
              ]
            },
            "termination-direction": {
              "description": "The overall directionality of the LP.\n- A BIDIRECTIONAL LP will have some SINK and/or SOURCE flowss.\n- A SINK LP can only contain elements with SINK flows or CONTRA_DIRECTION_SOURCE flows\n- A SOURCE LP can only contain SOURCE flows or CONTRA_DIRECTION_SINK flows (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "BIDIRECTIONAL",
              "enum": [
                "BIDIRECTIONAL",
                "SINK",
                "SOURCE",
                "UNDEFINED_OR_UNKNOWN"
              ]
            },
            "termination-state": {
              "description": "Indicates whether the layer is terminated and if so how. (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "LP_CAN_NEVER_TERMINATE",
              "enum": [
                "LP_CAN_NEVER_TERMINATE",
                "LT_NOT_TERMINATED",
                "TERMINATED_SERVER_TO_CLIENT_FLOW",
                "TERMINATED_CLIENT_TO_SERVER_FLOW",
                "TERMINATED_BIDIRECTIONAL",
                "LT_PERMENANTLY_TERMINATED",
                "TERMINATION_STATE_UNKNOWN"
              ]
            },
            "total-potential-capacity": {
              "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
              "type": "object",
              "x-yang": {
                "type": "container",
                "is_presence": "false"
              },
              "properties": {
                "total-size": {
                  "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                  "type": "object",
                  "x-yang": {
                    "type": "container",
                    "is_presence": "false"
                  },
                  "properties": {
                    "value": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "integer",
                      "format": "uint64"
                    },
                    "unit": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "TB",
                      "enum": [
                        "TB",
                        "TBPS",
                        "GB",
                        "GBPS",
                        "MB",
                        "MBPS",
                        "KB",
                        "KBPS",
                        "GHz",
                        "MHz"
                      ]
                    }
                  }
                }
              }
            },
            "available-capacity": {
              "description": "Capacity available to be assigned. (non-presence)",
              "type": "object",
              "x-yang": {
                "type": "container",
                "is_presence": "false"
              },
              "properties": {
                "total-size": {
                  "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                  "type": "object",
                  "x-yang": {
                    "type": "container",
                    "is_presence": "false"
                  },
                  "properties": {
                    "value": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "integer",
                      "format": "uint64"
                    },
                    "unit": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "TB",
                      "enum": [
                        "TB",
                        "TBPS",
                        "GB",
                        "GBPS",
                        "MB",
                        "MBPS",
                        "KB",
                        "KBPS",
                        "GHz",
                        "MHz"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "operations_tapi-topology_get-node-edge-point-details-post-input": {
      "type": "object",
      "properties": {
        "tapi-topology:topology-id-or-name": {
          "description": "none (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "string"
        },
        "tapi-topology:node-id-or-name": {
          "description": "none (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "string"
        },
        "tapi-topology:ep-id-or-name": {
          "description": "none (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "string"
        }
      }
    },
    "operations_tapi-topology_get-node-details-post-output": {
      "type": "object",
      "properties": {
        "tapi-topology:node": {
          "description": "none (non-presence)",
          "type": "object",
          "x-yang": {
            "type": "container",
            "is_presence": "false"
          },
          "properties": {
            "node-edge-point": {
              "type": "array",
              "description": "none (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "layer-protocol-name": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "ODU",
                    "enum": [
                      "ODU",
                      "ETH",
                      "DSR",
                      "PHOTONIC_MEDIA"
                    ]
                  },
                  "available-cep-layer-protocol": {
                    "type": "array",
                    "description": "none (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "layer-protocol-qualifier": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "identityref"
                        },
                        "number-of-cep-instances": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "integer",
                          "format": "uint64"
                        }
                      }
                    }
                  },
                  "aggregated-node-edge-point": {
                    "type": "array",
                    "description": "none (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "topology-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        },
                        "node-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        },
                        "node-edge-point-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        }
                      }
                    }
                  },
                  "mapped-service-interface-point": {
                    "type": "array",
                    "description": "NodeEdgePoint mapped to more than ServiceInterfacePoint (slicing/virtualizing) or a ServiceInterfacePoint mapped to more than one NodeEdgePoint (load balancing/Resilience) should be considered experimental (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "service-interface-point-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        }
                      }
                    }
                  },
                  "link-port-direction": {
                    "description": "The orientation of defined flow at the LinkEnd. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "BIDIRECTIONAL",
                    "enum": [
                      "BIDIRECTIONAL",
                      "INPUT",
                      "OUTPUT",
                      "UNIDENTIFIED_OR_UNKNOWN"
                    ]
                  },
                  "link-port-role": {
                    "description": "Each LinkEnd of the Link has a role (e.g., symmetric, hub, spoke, leaf, root)  in the context of the Link with respect to the Link function.  (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "SYMMETRIC",
                    "enum": [
                      "SYMMETRIC",
                      "ROOT",
                      "LEAF",
                      "TRUNK",
                      "UNKNOWN"
                    ]
                  },
                  "uuid": {
                    "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "name": {
                    "type": "array",
                    "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "value-name": {
                          "description": "The name of the value. The value need not have a name. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "value": {
                          "description": "The value (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        }
                      }
                    }
                  },
                  "administrative-state": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "LOCKED",
                    "enum": [
                      "LOCKED",
                      "UNLOCKED"
                    ]
                  },
                  "operational-state": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "DISABLED",
                    "enum": [
                      "DISABLED",
                      "ENABLED"
                    ]
                  },
                  "lifecycle-state": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "PLANNED",
                    "enum": [
                      "PLANNED",
                      "POTENTIAL_AVAILABLE",
                      "POTENTIAL_BUSY",
                      "INSTALLED",
                      "PENDING_REMOVAL"
                    ]
                  },
                  "termination-direction": {
                    "description": "The overall directionality of the LP.\n- A BIDIRECTIONAL LP will have some SINK and/or SOURCE flowss.\n- A SINK LP can only contain elements with SINK flows or CONTRA_DIRECTION_SOURCE flows\n- A SOURCE LP can only contain SOURCE flows or CONTRA_DIRECTION_SINK flows (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "BIDIRECTIONAL",
                    "enum": [
                      "BIDIRECTIONAL",
                      "SINK",
                      "SOURCE",
                      "UNDEFINED_OR_UNKNOWN"
                    ]
                  },
                  "termination-state": {
                    "description": "Indicates whether the layer is terminated and if so how. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "LP_CAN_NEVER_TERMINATE",
                    "enum": [
                      "LP_CAN_NEVER_TERMINATE",
                      "LT_NOT_TERMINATED",
                      "TERMINATED_SERVER_TO_CLIENT_FLOW",
                      "TERMINATED_CLIENT_TO_SERVER_FLOW",
                      "TERMINATED_BIDIRECTIONAL",
                      "LT_PERMENANTLY_TERMINATED",
                      "TERMINATION_STATE_UNKNOWN"
                    ]
                  },
                  "total-potential-capacity": {
                    "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
                    "type": "object",
                    "x-yang": {
                      "type": "container",
                      "is_presence": "false"
                    },
                    "properties": {
                      "total-size": {
                        "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                        "type": "object",
                        "x-yang": {
                          "type": "container",
                          "is_presence": "false"
                        },
                        "properties": {
                          "value": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "integer",
                            "format": "uint64"
                          },
                          "unit": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "TB",
                            "enum": [
                              "TB",
                              "TBPS",
                              "GB",
                              "GBPS",
                              "MB",
                              "MBPS",
                              "KB",
                              "KBPS",
                              "GHz",
                              "MHz"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "available-capacity": {
                    "description": "Capacity available to be assigned. (non-presence)",
                    "type": "object",
                    "x-yang": {
                      "type": "container",
                      "is_presence": "false"
                    },
                    "properties": {
                      "total-size": {
                        "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                        "type": "object",
                        "x-yang": {
                          "type": "container",
                          "is_presence": "false"
                        },
                        "properties": {
                          "value": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "integer",
                            "format": "uint64"
                          },
                          "unit": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "TB",
                            "enum": [
                              "TB",
                              "TBPS",
                              "GB",
                              "GBPS",
                              "MB",
                              "MBPS",
                              "KB",
                              "KBPS",
                              "GHz",
                              "MHz"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "aggregated-node-edge-point": {
              "type": "array",
              "description": "none (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "topology-uuid": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "leafref"
                  },
                  "node-uuid": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "leafref"
                  },
                  "node-edge-point-uuid": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "leafref"
                  }
                }
              }
            },
            "node-rule-group": {
              "type": "array",
              "description": "none (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "rule": {
                    "type": "array",
                    "description": "none (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "rule-type": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "enumeration",
                          "default": "FORWARDING",
                          "enum": [
                            "FORWARDING",
                            "CAPACITY",
                            "COST",
                            "TIMING",
                            "RISK",
                            "GROUPING"
                          ]
                        },
                        "forwarding-rule": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "enumeration",
                          "default": "MAY_FORWARD_ACROSS_GROUP",
                          "enum": [
                            "MAY_FORWARD_ACROSS_GROUP",
                            "MUST_FORWARD_ACROSS_GROUP",
                            "CANNOT_FORWARD_ACROSS_GROUP",
                            "NO_STATEMENT_ON_FORWARDING"
                          ]
                        },
                        "override-priority": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "integer",
                          "format": "uint64"
                        },
                        "local-id": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "name": {
                          "type": "array",
                          "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "value-name": {
                                "description": "The name of the value. The value need not have a name. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "value": {
                                "description": "The value (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "node-edge-point": {
                    "type": "array",
                    "description": "none (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "topology-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        },
                        "node-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        },
                        "node-edge-point-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        }
                      }
                    }
                  },
                  "composed-rule-group": {
                    "type": "array",
                    "description": "none (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "topology-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        },
                        "node-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        },
                        "node-rule-group-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        }
                      }
                    }
                  },
                  "inter-rule-group": {
                    "type": "array",
                    "description": "none (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "rule": {
                          "type": "array",
                          "description": "none (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "rule-type": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "enumeration",
                                "default": "FORWARDING",
                                "enum": [
                                  "FORWARDING",
                                  "CAPACITY",
                                  "COST",
                                  "TIMING",
                                  "RISK",
                                  "GROUPING"
                                ]
                              },
                              "forwarding-rule": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "enumeration",
                                "default": "MAY_FORWARD_ACROSS_GROUP",
                                "enum": [
                                  "MAY_FORWARD_ACROSS_GROUP",
                                  "MUST_FORWARD_ACROSS_GROUP",
                                  "CANNOT_FORWARD_ACROSS_GROUP",
                                  "NO_STATEMENT_ON_FORWARDING"
                                ]
                              },
                              "override-priority": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "integer",
                                "format": "uint64"
                              },
                              "local-id": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "name": {
                                "type": "array",
                                "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                                "x-yang": {
                                  "type": "list"
                                },
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "value-name": {
                                      "description": "The name of the value. The value need not have a name. (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    },
                                    "value": {
                                      "description": "The value (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "associated-node-rule-group": {
                          "type": "array",
                          "description": "none (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "topology-uuid": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "leafref"
                              },
                              "node-uuid": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "leafref"
                              },
                              "node-rule-group-uuid": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "leafref"
                              }
                            }
                          }
                        },
                        "uuid": {
                          "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "name": {
                          "type": "array",
                          "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "value-name": {
                                "description": "The name of the value. The value need not have a name. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "value": {
                                "description": "The value (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              }
                            }
                          }
                        },
                        "total-potential-capacity": {
                          "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
                          "type": "object",
                          "x-yang": {
                            "type": "container",
                            "is_presence": "false"
                          },
                          "properties": {
                            "total-size": {
                              "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                              "type": "object",
                              "x-yang": {
                                "type": "container",
                                "is_presence": "false"
                              },
                              "properties": {
                                "value": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "integer",
                                  "format": "uint64"
                                },
                                "unit": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "enumeration",
                                  "default": "TB",
                                  "enum": [
                                    "TB",
                                    "TBPS",
                                    "GB",
                                    "GBPS",
                                    "MB",
                                    "MBPS",
                                    "KB",
                                    "KBPS",
                                    "GHz",
                                    "MHz"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "available-capacity": {
                          "description": "Capacity available to be assigned. (non-presence)",
                          "type": "object",
                          "x-yang": {
                            "type": "container",
                            "is_presence": "false"
                          },
                          "properties": {
                            "total-size": {
                              "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                              "type": "object",
                              "x-yang": {
                                "type": "container",
                                "is_presence": "false"
                              },
                              "properties": {
                                "value": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "integer",
                                  "format": "uint64"
                                },
                                "unit": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "enumeration",
                                  "default": "TB",
                                  "enum": [
                                    "TB",
                                    "TBPS",
                                    "GB",
                                    "GBPS",
                                    "MB",
                                    "MBPS",
                                    "KB",
                                    "KBPS",
                                    "GHz",
                                    "MHz"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "cost-characteristic": {
                          "type": "array",
                          "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity. (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "cost-name": {
                                "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "cost-value": {
                                "description": "The specific cost. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "cost-algorithm": {
                                "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              }
                            }
                          }
                        },
                        "latency-characteristic": {
                          "type": "array",
                          "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic. (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "traffic-property-name": {
                                "description": "The identifier of the specific traffic property to which the queuing latency applies. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "fixed-latency-characteristic": {
                                "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "queing-latency-characteristic": {
                                "description": "The specific queuing latency for the traffic property. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "jitter-characteristic": {
                                "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "wander-characteristic": {
                                "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              }
                            }
                          }
                        },
                        "risk-characteristic": {
                          "type": "array",
                          "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration. (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "risk-characteristic-name": {
                                "description": "The name of the risk characteristic. The characteristic may be related to a specific degree of closeness.\nFor example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).\nDepending upon the importance of the traffic being routed different risk characteristics will be evaluated. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "risk-identifier-list": {
                                "type": "array",
                                "x-yang": {
                                  "type": "leaf-list"
                                },
                                "items": {
                                  "description": "A list of the identifiers of each physical/geographic unit (with the specific risk characteristic) that is related to a segment of the TopologicalEntity. (leaf-list)",
                                  "type": "string",
                                  "format": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "uuid": {
                    "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "name": {
                    "type": "array",
                    "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "value-name": {
                          "description": "The name of the value. The value need not have a name. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "value": {
                          "description": "The value (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        }
                      }
                    }
                  },
                  "total-potential-capacity": {
                    "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
                    "type": "object",
                    "x-yang": {
                      "type": "container",
                      "is_presence": "false"
                    },
                    "properties": {
                      "total-size": {
                        "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                        "type": "object",
                        "x-yang": {
                          "type": "container",
                          "is_presence": "false"
                        },
                        "properties": {
                          "value": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "integer",
                            "format": "uint64"
                          },
                          "unit": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "TB",
                            "enum": [
                              "TB",
                              "TBPS",
                              "GB",
                              "GBPS",
                              "MB",
                              "MBPS",
                              "KB",
                              "KBPS",
                              "GHz",
                              "MHz"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "available-capacity": {
                    "description": "Capacity available to be assigned. (non-presence)",
                    "type": "object",
                    "x-yang": {
                      "type": "container",
                      "is_presence": "false"
                    },
                    "properties": {
                      "total-size": {
                        "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                        "type": "object",
                        "x-yang": {
                          "type": "container",
                          "is_presence": "false"
                        },
                        "properties": {
                          "value": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "integer",
                            "format": "uint64"
                          },
                          "unit": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "TB",
                            "enum": [
                              "TB",
                              "TBPS",
                              "GB",
                              "GBPS",
                              "MB",
                              "MBPS",
                              "KB",
                              "KBPS",
                              "GHz",
                              "MHz"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "cost-characteristic": {
                    "type": "array",
                    "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity. (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "cost-name": {
                          "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "cost-value": {
                          "description": "The specific cost. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "cost-algorithm": {
                          "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        }
                      }
                    }
                  },
                  "latency-characteristic": {
                    "type": "array",
                    "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic. (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "traffic-property-name": {
                          "description": "The identifier of the specific traffic property to which the queuing latency applies. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "fixed-latency-characteristic": {
                          "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "queing-latency-characteristic": {
                          "description": "The specific queuing latency for the traffic property. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "jitter-characteristic": {
                          "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "wander-characteristic": {
                          "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        }
                      }
                    }
                  },
                  "risk-characteristic": {
                    "type": "array",
                    "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration. (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "risk-characteristic-name": {
                          "description": "The name of the risk characteristic. The characteristic may be related to a specific degree of closeness.\nFor example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).\nDepending upon the importance of the traffic being routed different risk characteristics will be evaluated. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "risk-identifier-list": {
                          "type": "array",
                          "x-yang": {
                            "type": "leaf-list"
                          },
                          "items": {
                            "description": "A list of the identifiers of each physical/geographic unit (with the specific risk characteristic) that is related to a segment of the TopologicalEntity. (leaf-list)",
                            "type": "string",
                            "format": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "encap-topology": {
              "description": "none (non-presence)",
              "type": "object",
              "x-yang": {
                "type": "container",
                "is_presence": "false"
              },
              "properties": {
                "topology-uuid": {
                  "description": "none (leaf)",
                  "x-yang": {
                    "type": "leaf"
                  },
                  "type": "string",
                  "format": "leafref"
                }
              }
            },
            "layer-protocol-name": {
              "type": "array",
              "x-yang": {
                "type": "leaf-list"
              },
              "items": {
                "description": "none (leaf-list)",
                "type": "string",
                "format": "enumeration",
                "default": "ODU",
                "enum": [
                  "ODU",
                  "ETH",
                  "DSR",
                  "PHOTONIC_MEDIA"
                ]
              }
            },
            "uuid": {
              "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "name": {
              "type": "array",
              "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "value-name": {
                    "description": "The name of the value. The value need not have a name. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "value": {
                    "description": "The value (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  }
                }
              }
            },
            "administrative-state": {
              "description": "none (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "LOCKED",
              "enum": [
                "LOCKED",
                "UNLOCKED"
              ]
            },
            "operational-state": {
              "description": "none (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "DISABLED",
              "enum": [
                "DISABLED",
                "ENABLED"
              ]
            },
            "lifecycle-state": {
              "description": "none (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "PLANNED",
              "enum": [
                "PLANNED",
                "POTENTIAL_AVAILABLE",
                "POTENTIAL_BUSY",
                "INSTALLED",
                "PENDING_REMOVAL"
              ]
            },
            "total-potential-capacity": {
              "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
              "type": "object",
              "x-yang": {
                "type": "container",
                "is_presence": "false"
              },
              "properties": {
                "total-size": {
                  "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                  "type": "object",
                  "x-yang": {
                    "type": "container",
                    "is_presence": "false"
                  },
                  "properties": {
                    "value": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "integer",
                      "format": "uint64"
                    },
                    "unit": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "TB",
                      "enum": [
                        "TB",
                        "TBPS",
                        "GB",
                        "GBPS",
                        "MB",
                        "MBPS",
                        "KB",
                        "KBPS",
                        "GHz",
                        "MHz"
                      ]
                    }
                  }
                }
              }
            },
            "available-capacity": {
              "description": "Capacity available to be assigned. (non-presence)",
              "type": "object",
              "x-yang": {
                "type": "container",
                "is_presence": "false"
              },
              "properties": {
                "total-size": {
                  "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                  "type": "object",
                  "x-yang": {
                    "type": "container",
                    "is_presence": "false"
                  },
                  "properties": {
                    "value": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "integer",
                      "format": "uint64"
                    },
                    "unit": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "TB",
                      "enum": [
                        "TB",
                        "TBPS",
                        "GB",
                        "GBPS",
                        "MB",
                        "MBPS",
                        "KB",
                        "KBPS",
                        "GHz",
                        "MHz"
                      ]
                    }
                  }
                }
              }
            },
            "cost-characteristic": {
              "type": "array",
              "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity. (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "cost-name": {
                    "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "cost-value": {
                    "description": "The specific cost. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "cost-algorithm": {
                    "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  }
                }
              }
            },
            "error-characteristic": {
              "description": "Describes the degree to which the signal propagated can be errored.\nApplies to TDM systems as the errored signal will be propagated and not packet as errored packets will be discarded. (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "loss-characteristic": {
              "description": "Describes the acceptable characteristic of lost packets where loss may result from discard due to errors or overflow.\nApplies to packet systems and not TDM (as for TDM errored signals are propagated unless grossly errored and overflow/underflow turns into timing slips). (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "repeat-delivery-characteristic": {
              "description": "Primarily applies to packet systems where a packet may be delivered more than once (in fault recovery for example).\nIt can also apply to TDM where several frames may be received twice due to switching in a system with a large differential propagation delay. (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "delivery-order-characteristic": {
              "description": "Describes the degree to which packets will be delivered out of sequence.\nDoes not apply to TDM as the TDM protocols maintain strict order. (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "unavailable-time-characteristic": {
              "description": "Describes the duration for which there may be no valid signal propagated. (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "server-integrity-process-characteristic": {
              "description": "Describes the effect of any server integrity enhancement process on the characteristics of the TopologicalEntity. (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "latency-characteristic": {
              "type": "array",
              "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic. (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "traffic-property-name": {
                    "description": "The identifier of the specific traffic property to which the queuing latency applies. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "fixed-latency-characteristic": {
                    "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "queing-latency-characteristic": {
                    "description": "The specific queuing latency for the traffic property. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "jitter-characteristic": {
                    "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "wander-characteristic": {
                    "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "operations_tapi-topology_get-node-details-post-input": {
      "type": "object",
      "properties": {
        "tapi-topology:topology-id-or-name": {
          "description": "none (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "string"
        },
        "tapi-topology:node-id-or-name": {
          "description": "none (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "string"
        }
      }
    },
    "operations_tapi-topology_get-link-details-post-output": {
      "type": "object",
      "properties": {
        "tapi-topology:link": {
          "description": "none (non-presence)",
          "type": "object",
          "x-yang": {
            "type": "container",
            "is_presence": "false"
          },
          "properties": {
            "node-edge-point": {
              "type": "array",
              "description": "none (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "topology-uuid": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "leafref"
                  },
                  "node-uuid": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "leafref"
                  },
                  "node-edge-point-uuid": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "leafref"
                  }
                }
              }
            },
            "layer-protocol-name": {
              "type": "array",
              "x-yang": {
                "type": "leaf-list"
              },
              "items": {
                "description": "none (leaf-list)",
                "type": "string",
                "format": "enumeration",
                "default": "ODU",
                "enum": [
                  "ODU",
                  "ETH",
                  "DSR",
                  "PHOTONIC_MEDIA"
                ]
              }
            },
            "direction": {
              "description": "The directionality of the Link.\nIs applicable to simple Links where all LinkEnds are BIDIRECTIONAL (the Link will be BIDIRECTIONAL) or UNIDIRECTIONAL (the Link will be UNIDIRECTIONAL).\nIs not present in more complex cases. (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "BIDIRECTIONAL",
              "enum": [
                "BIDIRECTIONAL",
                "UNIDIRECTIONAL",
                "UNDEFINED_OR_UNKNOWN"
              ]
            },
            "protection-type": {
              "description": "none (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "NO_PROTECTION",
              "enum": [
                "NO_PROTECTION",
                "ONE_PLUS_ONE_PROTECTION",
                "ONE_FOR_ONE_PROTECTION",
                "ONE_FOR_N_PROTECTION",
                "M_FOR_N_PROTECTION",
                "ONE_FOR_ONE_BY_N"
              ]
            },
            "restoration-policy": {
              "description": "none (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "PER_DOMAIN_RESTORATION",
              "enum": [
                "PER_DOMAIN_RESTORATION",
                "END_TO_END_RESTORATION",
                "NA",
                "DYNAMIC_RESTORATION",
                "PRE_COMPUTED_RESTORATION"
              ]
            },
            "uuid": {
              "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "name": {
              "type": "array",
              "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "value-name": {
                    "description": "The name of the value. The value need not have a name. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "value": {
                    "description": "The value (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  }
                }
              }
            },
            "administrative-state": {
              "description": "none (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "LOCKED",
              "enum": [
                "LOCKED",
                "UNLOCKED"
              ]
            },
            "operational-state": {
              "description": "none (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "DISABLED",
              "enum": [
                "DISABLED",
                "ENABLED"
              ]
            },
            "lifecycle-state": {
              "description": "none (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "PLANNED",
              "enum": [
                "PLANNED",
                "POTENTIAL_AVAILABLE",
                "POTENTIAL_BUSY",
                "INSTALLED",
                "PENDING_REMOVAL"
              ]
            },
            "total-potential-capacity": {
              "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
              "type": "object",
              "x-yang": {
                "type": "container",
                "is_presence": "false"
              },
              "properties": {
                "total-size": {
                  "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                  "type": "object",
                  "x-yang": {
                    "type": "container",
                    "is_presence": "false"
                  },
                  "properties": {
                    "value": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "integer",
                      "format": "uint64"
                    },
                    "unit": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "TB",
                      "enum": [
                        "TB",
                        "TBPS",
                        "GB",
                        "GBPS",
                        "MB",
                        "MBPS",
                        "KB",
                        "KBPS",
                        "GHz",
                        "MHz"
                      ]
                    }
                  }
                }
              }
            },
            "available-capacity": {
              "description": "Capacity available to be assigned. (non-presence)",
              "type": "object",
              "x-yang": {
                "type": "container",
                "is_presence": "false"
              },
              "properties": {
                "total-size": {
                  "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                  "type": "object",
                  "x-yang": {
                    "type": "container",
                    "is_presence": "false"
                  },
                  "properties": {
                    "value": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "integer",
                      "format": "uint64"
                    },
                    "unit": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "TB",
                      "enum": [
                        "TB",
                        "TBPS",
                        "GB",
                        "GBPS",
                        "MB",
                        "MBPS",
                        "KB",
                        "KBPS",
                        "GHz",
                        "MHz"
                      ]
                    }
                  }
                }
              }
            },
            "cost-characteristic": {
              "type": "array",
              "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity. (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "cost-name": {
                    "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "cost-value": {
                    "description": "The specific cost. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "cost-algorithm": {
                    "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  }
                }
              }
            },
            "error-characteristic": {
              "description": "Describes the degree to which the signal propagated can be errored.\nApplies to TDM systems as the errored signal will be propagated and not packet as errored packets will be discarded. (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "loss-characteristic": {
              "description": "Describes the acceptable characteristic of lost packets where loss may result from discard due to errors or overflow.\nApplies to packet systems and not TDM (as for TDM errored signals are propagated unless grossly errored and overflow/underflow turns into timing slips). (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "repeat-delivery-characteristic": {
              "description": "Primarily applies to packet systems where a packet may be delivered more than once (in fault recovery for example).\nIt can also apply to TDM where several frames may be received twice due to switching in a system with a large differential propagation delay. (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "delivery-order-characteristic": {
              "description": "Describes the degree to which packets will be delivered out of sequence.\nDoes not apply to TDM as the TDM protocols maintain strict order. (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "unavailable-time-characteristic": {
              "description": "Describes the duration for which there may be no valid signal propagated. (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "server-integrity-process-characteristic": {
              "description": "Describes the effect of any server integrity enhancement process on the characteristics of the TopologicalEntity. (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "latency-characteristic": {
              "type": "array",
              "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic. (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "traffic-property-name": {
                    "description": "The identifier of the specific traffic property to which the queuing latency applies. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "fixed-latency-characteristic": {
                    "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "queing-latency-characteristic": {
                    "description": "The specific queuing latency for the traffic property. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "jitter-characteristic": {
                    "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "wander-characteristic": {
                    "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  }
                }
              }
            },
            "risk-characteristic": {
              "type": "array",
              "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration. (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "risk-characteristic-name": {
                    "description": "The name of the risk characteristic. The characteristic may be related to a specific degree of closeness.\nFor example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).\nDepending upon the importance of the traffic being routed different risk characteristics will be evaluated. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "risk-identifier-list": {
                    "type": "array",
                    "x-yang": {
                      "type": "leaf-list"
                    },
                    "items": {
                      "description": "A list of the identifiers of each physical/geographic unit (with the specific risk characteristic) that is related to a segment of the TopologicalEntity. (leaf-list)",
                      "type": "string",
                      "format": "string"
                    }
                  }
                }
              }
            },
            "validation-mechanism": {
              "type": "array",
              "description": "Provides details of the specific validation mechanism(s) used to confirm the presence of an intended topologicalEntity. (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "validation-mechanism": {
                    "description": "Name of mechanism used to validate adjacency (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "layer-protocol-adjacency-validated": {
                    "description": "State of validatiion (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "validation-robustness": {
                    "description": "Quality of validation (i.e. how likely is the stated validation to be invalid) (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  }
                }
              }
            },
            "transitioned-layer-protocol-name": {
              "type": "array",
              "x-yang": {
                "type": "leaf-list"
              },
              "items": {
                "description": "Provides the ordered structure of layer protocol transitions encapsulated in the TopologicalEntity. The ordering relates to the LinkPort role. (leaf-list)",
                "type": "string",
                "format": "string"
              }
            }
          }
        }
      }
    },
    "operations_tapi-topology_get-link-details-post-input": {
      "type": "object",
      "properties": {
        "tapi-topology:topology-id-or-name": {
          "description": "none (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "string"
        },
        "tapi-topology:link-id-or-name": {
          "description": "none (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "string"
        }
      }
    },
    "operations": {
      "type": "object",
      "properties": {
        "ietf-restconf:operations": {
          "type": "object",
          "x-yang": {
            "type": "operations"
          },
          "description": "This resource is a container that provides access to the data-model-specific RPC operations supported by the server. See RESTCONF RFC 8040 for further information.",
          "properties": {

            "tapi-topology:get-topology-details": {
              "type": "string",
              "format": "[null]"
            },
            "tapi-topology:get-node-details": {
              "type": "string",
              "format": "[null]"
            },
            "tapi-topology:get-node-edge-point-details": {
              "type": "string",
              "format": "[null]"
            },
            "tapi-topology:get-link-details": {
              "type": "string",
              "format": "[null]"
            },
            "tapi-topology:get-topology-list": {
              "type": "string",
              "format": "[null]"
            }
          }
        }
      }
    },
    "data_tapi-topology_get-topology-list-post-output": {
      "type": "object",
      "properties": {
        "tapi-topology:topology": {
          "type": "array",
          "description": "none (list)",
          "x-yang": {
            "type": "list"
          },
          "items": {
            "type": "object",
            "properties": {
              "node": {
                "type": "array",
                "description": "none (list)",
                "x-yang": {
                  "type": "list"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "node-edge-point": {
                      "type": "array",
                      "description": "none (list)",
                      "x-yang": {
                        "type": "list"
                      },
                      "items": {
                        "type": "object",
                        "properties": {
                          "layer-protocol-name": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "ODU",
                            "enum": [
                              "ODU",
                              "ETH",
                              "DSR",
                              "PHOTONIC_MEDIA"
                            ]
                          },
                          "available-cep-layer-protocol": {
                            "type": "array",
                            "description": "none (list)",
                            "x-yang": {
                              "type": "list"
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "layer-protocol-qualifier": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "identityref"
                                },
                                "number-of-cep-instances": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "integer",
                                  "format": "uint64"
                                }
                              }
                            }
                          },
                          "aggregated-node-edge-point": {
                            "type": "array",
                            "description": "none (list)",
                            "x-yang": {
                              "type": "list"
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "topology-uuid": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "leafref"
                                },
                                "node-uuid": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "leafref"
                                },
                                "node-edge-point-uuid": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "leafref"
                                }
                              }
                            }
                          },
                          "mapped-service-interface-point": {
                            "type": "array",
                            "description": "NodeEdgePoint mapped to more than ServiceInterfacePoint (slicing/virtualizing) or a ServiceInterfacePoint mapped to more than one NodeEdgePoint (load balancing/Resilience) should be considered experimental (list)",
                            "x-yang": {
                              "type": "list"
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "service-interface-point-uuid": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "leafref"
                                }
                              }
                            }
                          },
                          "link-port-direction": {
                            "description": "The orientation of defined flow at the LinkEnd. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "BIDIRECTIONAL",
                            "enum": [
                              "BIDIRECTIONAL",
                              "INPUT",
                              "OUTPUT",
                              "UNIDENTIFIED_OR_UNKNOWN"
                            ]
                          },
                          "link-port-role": {
                            "description": "Each LinkEnd of the Link has a role (e.g., symmetric, hub, spoke, leaf, root)  in the context of the Link with respect to the Link function.  (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "SYMMETRIC",
                            "enum": [
                              "SYMMETRIC",
                              "ROOT",
                              "LEAF",
                              "TRUNK",
                              "UNKNOWN"
                            ]
                          },
                          "uuid": {
                            "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "name": {
                            "type": "array",
                            "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                            "x-yang": {
                              "type": "list"
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "value-name": {
                                  "description": "The name of the value. The value need not have a name. (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                },
                                "value": {
                                  "description": "The value (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                }
                              }
                            }
                          },
                          "administrative-state": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "LOCKED",
                            "enum": [
                              "LOCKED",
                              "UNLOCKED"
                            ]
                          },
                          "operational-state": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "DISABLED",
                            "enum": [
                              "DISABLED",
                              "ENABLED"
                            ]
                          },
                          "lifecycle-state": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "PLANNED",
                            "enum": [
                              "PLANNED",
                              "POTENTIAL_AVAILABLE",
                              "POTENTIAL_BUSY",
                              "INSTALLED",
                              "PENDING_REMOVAL"
                            ]
                          },
                          "termination-direction": {
                            "description": "The overall directionality of the LP.\n- A BIDIRECTIONAL LP will have some SINK and/or SOURCE flowss.\n- A SINK LP can only contain elements with SINK flows or CONTRA_DIRECTION_SOURCE flows\n- A SOURCE LP can only contain SOURCE flows or CONTRA_DIRECTION_SINK flows (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "BIDIRECTIONAL",
                            "enum": [
                              "BIDIRECTIONAL",
                              "SINK",
                              "SOURCE",
                              "UNDEFINED_OR_UNKNOWN"
                            ]
                          },
                          "termination-state": {
                            "description": "Indicates whether the layer is terminated and if so how. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "LP_CAN_NEVER_TERMINATE",
                            "enum": [
                              "LP_CAN_NEVER_TERMINATE",
                              "LT_NOT_TERMINATED",
                              "TERMINATED_SERVER_TO_CLIENT_FLOW",
                              "TERMINATED_CLIENT_TO_SERVER_FLOW",
                              "TERMINATED_BIDIRECTIONAL",
                              "LT_PERMENANTLY_TERMINATED",
                              "TERMINATION_STATE_UNKNOWN"
                            ]
                          },
                          "total-potential-capacity": {
                            "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
                            "type": "object",
                            "x-yang": {
                              "type": "container",
                              "is_presence": "false"
                            },
                            "properties": {
                              "total-size": {
                                "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                                "type": "object",
                                "x-yang": {
                                  "type": "container",
                                  "is_presence": "false"
                                },
                                "properties": {
                                  "value": {
                                    "description": "none (leaf)",
                                    "x-yang": {
                                      "type": "leaf"
                                    },
                                    "type": "integer",
                                    "format": "uint64"
                                  },
                                  "unit": {
                                    "description": "none (leaf)",
                                    "x-yang": {
                                      "type": "leaf"
                                    },
                                    "type": "string",
                                    "format": "enumeration",
                                    "default": "TB",
                                    "enum": [
                                      "TB",
                                      "TBPS",
                                      "GB",
                                      "GBPS",
                                      "MB",
                                      "MBPS",
                                      "KB",
                                      "KBPS",
                                      "GHz",
                                      "MHz"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "available-capacity": {
                            "description": "Capacity available to be assigned. (non-presence)",
                            "type": "object",
                            "x-yang": {
                              "type": "container",
                              "is_presence": "false"
                            },
                            "properties": {
                              "total-size": {
                                "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                                "type": "object",
                                "x-yang": {
                                  "type": "container",
                                  "is_presence": "false"
                                },
                                "properties": {
                                  "value": {
                                    "description": "none (leaf)",
                                    "x-yang": {
                                      "type": "leaf"
                                    },
                                    "type": "integer",
                                    "format": "uint64"
                                  },
                                  "unit": {
                                    "description": "none (leaf)",
                                    "x-yang": {
                                      "type": "leaf"
                                    },
                                    "type": "string",
                                    "format": "enumeration",
                                    "default": "TB",
                                    "enum": [
                                      "TB",
                                      "TBPS",
                                      "GB",
                                      "GBPS",
                                      "MB",
                                      "MBPS",
                                      "KB",
                                      "KBPS",
                                      "GHz",
                                      "MHz"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "aggregated-node-edge-point": {
                      "type": "array",
                      "description": "none (list)",
                      "x-yang": {
                        "type": "list"
                      },
                      "items": {
                        "type": "object",
                        "properties": {
                          "topology-uuid": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "leafref"
                          },
                          "node-uuid": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "leafref"
                          },
                          "node-edge-point-uuid": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "leafref"
                          }
                        }
                      }
                    },
                    "node-rule-group": {
                      "type": "array",
                      "description": "none (list)",
                      "x-yang": {
                        "type": "list"
                      },
                      "items": {
                        "type": "object",
                        "properties": {
                          "rule": {
                            "type": "array",
                            "description": "none (list)",
                            "x-yang": {
                              "type": "list"
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "rule-type": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "enumeration",
                                  "default": "FORWARDING",
                                  "enum": [
                                    "FORWARDING",
                                    "CAPACITY",
                                    "COST",
                                    "TIMING",
                                    "RISK",
                                    "GROUPING"
                                  ]
                                },
                                "forwarding-rule": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "enumeration",
                                  "default": "MAY_FORWARD_ACROSS_GROUP",
                                  "enum": [
                                    "MAY_FORWARD_ACROSS_GROUP",
                                    "MUST_FORWARD_ACROSS_GROUP",
                                    "CANNOT_FORWARD_ACROSS_GROUP",
                                    "NO_STATEMENT_ON_FORWARDING"
                                  ]
                                },
                                "override-priority": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "integer",
                                  "format": "uint64"
                                },
                                "local-id": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                },
                                "name": {
                                  "type": "array",
                                  "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                                  "x-yang": {
                                    "type": "list"
                                  },
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "value-name": {
                                        "description": "The name of the value. The value need not have a name. (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "string"
                                      },
                                      "value": {
                                        "description": "The value (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "node-edge-point": {
                            "type": "array",
                            "description": "none (list)",
                            "x-yang": {
                              "type": "list"
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "topology-uuid": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "leafref"
                                },
                                "node-uuid": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "leafref"
                                },
                                "node-edge-point-uuid": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "leafref"
                                }
                              }
                            }
                          },
                          "composed-rule-group": {
                            "type": "array",
                            "description": "none (list)",
                            "x-yang": {
                              "type": "list"
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "topology-uuid": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "leafref"
                                },
                                "node-uuid": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "leafref"
                                },
                                "node-rule-group-uuid": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "leafref"
                                }
                              }
                            }
                          },
                          "inter-rule-group": {
                            "type": "array",
                            "description": "none (list)",
                            "x-yang": {
                              "type": "list"
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "rule": {
                                  "type": "array",
                                  "description": "none (list)",
                                  "x-yang": {
                                    "type": "list"
                                  },
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "rule-type": {
                                        "description": "none (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "enumeration",
                                        "default": "FORWARDING",
                                        "enum": [
                                          "FORWARDING",
                                          "CAPACITY",
                                          "COST",
                                          "TIMING",
                                          "RISK",
                                          "GROUPING"
                                        ]
                                      },
                                      "forwarding-rule": {
                                        "description": "none (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "enumeration",
                                        "default": "MAY_FORWARD_ACROSS_GROUP",
                                        "enum": [
                                          "MAY_FORWARD_ACROSS_GROUP",
                                          "MUST_FORWARD_ACROSS_GROUP",
                                          "CANNOT_FORWARD_ACROSS_GROUP",
                                          "NO_STATEMENT_ON_FORWARDING"
                                        ]
                                      },
                                      "override-priority": {
                                        "description": "none (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "integer",
                                        "format": "uint64"
                                      },
                                      "local-id": {
                                        "description": "none (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "string"
                                      },
                                      "name": {
                                        "type": "array",
                                        "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                                        "x-yang": {
                                          "type": "list"
                                        },
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "value-name": {
                                              "description": "The name of the value. The value need not have a name. (leaf)",
                                              "x-yang": {
                                                "type": "leaf"
                                              },
                                              "type": "string",
                                              "format": "string"
                                            },
                                            "value": {
                                              "description": "The value (leaf)",
                                              "x-yang": {
                                                "type": "leaf"
                                              },
                                              "type": "string",
                                              "format": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "associated-node-rule-group": {
                                  "type": "array",
                                  "description": "none (list)",
                                  "x-yang": {
                                    "type": "list"
                                  },
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "topology-uuid": {
                                        "description": "none (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "leafref"
                                      },
                                      "node-uuid": {
                                        "description": "none (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "leafref"
                                      },
                                      "node-rule-group-uuid": {
                                        "description": "none (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "leafref"
                                      }
                                    }
                                  }
                                },
                                "uuid": {
                                  "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                },
                                "name": {
                                  "type": "array",
                                  "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                                  "x-yang": {
                                    "type": "list"
                                  },
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "value-name": {
                                        "description": "The name of the value. The value need not have a name. (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "string"
                                      },
                                      "value": {
                                        "description": "The value (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "string"
                                      }
                                    }
                                  }
                                },
                                "total-potential-capacity": {
                                  "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
                                  "type": "object",
                                  "x-yang": {
                                    "type": "container",
                                    "is_presence": "false"
                                  },
                                  "properties": {
                                    "total-size": {
                                      "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                                      "type": "object",
                                      "x-yang": {
                                        "type": "container",
                                        "is_presence": "false"
                                      },
                                      "properties": {
                                        "value": {
                                          "description": "none (leaf)",
                                          "x-yang": {
                                            "type": "leaf"
                                          },
                                          "type": "integer",
                                          "format": "uint64"
                                        },
                                        "unit": {
                                          "description": "none (leaf)",
                                          "x-yang": {
                                            "type": "leaf"
                                          },
                                          "type": "string",
                                          "format": "enumeration",
                                          "default": "TB",
                                          "enum": [
                                            "TB",
                                            "TBPS",
                                            "GB",
                                            "GBPS",
                                            "MB",
                                            "MBPS",
                                            "KB",
                                            "KBPS",
                                            "GHz",
                                            "MHz"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                },
                                "available-capacity": {
                                  "description": "Capacity available to be assigned. (non-presence)",
                                  "type": "object",
                                  "x-yang": {
                                    "type": "container",
                                    "is_presence": "false"
                                  },
                                  "properties": {
                                    "total-size": {
                                      "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                                      "type": "object",
                                      "x-yang": {
                                        "type": "container",
                                        "is_presence": "false"
                                      },
                                      "properties": {
                                        "value": {
                                          "description": "none (leaf)",
                                          "x-yang": {
                                            "type": "leaf"
                                          },
                                          "type": "integer",
                                          "format": "uint64"
                                        },
                                        "unit": {
                                          "description": "none (leaf)",
                                          "x-yang": {
                                            "type": "leaf"
                                          },
                                          "type": "string",
                                          "format": "enumeration",
                                          "default": "TB",
                                          "enum": [
                                            "TB",
                                            "TBPS",
                                            "GB",
                                            "GBPS",
                                            "MB",
                                            "MBPS",
                                            "KB",
                                            "KBPS",
                                            "GHz",
                                            "MHz"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                },
                                "cost-characteristic": {
                                  "type": "array",
                                  "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity. (list)",
                                  "x-yang": {
                                    "type": "list"
                                  },
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "cost-name": {
                                        "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName. (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "string"
                                      },
                                      "cost-value": {
                                        "description": "The specific cost. (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "string"
                                      },
                                      "cost-algorithm": {
                                        "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm. (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "string"
                                      }
                                    }
                                  }
                                },
                                "latency-characteristic": {
                                  "type": "array",
                                  "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic. (list)",
                                  "x-yang": {
                                    "type": "list"
                                  },
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "traffic-property-name": {
                                        "description": "The identifier of the specific traffic property to which the queuing latency applies. (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "string"
                                      },
                                      "fixed-latency-characteristic": {
                                        "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "string"
                                      },
                                      "queing-latency-characteristic": {
                                        "description": "The specific queuing latency for the traffic property. (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "string"
                                      },
                                      "jitter-characteristic": {
                                        "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "string"
                                      },
                                      "wander-characteristic": {
                                        "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "string"
                                      }
                                    }
                                  }
                                },
                                "risk-characteristic": {
                                  "type": "array",
                                  "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration. (list)",
                                  "x-yang": {
                                    "type": "list"
                                  },
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "risk-characteristic-name": {
                                        "description": "The name of the risk characteristic. The characteristic may be related to a specific degree of closeness.\nFor example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).\nDepending upon the importance of the traffic being routed different risk characteristics will be evaluated. (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "string"
                                      },
                                      "risk-identifier-list": {
                                        "type": "array",
                                        "x-yang": {
                                          "type": "leaf-list"
                                        },
                                        "items": {
                                          "description": "A list of the identifiers of each physical/geographic unit (with the specific risk characteristic) that is related to a segment of the TopologicalEntity. (leaf-list)",
                                          "type": "string",
                                          "format": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "uuid": {
                            "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "name": {
                            "type": "array",
                            "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                            "x-yang": {
                              "type": "list"
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "value-name": {
                                  "description": "The name of the value. The value need not have a name. (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                },
                                "value": {
                                  "description": "The value (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                }
                              }
                            }
                          },
                          "total-potential-capacity": {
                            "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
                            "type": "object",
                            "x-yang": {
                              "type": "container",
                              "is_presence": "false"
                            },
                            "properties": {
                              "total-size": {
                                "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                                "type": "object",
                                "x-yang": {
                                  "type": "container",
                                  "is_presence": "false"
                                },
                                "properties": {
                                  "value": {
                                    "description": "none (leaf)",
                                    "x-yang": {
                                      "type": "leaf"
                                    },
                                    "type": "integer",
                                    "format": "uint64"
                                  },
                                  "unit": {
                                    "description": "none (leaf)",
                                    "x-yang": {
                                      "type": "leaf"
                                    },
                                    "type": "string",
                                    "format": "enumeration",
                                    "default": "TB",
                                    "enum": [
                                      "TB",
                                      "TBPS",
                                      "GB",
                                      "GBPS",
                                      "MB",
                                      "MBPS",
                                      "KB",
                                      "KBPS",
                                      "GHz",
                                      "MHz"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "available-capacity": {
                            "description": "Capacity available to be assigned. (non-presence)",
                            "type": "object",
                            "x-yang": {
                              "type": "container",
                              "is_presence": "false"
                            },
                            "properties": {
                              "total-size": {
                                "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                                "type": "object",
                                "x-yang": {
                                  "type": "container",
                                  "is_presence": "false"
                                },
                                "properties": {
                                  "value": {
                                    "description": "none (leaf)",
                                    "x-yang": {
                                      "type": "leaf"
                                    },
                                    "type": "integer",
                                    "format": "uint64"
                                  },
                                  "unit": {
                                    "description": "none (leaf)",
                                    "x-yang": {
                                      "type": "leaf"
                                    },
                                    "type": "string",
                                    "format": "enumeration",
                                    "default": "TB",
                                    "enum": [
                                      "TB",
                                      "TBPS",
                                      "GB",
                                      "GBPS",
                                      "MB",
                                      "MBPS",
                                      "KB",
                                      "KBPS",
                                      "GHz",
                                      "MHz"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "cost-characteristic": {
                            "type": "array",
                            "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity. (list)",
                            "x-yang": {
                              "type": "list"
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "cost-name": {
                                  "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName. (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                },
                                "cost-value": {
                                  "description": "The specific cost. (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                },
                                "cost-algorithm": {
                                  "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm. (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                }
                              }
                            }
                          },
                          "latency-characteristic": {
                            "type": "array",
                            "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic. (list)",
                            "x-yang": {
                              "type": "list"
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "traffic-property-name": {
                                  "description": "The identifier of the specific traffic property to which the queuing latency applies. (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                },
                                "fixed-latency-characteristic": {
                                  "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                },
                                "queing-latency-characteristic": {
                                  "description": "The specific queuing latency for the traffic property. (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                },
                                "jitter-characteristic": {
                                  "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                },
                                "wander-characteristic": {
                                  "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                }
                              }
                            }
                          },
                          "risk-characteristic": {
                            "type": "array",
                            "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration. (list)",
                            "x-yang": {
                              "type": "list"
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "risk-characteristic-name": {
                                  "description": "The name of the risk characteristic. The characteristic may be related to a specific degree of closeness.\nFor example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).\nDepending upon the importance of the traffic being routed different risk characteristics will be evaluated. (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "string"
                                },
                                "risk-identifier-list": {
                                  "type": "array",
                                  "x-yang": {
                                    "type": "leaf-list"
                                  },
                                  "items": {
                                    "description": "A list of the identifiers of each physical/geographic unit (with the specific risk characteristic) that is related to a segment of the TopologicalEntity. (leaf-list)",
                                    "type": "string",
                                    "format": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "encap-topology": {
                      "description": "none (non-presence)",
                      "type": "object",
                      "x-yang": {
                        "type": "container",
                        "is_presence": "false"
                      },
                      "properties": {
                        "topology-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        }
                      }
                    },
                    "layer-protocol-name": {
                      "type": "array",
                      "x-yang": {
                        "type": "leaf-list"
                      },
                      "items": {
                        "description": "none (leaf-list)",
                        "type": "string",
                        "format": "enumeration",
                        "default": "ODU",
                        "enum": [
                          "ODU",
                          "ETH",
                          "DSR",
                          "PHOTONIC_MEDIA"
                        ]
                      }
                    },
                    "uuid": {
                      "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "name": {
                      "type": "array",
                      "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                      "x-yang": {
                        "type": "list"
                      },
                      "items": {
                        "type": "object",
                        "properties": {
                          "value-name": {
                            "description": "The name of the value. The value need not have a name. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "value": {
                            "description": "The value (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          }
                        }
                      }
                    },
                    "administrative-state": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "LOCKED",
                      "enum": [
                        "LOCKED",
                        "UNLOCKED"
                      ]
                    },
                    "operational-state": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "DISABLED",
                      "enum": [
                        "DISABLED",
                        "ENABLED"
                      ]
                    },
                    "lifecycle-state": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "PLANNED",
                      "enum": [
                        "PLANNED",
                        "POTENTIAL_AVAILABLE",
                        "POTENTIAL_BUSY",
                        "INSTALLED",
                        "PENDING_REMOVAL"
                      ]
                    },
                    "total-potential-capacity": {
                      "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
                      "type": "object",
                      "x-yang": {
                        "type": "container",
                        "is_presence": "false"
                      },
                      "properties": {
                        "total-size": {
                          "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                          "type": "object",
                          "x-yang": {
                            "type": "container",
                            "is_presence": "false"
                          },
                          "properties": {
                            "value": {
                              "description": "none (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "integer",
                              "format": "uint64"
                            },
                            "unit": {
                              "description": "none (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "string",
                              "format": "enumeration",
                              "default": "TB",
                              "enum": [
                                "TB",
                                "TBPS",
                                "GB",
                                "GBPS",
                                "MB",
                                "MBPS",
                                "KB",
                                "KBPS",
                                "GHz",
                                "MHz"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "available-capacity": {
                      "description": "Capacity available to be assigned. (non-presence)",
                      "type": "object",
                      "x-yang": {
                        "type": "container",
                        "is_presence": "false"
                      },
                      "properties": {
                        "total-size": {
                          "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                          "type": "object",
                          "x-yang": {
                            "type": "container",
                            "is_presence": "false"
                          },
                          "properties": {
                            "value": {
                              "description": "none (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "integer",
                              "format": "uint64"
                            },
                            "unit": {
                              "description": "none (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "string",
                              "format": "enumeration",
                              "default": "TB",
                              "enum": [
                                "TB",
                                "TBPS",
                                "GB",
                                "GBPS",
                                "MB",
                                "MBPS",
                                "KB",
                                "KBPS",
                                "GHz",
                                "MHz"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "cost-characteristic": {
                      "type": "array",
                      "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity. (list)",
                      "x-yang": {
                        "type": "list"
                      },
                      "items": {
                        "type": "object",
                        "properties": {
                          "cost-name": {
                            "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "cost-value": {
                            "description": "The specific cost. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "cost-algorithm": {
                            "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          }
                        }
                      }
                    },
                    "error-characteristic": {
                      "description": "Describes the degree to which the signal propagated can be errored.\nApplies to TDM systems as the errored signal will be propagated and not packet as errored packets will be discarded. (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "loss-characteristic": {
                      "description": "Describes the acceptable characteristic of lost packets where loss may result from discard due to errors or overflow.\nApplies to packet systems and not TDM (as for TDM errored signals are propagated unless grossly errored and overflow/underflow turns into timing slips). (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "repeat-delivery-characteristic": {
                      "description": "Primarily applies to packet systems where a packet may be delivered more than once (in fault recovery for example).\nIt can also apply to TDM where several frames may be received twice due to switching in a system with a large differential propagation delay. (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "delivery-order-characteristic": {
                      "description": "Describes the degree to which packets will be delivered out of sequence.\nDoes not apply to TDM as the TDM protocols maintain strict order. (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "unavailable-time-characteristic": {
                      "description": "Describes the duration for which there may be no valid signal propagated. (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "server-integrity-process-characteristic": {
                      "description": "Describes the effect of any server integrity enhancement process on the characteristics of the TopologicalEntity. (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "latency-characteristic": {
                      "type": "array",
                      "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic. (list)",
                      "x-yang": {
                        "type": "list"
                      },
                      "items": {
                        "type": "object",
                        "properties": {
                          "traffic-property-name": {
                            "description": "The identifier of the specific traffic property to which the queuing latency applies. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "fixed-latency-characteristic": {
                            "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "queing-latency-characteristic": {
                            "description": "The specific queuing latency for the traffic property. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "jitter-characteristic": {
                            "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "wander-characteristic": {
                            "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "link": {
                "type": "array",
                "description": "none (list)",
                "x-yang": {
                  "type": "list"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "node-edge-point": {
                      "type": "array",
                      "description": "none (list)",
                      "x-yang": {
                        "type": "list"
                      },
                      "items": {
                        "type": "object",
                        "properties": {
                          "topology-uuid": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "leafref"
                          },
                          "node-uuid": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "leafref"
                          },
                          "node-edge-point-uuid": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "leafref"
                          }
                        }
                      }
                    },
                    "layer-protocol-name": {
                      "type": "array",
                      "x-yang": {
                        "type": "leaf-list"
                      },
                      "items": {
                        "description": "none (leaf-list)",
                        "type": "string",
                        "format": "enumeration",
                        "default": "ODU",
                        "enum": [
                          "ODU",
                          "ETH",
                          "DSR",
                          "PHOTONIC_MEDIA"
                        ]
                      }
                    },
                    "direction": {
                      "description": "The directionality of the Link.\nIs applicable to simple Links where all LinkEnds are BIDIRECTIONAL (the Link will be BIDIRECTIONAL) or UNIDIRECTIONAL (the Link will be UNIDIRECTIONAL).\nIs not present in more complex cases. (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "BIDIRECTIONAL",
                      "enum": [
                        "BIDIRECTIONAL",
                        "UNIDIRECTIONAL",
                        "UNDEFINED_OR_UNKNOWN"
                      ]
                    },
                    "protection-type": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "NO_PROTECTION",
                      "enum": [
                        "NO_PROTECTION",
                        "ONE_PLUS_ONE_PROTECTION",
                        "ONE_FOR_ONE_PROTECTION",
                        "ONE_FOR_N_PROTECTION",
                        "M_FOR_N_PROTECTION",
                        "ONE_FOR_ONE_BY_N"
                      ]
                    },
                    "restoration-policy": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "PER_DOMAIN_RESTORATION",
                      "enum": [
                        "PER_DOMAIN_RESTORATION",
                        "END_TO_END_RESTORATION",
                        "NA",
                        "DYNAMIC_RESTORATION",
                        "PRE_COMPUTED_RESTORATION"
                      ]
                    },
                    "uuid": {
                      "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "name": {
                      "type": "array",
                      "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                      "x-yang": {
                        "type": "list"
                      },
                      "items": {
                        "type": "object",
                        "properties": {
                          "value-name": {
                            "description": "The name of the value. The value need not have a name. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "value": {
                            "description": "The value (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          }
                        }
                      }
                    },
                    "administrative-state": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "LOCKED",
                      "enum": [
                        "LOCKED",
                        "UNLOCKED"
                      ]
                    },
                    "operational-state": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "DISABLED",
                      "enum": [
                        "DISABLED",
                        "ENABLED"
                      ]
                    },
                    "lifecycle-state": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "PLANNED",
                      "enum": [
                        "PLANNED",
                        "POTENTIAL_AVAILABLE",
                        "POTENTIAL_BUSY",
                        "INSTALLED",
                        "PENDING_REMOVAL"
                      ]
                    },
                    "total-potential-capacity": {
                      "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
                      "type": "object",
                      "x-yang": {
                        "type": "container",
                        "is_presence": "false"
                      },
                      "properties": {
                        "total-size": {
                          "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                          "type": "object",
                          "x-yang": {
                            "type": "container",
                            "is_presence": "false"
                          },
                          "properties": {
                            "value": {
                              "description": "none (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "integer",
                              "format": "uint64"
                            },
                            "unit": {
                              "description": "none (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "string",
                              "format": "enumeration",
                              "default": "TB",
                              "enum": [
                                "TB",
                                "TBPS",
                                "GB",
                                "GBPS",
                                "MB",
                                "MBPS",
                                "KB",
                                "KBPS",
                                "GHz",
                                "MHz"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "available-capacity": {
                      "description": "Capacity available to be assigned. (non-presence)",
                      "type": "object",
                      "x-yang": {
                        "type": "container",
                        "is_presence": "false"
                      },
                      "properties": {
                        "total-size": {
                          "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                          "type": "object",
                          "x-yang": {
                            "type": "container",
                            "is_presence": "false"
                          },
                          "properties": {
                            "value": {
                              "description": "none (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "integer",
                              "format": "uint64"
                            },
                            "unit": {
                              "description": "none (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "string",
                              "format": "enumeration",
                              "default": "TB",
                              "enum": [
                                "TB",
                                "TBPS",
                                "GB",
                                "GBPS",
                                "MB",
                                "MBPS",
                                "KB",
                                "KBPS",
                                "GHz",
                                "MHz"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "cost-characteristic": {
                      "type": "array",
                      "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity. (list)",
                      "x-yang": {
                        "type": "list"
                      },
                      "items": {
                        "type": "object",
                        "properties": {
                          "cost-name": {
                            "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "cost-value": {
                            "description": "The specific cost. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "cost-algorithm": {
                            "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          }
                        }
                      }
                    },
                    "error-characteristic": {
                      "description": "Describes the degree to which the signal propagated can be errored.\nApplies to TDM systems as the errored signal will be propagated and not packet as errored packets will be discarded. (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "loss-characteristic": {
                      "description": "Describes the acceptable characteristic of lost packets where loss may result from discard due to errors or overflow.\nApplies to packet systems and not TDM (as for TDM errored signals are propagated unless grossly errored and overflow/underflow turns into timing slips). (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "repeat-delivery-characteristic": {
                      "description": "Primarily applies to packet systems where a packet may be delivered more than once (in fault recovery for example).\nIt can also apply to TDM where several frames may be received twice due to switching in a system with a large differential propagation delay. (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "delivery-order-characteristic": {
                      "description": "Describes the degree to which packets will be delivered out of sequence.\nDoes not apply to TDM as the TDM protocols maintain strict order. (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "unavailable-time-characteristic": {
                      "description": "Describes the duration for which there may be no valid signal propagated. (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "server-integrity-process-characteristic": {
                      "description": "Describes the effect of any server integrity enhancement process on the characteristics of the TopologicalEntity. (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "latency-characteristic": {
                      "type": "array",
                      "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic. (list)",
                      "x-yang": {
                        "type": "list"
                      },
                      "items": {
                        "type": "object",
                        "properties": {
                          "traffic-property-name": {
                            "description": "The identifier of the specific traffic property to which the queuing latency applies. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "fixed-latency-characteristic": {
                            "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "queing-latency-characteristic": {
                            "description": "The specific queuing latency for the traffic property. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "jitter-characteristic": {
                            "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "wander-characteristic": {
                            "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          }
                        }
                      }
                    },
                    "risk-characteristic": {
                      "type": "array",
                      "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration. (list)",
                      "x-yang": {
                        "type": "list"
                      },
                      "items": {
                        "type": "object",
                        "properties": {
                          "risk-characteristic-name": {
                            "description": "The name of the risk characteristic. The characteristic may be related to a specific degree of closeness.\nFor example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).\nDepending upon the importance of the traffic being routed different risk characteristics will be evaluated. (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "risk-identifier-list": {
                            "type": "array",
                            "x-yang": {
                              "type": "leaf-list"
                            },
                            "items": {
                              "description": "A list of the identifiers of each physical/geographic unit (with the specific risk characteristic) that is related to a segment of the TopologicalEntity. (leaf-list)",
                              "type": "string",
                              "format": "string"
                            }
                          }
                        }
                      }
                    },
                    "validation-mechanism": {
                      "type": "array",
                      "description": "Provides details of the specific validation mechanism(s) used to confirm the presence of an intended topologicalEntity. (list)",
                      "x-yang": {
                        "type": "list"
                      },
                      "items": {
                        "type": "object",
                        "properties": {
                          "validation-mechanism": {
                            "description": "Name of mechanism used to validate adjacency (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "layer-protocol-adjacency-validated": {
                            "description": "State of validatiion (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          },
                          "validation-robustness": {
                            "description": "Quality of validation (i.e. how likely is the stated validation to be invalid) (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "string"
                          }
                        }
                      }
                    },
                    "transitioned-layer-protocol-name": {
                      "type": "array",
                      "x-yang": {
                        "type": "leaf-list"
                      },
                      "items": {
                        "description": "Provides the ordered structure of layer protocol transitions encapsulated in the TopologicalEntity. The ordering relates to the LinkPort role. (leaf-list)",
                        "type": "string",
                        "format": "string"
                      }
                    }
                  }
                }
              },
              "layer-protocol-name": {
                "type": "array",
                "x-yang": {
                  "type": "leaf-list"
                },
                "items": {
                  "description": "none (leaf-list)",
                  "type": "string",
                  "format": "enumeration",
                  "default": "ODU",
                  "enum": [
                    "ODU",
                    "ETH",
                    "DSR",
                    "PHOTONIC_MEDIA"
                  ]
                }
              },
              "boundary-node-edge-point": {
                "type": "array",
                "description": "none (list)",
                "x-yang": {
                  "type": "list"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "topology-uuid": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "leafref"
                    },
                    "node-uuid": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "leafref"
                    },
                    "node-edge-point-uuid": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "leafref"
                    }
                  }
                }
              },
              "uuid": {
                "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "string",
                "format": "string"
              },
              "name": {
                "type": "array",
                "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                "x-yang": {
                  "type": "list"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "value-name": {
                      "description": "The name of the value. The value need not have a name. (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    },
                    "value": {
                      "description": "The value (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "data_tapi-topology_get-topology-list-post-input": {
      "type": "object",
      "properties": {
      }
    },
    "data_tapi-topology_get-topology-details-post-output": {
      "type": "object",
      "properties": {
        "tapi-topology:topology": {
          "description": "none (non-presence)",
          "type": "object",
          "x-yang": {
            "type": "container",
            "is_presence": "false"
          },
          "properties": {
            "node": {
              "type": "array",
              "description": "none (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "node-edge-point": {
                    "type": "array",
                    "description": "none (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "layer-protocol-name": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "enumeration",
                          "default": "ODU",
                          "enum": [
                            "ODU",
                            "ETH",
                            "DSR",
                            "PHOTONIC_MEDIA"
                          ]
                        },
                        "available-cep-layer-protocol": {
                          "type": "array",
                          "description": "none (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "layer-protocol-qualifier": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "identityref"
                              },
                              "number-of-cep-instances": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "integer",
                                "format": "uint64"
                              }
                            }
                          }
                        },
                        "aggregated-node-edge-point": {
                          "type": "array",
                          "description": "none (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "topology-uuid": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "leafref"
                              },
                              "node-uuid": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "leafref"
                              },
                              "node-edge-point-uuid": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "leafref"
                              }
                            }
                          }
                        },
                        "mapped-service-interface-point": {
                          "type": "array",
                          "description": "NodeEdgePoint mapped to more than ServiceInterfacePoint (slicing/virtualizing) or a ServiceInterfacePoint mapped to more than one NodeEdgePoint (load balancing/Resilience) should be considered experimental (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "service-interface-point-uuid": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "leafref"
                              }
                            }
                          }
                        },
                        "link-port-direction": {
                          "description": "The orientation of defined flow at the LinkEnd. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "enumeration",
                          "default": "BIDIRECTIONAL",
                          "enum": [
                            "BIDIRECTIONAL",
                            "INPUT",
                            "OUTPUT",
                            "UNIDENTIFIED_OR_UNKNOWN"
                          ]
                        },
                        "link-port-role": {
                          "description": "Each LinkEnd of the Link has a role (e.g., symmetric, hub, spoke, leaf, root)  in the context of the Link with respect to the Link function.  (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "enumeration",
                          "default": "SYMMETRIC",
                          "enum": [
                            "SYMMETRIC",
                            "ROOT",
                            "LEAF",
                            "TRUNK",
                            "UNKNOWN"
                          ]
                        },
                        "uuid": {
                          "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "name": {
                          "type": "array",
                          "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "value-name": {
                                "description": "The name of the value. The value need not have a name. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "value": {
                                "description": "The value (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              }
                            }
                          }
                        },
                        "administrative-state": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "enumeration",
                          "default": "LOCKED",
                          "enum": [
                            "LOCKED",
                            "UNLOCKED"
                          ]
                        },
                        "operational-state": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "enumeration",
                          "default": "DISABLED",
                          "enum": [
                            "DISABLED",
                            "ENABLED"
                          ]
                        },
                        "lifecycle-state": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "enumeration",
                          "default": "PLANNED",
                          "enum": [
                            "PLANNED",
                            "POTENTIAL_AVAILABLE",
                            "POTENTIAL_BUSY",
                            "INSTALLED",
                            "PENDING_REMOVAL"
                          ]
                        },
                        "termination-direction": {
                          "description": "The overall directionality of the LP.\n- A BIDIRECTIONAL LP will have some SINK and/or SOURCE flowss.\n- A SINK LP can only contain elements with SINK flows or CONTRA_DIRECTION_SOURCE flows\n- A SOURCE LP can only contain SOURCE flows or CONTRA_DIRECTION_SINK flows (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "enumeration",
                          "default": "BIDIRECTIONAL",
                          "enum": [
                            "BIDIRECTIONAL",
                            "SINK",
                            "SOURCE",
                            "UNDEFINED_OR_UNKNOWN"
                          ]
                        },
                        "termination-state": {
                          "description": "Indicates whether the layer is terminated and if so how. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "enumeration",
                          "default": "LP_CAN_NEVER_TERMINATE",
                          "enum": [
                            "LP_CAN_NEVER_TERMINATE",
                            "LT_NOT_TERMINATED",
                            "TERMINATED_SERVER_TO_CLIENT_FLOW",
                            "TERMINATED_CLIENT_TO_SERVER_FLOW",
                            "TERMINATED_BIDIRECTIONAL",
                            "LT_PERMENANTLY_TERMINATED",
                            "TERMINATION_STATE_UNKNOWN"
                          ]
                        },
                        "total-potential-capacity": {
                          "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
                          "type": "object",
                          "x-yang": {
                            "type": "container",
                            "is_presence": "false"
                          },
                          "properties": {
                            "total-size": {
                              "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                              "type": "object",
                              "x-yang": {
                                "type": "container",
                                "is_presence": "false"
                              },
                              "properties": {
                                "value": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "integer",
                                  "format": "uint64"
                                },
                                "unit": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "enumeration",
                                  "default": "TB",
                                  "enum": [
                                    "TB",
                                    "TBPS",
                                    "GB",
                                    "GBPS",
                                    "MB",
                                    "MBPS",
                                    "KB",
                                    "KBPS",
                                    "GHz",
                                    "MHz"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "available-capacity": {
                          "description": "Capacity available to be assigned. (non-presence)",
                          "type": "object",
                          "x-yang": {
                            "type": "container",
                            "is_presence": "false"
                          },
                          "properties": {
                            "total-size": {
                              "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                              "type": "object",
                              "x-yang": {
                                "type": "container",
                                "is_presence": "false"
                              },
                              "properties": {
                                "value": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "integer",
                                  "format": "uint64"
                                },
                                "unit": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "enumeration",
                                  "default": "TB",
                                  "enum": [
                                    "TB",
                                    "TBPS",
                                    "GB",
                                    "GBPS",
                                    "MB",
                                    "MBPS",
                                    "KB",
                                    "KBPS",
                                    "GHz",
                                    "MHz"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "aggregated-node-edge-point": {
                    "type": "array",
                    "description": "none (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "topology-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        },
                        "node-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        },
                        "node-edge-point-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        }
                      }
                    }
                  },
                  "node-rule-group": {
                    "type": "array",
                    "description": "none (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "rule": {
                          "type": "array",
                          "description": "none (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "rule-type": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "enumeration",
                                "default": "FORWARDING",
                                "enum": [
                                  "FORWARDING",
                                  "CAPACITY",
                                  "COST",
                                  "TIMING",
                                  "RISK",
                                  "GROUPING"
                                ]
                              },
                              "forwarding-rule": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "enumeration",
                                "default": "MAY_FORWARD_ACROSS_GROUP",
                                "enum": [
                                  "MAY_FORWARD_ACROSS_GROUP",
                                  "MUST_FORWARD_ACROSS_GROUP",
                                  "CANNOT_FORWARD_ACROSS_GROUP",
                                  "NO_STATEMENT_ON_FORWARDING"
                                ]
                              },
                              "override-priority": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "integer",
                                "format": "uint64"
                              },
                              "local-id": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "name": {
                                "type": "array",
                                "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                                "x-yang": {
                                  "type": "list"
                                },
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "value-name": {
                                      "description": "The name of the value. The value need not have a name. (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    },
                                    "value": {
                                      "description": "The value (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "node-edge-point": {
                          "type": "array",
                          "description": "none (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "topology-uuid": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "leafref"
                              },
                              "node-uuid": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "leafref"
                              },
                              "node-edge-point-uuid": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "leafref"
                              }
                            }
                          }
                        },
                        "composed-rule-group": {
                          "type": "array",
                          "description": "none (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "topology-uuid": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "leafref"
                              },
                              "node-uuid": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "leafref"
                              },
                              "node-rule-group-uuid": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "leafref"
                              }
                            }
                          }
                        },
                        "inter-rule-group": {
                          "type": "array",
                          "description": "none (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "rule": {
                                "type": "array",
                                "description": "none (list)",
                                "x-yang": {
                                  "type": "list"
                                },
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "rule-type": {
                                      "description": "none (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "enumeration",
                                      "default": "FORWARDING",
                                      "enum": [
                                        "FORWARDING",
                                        "CAPACITY",
                                        "COST",
                                        "TIMING",
                                        "RISK",
                                        "GROUPING"
                                      ]
                                    },
                                    "forwarding-rule": {
                                      "description": "none (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "enumeration",
                                      "default": "MAY_FORWARD_ACROSS_GROUP",
                                      "enum": [
                                        "MAY_FORWARD_ACROSS_GROUP",
                                        "MUST_FORWARD_ACROSS_GROUP",
                                        "CANNOT_FORWARD_ACROSS_GROUP",
                                        "NO_STATEMENT_ON_FORWARDING"
                                      ]
                                    },
                                    "override-priority": {
                                      "description": "none (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "integer",
                                      "format": "uint64"
                                    },
                                    "local-id": {
                                      "description": "none (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    },
                                    "name": {
                                      "type": "array",
                                      "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                                      "x-yang": {
                                        "type": "list"
                                      },
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "value-name": {
                                            "description": "The name of the value. The value need not have a name. (leaf)",
                                            "x-yang": {
                                              "type": "leaf"
                                            },
                                            "type": "string",
                                            "format": "string"
                                          },
                                          "value": {
                                            "description": "The value (leaf)",
                                            "x-yang": {
                                              "type": "leaf"
                                            },
                                            "type": "string",
                                            "format": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "associated-node-rule-group": {
                                "type": "array",
                                "description": "none (list)",
                                "x-yang": {
                                  "type": "list"
                                },
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "topology-uuid": {
                                      "description": "none (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "leafref"
                                    },
                                    "node-uuid": {
                                      "description": "none (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "leafref"
                                    },
                                    "node-rule-group-uuid": {
                                      "description": "none (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "leafref"
                                    }
                                  }
                                }
                              },
                              "uuid": {
                                "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "name": {
                                "type": "array",
                                "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                                "x-yang": {
                                  "type": "list"
                                },
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "value-name": {
                                      "description": "The name of the value. The value need not have a name. (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    },
                                    "value": {
                                      "description": "The value (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    }
                                  }
                                }
                              },
                              "total-potential-capacity": {
                                "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
                                "type": "object",
                                "x-yang": {
                                  "type": "container",
                                  "is_presence": "false"
                                },
                                "properties": {
                                  "total-size": {
                                    "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                                    "type": "object",
                                    "x-yang": {
                                      "type": "container",
                                      "is_presence": "false"
                                    },
                                    "properties": {
                                      "value": {
                                        "description": "none (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "integer",
                                        "format": "uint64"
                                      },
                                      "unit": {
                                        "description": "none (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "enumeration",
                                        "default": "TB",
                                        "enum": [
                                          "TB",
                                          "TBPS",
                                          "GB",
                                          "GBPS",
                                          "MB",
                                          "MBPS",
                                          "KB",
                                          "KBPS",
                                          "GHz",
                                          "MHz"
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "available-capacity": {
                                "description": "Capacity available to be assigned. (non-presence)",
                                "type": "object",
                                "x-yang": {
                                  "type": "container",
                                  "is_presence": "false"
                                },
                                "properties": {
                                  "total-size": {
                                    "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                                    "type": "object",
                                    "x-yang": {
                                      "type": "container",
                                      "is_presence": "false"
                                    },
                                    "properties": {
                                      "value": {
                                        "description": "none (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "integer",
                                        "format": "uint64"
                                      },
                                      "unit": {
                                        "description": "none (leaf)",
                                        "x-yang": {
                                          "type": "leaf"
                                        },
                                        "type": "string",
                                        "format": "enumeration",
                                        "default": "TB",
                                        "enum": [
                                          "TB",
                                          "TBPS",
                                          "GB",
                                          "GBPS",
                                          "MB",
                                          "MBPS",
                                          "KB",
                                          "KBPS",
                                          "GHz",
                                          "MHz"
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "cost-characteristic": {
                                "type": "array",
                                "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity. (list)",
                                "x-yang": {
                                  "type": "list"
                                },
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "cost-name": {
                                      "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName. (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    },
                                    "cost-value": {
                                      "description": "The specific cost. (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    },
                                    "cost-algorithm": {
                                      "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm. (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    }
                                  }
                                }
                              },
                              "latency-characteristic": {
                                "type": "array",
                                "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic. (list)",
                                "x-yang": {
                                  "type": "list"
                                },
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "traffic-property-name": {
                                      "description": "The identifier of the specific traffic property to which the queuing latency applies. (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    },
                                    "fixed-latency-characteristic": {
                                      "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    },
                                    "queing-latency-characteristic": {
                                      "description": "The specific queuing latency for the traffic property. (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    },
                                    "jitter-characteristic": {
                                      "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    },
                                    "wander-characteristic": {
                                      "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    }
                                  }
                                }
                              },
                              "risk-characteristic": {
                                "type": "array",
                                "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration. (list)",
                                "x-yang": {
                                  "type": "list"
                                },
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "risk-characteristic-name": {
                                      "description": "The name of the risk characteristic. The characteristic may be related to a specific degree of closeness.\nFor example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).\nDepending upon the importance of the traffic being routed different risk characteristics will be evaluated. (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    },
                                    "risk-identifier-list": {
                                      "type": "array",
                                      "x-yang": {
                                        "type": "leaf-list"
                                      },
                                      "items": {
                                        "description": "A list of the identifiers of each physical/geographic unit (with the specific risk characteristic) that is related to a segment of the TopologicalEntity. (leaf-list)",
                                        "type": "string",
                                        "format": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "uuid": {
                          "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "name": {
                          "type": "array",
                          "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "value-name": {
                                "description": "The name of the value. The value need not have a name. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "value": {
                                "description": "The value (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              }
                            }
                          }
                        },
                        "total-potential-capacity": {
                          "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
                          "type": "object",
                          "x-yang": {
                            "type": "container",
                            "is_presence": "false"
                          },
                          "properties": {
                            "total-size": {
                              "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                              "type": "object",
                              "x-yang": {
                                "type": "container",
                                "is_presence": "false"
                              },
                              "properties": {
                                "value": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "integer",
                                  "format": "uint64"
                                },
                                "unit": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "enumeration",
                                  "default": "TB",
                                  "enum": [
                                    "TB",
                                    "TBPS",
                                    "GB",
                                    "GBPS",
                                    "MB",
                                    "MBPS",
                                    "KB",
                                    "KBPS",
                                    "GHz",
                                    "MHz"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "available-capacity": {
                          "description": "Capacity available to be assigned. (non-presence)",
                          "type": "object",
                          "x-yang": {
                            "type": "container",
                            "is_presence": "false"
                          },
                          "properties": {
                            "total-size": {
                              "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                              "type": "object",
                              "x-yang": {
                                "type": "container",
                                "is_presence": "false"
                              },
                              "properties": {
                                "value": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "integer",
                                  "format": "uint64"
                                },
                                "unit": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "enumeration",
                                  "default": "TB",
                                  "enum": [
                                    "TB",
                                    "TBPS",
                                    "GB",
                                    "GBPS",
                                    "MB",
                                    "MBPS",
                                    "KB",
                                    "KBPS",
                                    "GHz",
                                    "MHz"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "cost-characteristic": {
                          "type": "array",
                          "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity. (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "cost-name": {
                                "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "cost-value": {
                                "description": "The specific cost. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "cost-algorithm": {
                                "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              }
                            }
                          }
                        },
                        "latency-characteristic": {
                          "type": "array",
                          "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic. (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "traffic-property-name": {
                                "description": "The identifier of the specific traffic property to which the queuing latency applies. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "fixed-latency-characteristic": {
                                "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "queing-latency-characteristic": {
                                "description": "The specific queuing latency for the traffic property. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "jitter-characteristic": {
                                "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "wander-characteristic": {
                                "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              }
                            }
                          }
                        },
                        "risk-characteristic": {
                          "type": "array",
                          "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration. (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "risk-characteristic-name": {
                                "description": "The name of the risk characteristic. The characteristic may be related to a specific degree of closeness.\nFor example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).\nDepending upon the importance of the traffic being routed different risk characteristics will be evaluated. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "risk-identifier-list": {
                                "type": "array",
                                "x-yang": {
                                  "type": "leaf-list"
                                },
                                "items": {
                                  "description": "A list of the identifiers of each physical/geographic unit (with the specific risk characteristic) that is related to a segment of the TopologicalEntity. (leaf-list)",
                                  "type": "string",
                                  "format": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "encap-topology": {
                    "description": "none (non-presence)",
                    "type": "object",
                    "x-yang": {
                      "type": "container",
                      "is_presence": "false"
                    },
                    "properties": {
                      "topology-uuid": {
                        "description": "none (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "string",
                        "format": "leafref"
                      }
                    }
                  },
                  "layer-protocol-name": {
                    "type": "array",
                    "x-yang": {
                      "type": "leaf-list"
                    },
                    "items": {
                      "description": "none (leaf-list)",
                      "type": "string",
                      "format": "enumeration",
                      "default": "ODU",
                      "enum": [
                        "ODU",
                        "ETH",
                        "DSR",
                        "PHOTONIC_MEDIA"
                      ]
                    }
                  },
                  "uuid": {
                    "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "name": {
                    "type": "array",
                    "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "value-name": {
                          "description": "The name of the value. The value need not have a name. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "value": {
                          "description": "The value (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        }
                      }
                    }
                  },
                  "administrative-state": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "LOCKED",
                    "enum": [
                      "LOCKED",
                      "UNLOCKED"
                    ]
                  },
                  "operational-state": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "DISABLED",
                    "enum": [
                      "DISABLED",
                      "ENABLED"
                    ]
                  },
                  "lifecycle-state": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "PLANNED",
                    "enum": [
                      "PLANNED",
                      "POTENTIAL_AVAILABLE",
                      "POTENTIAL_BUSY",
                      "INSTALLED",
                      "PENDING_REMOVAL"
                    ]
                  },
                  "total-potential-capacity": {
                    "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
                    "type": "object",
                    "x-yang": {
                      "type": "container",
                      "is_presence": "false"
                    },
                    "properties": {
                      "total-size": {
                        "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                        "type": "object",
                        "x-yang": {
                          "type": "container",
                          "is_presence": "false"
                        },
                        "properties": {
                          "value": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "integer",
                            "format": "uint64"
                          },
                          "unit": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "TB",
                            "enum": [
                              "TB",
                              "TBPS",
                              "GB",
                              "GBPS",
                              "MB",
                              "MBPS",
                              "KB",
                              "KBPS",
                              "GHz",
                              "MHz"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "available-capacity": {
                    "description": "Capacity available to be assigned. (non-presence)",
                    "type": "object",
                    "x-yang": {
                      "type": "container",
                      "is_presence": "false"
                    },
                    "properties": {
                      "total-size": {
                        "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                        "type": "object",
                        "x-yang": {
                          "type": "container",
                          "is_presence": "false"
                        },
                        "properties": {
                          "value": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "integer",
                            "format": "uint64"
                          },
                          "unit": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "TB",
                            "enum": [
                              "TB",
                              "TBPS",
                              "GB",
                              "GBPS",
                              "MB",
                              "MBPS",
                              "KB",
                              "KBPS",
                              "GHz",
                              "MHz"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "cost-characteristic": {
                    "type": "array",
                    "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity. (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "cost-name": {
                          "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "cost-value": {
                          "description": "The specific cost. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "cost-algorithm": {
                          "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        }
                      }
                    }
                  },
                  "error-characteristic": {
                    "description": "Describes the degree to which the signal propagated can be errored.\nApplies to TDM systems as the errored signal will be propagated and not packet as errored packets will be discarded. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "loss-characteristic": {
                    "description": "Describes the acceptable characteristic of lost packets where loss may result from discard due to errors or overflow.\nApplies to packet systems and not TDM (as for TDM errored signals are propagated unless grossly errored and overflow/underflow turns into timing slips). (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "repeat-delivery-characteristic": {
                    "description": "Primarily applies to packet systems where a packet may be delivered more than once (in fault recovery for example).\nIt can also apply to TDM where several frames may be received twice due to switching in a system with a large differential propagation delay. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "delivery-order-characteristic": {
                    "description": "Describes the degree to which packets will be delivered out of sequence.\nDoes not apply to TDM as the TDM protocols maintain strict order. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "unavailable-time-characteristic": {
                    "description": "Describes the duration for which there may be no valid signal propagated. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "server-integrity-process-characteristic": {
                    "description": "Describes the effect of any server integrity enhancement process on the characteristics of the TopologicalEntity. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "latency-characteristic": {
                    "type": "array",
                    "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic. (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "traffic-property-name": {
                          "description": "The identifier of the specific traffic property to which the queuing latency applies. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "fixed-latency-characteristic": {
                          "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "queing-latency-characteristic": {
                          "description": "The specific queuing latency for the traffic property. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "jitter-characteristic": {
                          "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "wander-characteristic": {
                          "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "link": {
              "type": "array",
              "description": "none (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "node-edge-point": {
                    "type": "array",
                    "description": "none (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "topology-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        },
                        "node-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        },
                        "node-edge-point-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        }
                      }
                    }
                  },
                  "layer-protocol-name": {
                    "type": "array",
                    "x-yang": {
                      "type": "leaf-list"
                    },
                    "items": {
                      "description": "none (leaf-list)",
                      "type": "string",
                      "format": "enumeration",
                      "default": "ODU",
                      "enum": [
                        "ODU",
                        "ETH",
                        "DSR",
                        "PHOTONIC_MEDIA"
                      ]
                    }
                  },
                  "direction": {
                    "description": "The directionality of the Link.\nIs applicable to simple Links where all LinkEnds are BIDIRECTIONAL (the Link will be BIDIRECTIONAL) or UNIDIRECTIONAL (the Link will be UNIDIRECTIONAL).\nIs not present in more complex cases. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "BIDIRECTIONAL",
                    "enum": [
                      "BIDIRECTIONAL",
                      "UNIDIRECTIONAL",
                      "UNDEFINED_OR_UNKNOWN"
                    ]
                  },
                  "protection-type": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "NO_PROTECTION",
                    "enum": [
                      "NO_PROTECTION",
                      "ONE_PLUS_ONE_PROTECTION",
                      "ONE_FOR_ONE_PROTECTION",
                      "ONE_FOR_N_PROTECTION",
                      "M_FOR_N_PROTECTION",
                      "ONE_FOR_ONE_BY_N"
                    ]
                  },
                  "restoration-policy": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "PER_DOMAIN_RESTORATION",
                    "enum": [
                      "PER_DOMAIN_RESTORATION",
                      "END_TO_END_RESTORATION",
                      "NA",
                      "DYNAMIC_RESTORATION",
                      "PRE_COMPUTED_RESTORATION"
                    ]
                  },
                  "uuid": {
                    "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "name": {
                    "type": "array",
                    "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "value-name": {
                          "description": "The name of the value. The value need not have a name. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "value": {
                          "description": "The value (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        }
                      }
                    }
                  },
                  "administrative-state": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "LOCKED",
                    "enum": [
                      "LOCKED",
                      "UNLOCKED"
                    ]
                  },
                  "operational-state": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "DISABLED",
                    "enum": [
                      "DISABLED",
                      "ENABLED"
                    ]
                  },
                  "lifecycle-state": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "PLANNED",
                    "enum": [
                      "PLANNED",
                      "POTENTIAL_AVAILABLE",
                      "POTENTIAL_BUSY",
                      "INSTALLED",
                      "PENDING_REMOVAL"
                    ]
                  },
                  "total-potential-capacity": {
                    "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
                    "type": "object",
                    "x-yang": {
                      "type": "container",
                      "is_presence": "false"
                    },
                    "properties": {
                      "total-size": {
                        "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                        "type": "object",
                        "x-yang": {
                          "type": "container",
                          "is_presence": "false"
                        },
                        "properties": {
                          "value": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "integer",
                            "format": "uint64"
                          },
                          "unit": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "TB",
                            "enum": [
                              "TB",
                              "TBPS",
                              "GB",
                              "GBPS",
                              "MB",
                              "MBPS",
                              "KB",
                              "KBPS",
                              "GHz",
                              "MHz"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "available-capacity": {
                    "description": "Capacity available to be assigned. (non-presence)",
                    "type": "object",
                    "x-yang": {
                      "type": "container",
                      "is_presence": "false"
                    },
                    "properties": {
                      "total-size": {
                        "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                        "type": "object",
                        "x-yang": {
                          "type": "container",
                          "is_presence": "false"
                        },
                        "properties": {
                          "value": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "integer",
                            "format": "uint64"
                          },
                          "unit": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "TB",
                            "enum": [
                              "TB",
                              "TBPS",
                              "GB",
                              "GBPS",
                              "MB",
                              "MBPS",
                              "KB",
                              "KBPS",
                              "GHz",
                              "MHz"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "cost-characteristic": {
                    "type": "array",
                    "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity. (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "cost-name": {
                          "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "cost-value": {
                          "description": "The specific cost. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "cost-algorithm": {
                          "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        }
                      }
                    }
                  },
                  "error-characteristic": {
                    "description": "Describes the degree to which the signal propagated can be errored.\nApplies to TDM systems as the errored signal will be propagated and not packet as errored packets will be discarded. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "loss-characteristic": {
                    "description": "Describes the acceptable characteristic of lost packets where loss may result from discard due to errors or overflow.\nApplies to packet systems and not TDM (as for TDM errored signals are propagated unless grossly errored and overflow/underflow turns into timing slips). (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "repeat-delivery-characteristic": {
                    "description": "Primarily applies to packet systems where a packet may be delivered more than once (in fault recovery for example).\nIt can also apply to TDM where several frames may be received twice due to switching in a system with a large differential propagation delay. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "delivery-order-characteristic": {
                    "description": "Describes the degree to which packets will be delivered out of sequence.\nDoes not apply to TDM as the TDM protocols maintain strict order. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "unavailable-time-characteristic": {
                    "description": "Describes the duration for which there may be no valid signal propagated. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "server-integrity-process-characteristic": {
                    "description": "Describes the effect of any server integrity enhancement process on the characteristics of the TopologicalEntity. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "latency-characteristic": {
                    "type": "array",
                    "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic. (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "traffic-property-name": {
                          "description": "The identifier of the specific traffic property to which the queuing latency applies. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "fixed-latency-characteristic": {
                          "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "queing-latency-characteristic": {
                          "description": "The specific queuing latency for the traffic property. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "jitter-characteristic": {
                          "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "wander-characteristic": {
                          "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        }
                      }
                    }
                  },
                  "risk-characteristic": {
                    "type": "array",
                    "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration. (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "risk-characteristic-name": {
                          "description": "The name of the risk characteristic. The characteristic may be related to a specific degree of closeness.\nFor example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).\nDepending upon the importance of the traffic being routed different risk characteristics will be evaluated. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "risk-identifier-list": {
                          "type": "array",
                          "x-yang": {
                            "type": "leaf-list"
                          },
                          "items": {
                            "description": "A list of the identifiers of each physical/geographic unit (with the specific risk characteristic) that is related to a segment of the TopologicalEntity. (leaf-list)",
                            "type": "string",
                            "format": "string"
                          }
                        }
                      }
                    }
                  },
                  "validation-mechanism": {
                    "type": "array",
                    "description": "Provides details of the specific validation mechanism(s) used to confirm the presence of an intended topologicalEntity. (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "validation-mechanism": {
                          "description": "Name of mechanism used to validate adjacency (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "layer-protocol-adjacency-validated": {
                          "description": "State of validatiion (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "validation-robustness": {
                          "description": "Quality of validation (i.e. how likely is the stated validation to be invalid) (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        }
                      }
                    }
                  },
                  "transitioned-layer-protocol-name": {
                    "type": "array",
                    "x-yang": {
                      "type": "leaf-list"
                    },
                    "items": {
                      "description": "Provides the ordered structure of layer protocol transitions encapsulated in the TopologicalEntity. The ordering relates to the LinkPort role. (leaf-list)",
                      "type": "string",
                      "format": "string"
                    }
                  }
                }
              }
            },
            "layer-protocol-name": {
              "type": "array",
              "x-yang": {
                "type": "leaf-list"
              },
              "items": {
                "description": "none (leaf-list)",
                "type": "string",
                "format": "enumeration",
                "default": "ODU",
                "enum": [
                  "ODU",
                  "ETH",
                  "DSR",
                  "PHOTONIC_MEDIA"
                ]
              }
            },
            "boundary-node-edge-point": {
              "type": "array",
              "description": "none (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "topology-uuid": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "leafref"
                  },
                  "node-uuid": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "leafref"
                  },
                  "node-edge-point-uuid": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "leafref"
                  }
                }
              }
            },
            "uuid": {
              "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "name": {
              "type": "array",
              "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "value-name": {
                    "description": "The name of the value. The value need not have a name. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "value": {
                    "description": "The value (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "data_tapi-topology_get-topology-details-post-input": {
      "type": "object",
      "properties": {
        "tapi-topology:topology-id-or-name": {
          "description": "none (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "string"
        }
      }
    },
    "data_tapi-topology_get-node-edge-point-details-post-output": {
      "type": "object",
      "properties": {
        "tapi-topology:node-edge-point": {
          "description": "none (non-presence)",
          "type": "object",
          "x-yang": {
            "type": "container",
            "is_presence": "false"
          },
          "properties": {
            "layer-protocol-name": {
              "description": "none (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "ODU",
              "enum": [
                "ODU",
                "ETH",
                "DSR",
                "PHOTONIC_MEDIA"
              ]
            },
            "available-cep-layer-protocol": {
              "type": "array",
              "description": "none (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "layer-protocol-qualifier": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "identityref"
                  },
                  "number-of-cep-instances": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "integer",
                    "format": "uint64"
                  }
                }
              }
            },
            "aggregated-node-edge-point": {
              "type": "array",
              "description": "none (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "topology-uuid": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "leafref"
                  },
                  "node-uuid": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "leafref"
                  },
                  "node-edge-point-uuid": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "leafref"
                  }
                }
              }
            },
            "mapped-service-interface-point": {
              "type": "array",
              "description": "NodeEdgePoint mapped to more than ServiceInterfacePoint (slicing/virtualizing) or a ServiceInterfacePoint mapped to more than one NodeEdgePoint (load balancing/Resilience) should be considered experimental (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "service-interface-point-uuid": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "leafref"
                  }
                }
              }
            },
            "link-port-direction": {
              "description": "The orientation of defined flow at the LinkEnd. (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "BIDIRECTIONAL",
              "enum": [
                "BIDIRECTIONAL",
                "INPUT",
                "OUTPUT",
                "UNIDENTIFIED_OR_UNKNOWN"
              ]
            },
            "link-port-role": {
              "description": "Each LinkEnd of the Link has a role (e.g., symmetric, hub, spoke, leaf, root)  in the context of the Link with respect to the Link function.  (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "SYMMETRIC",
              "enum": [
                "SYMMETRIC",
                "ROOT",
                "LEAF",
                "TRUNK",
                "UNKNOWN"
              ]
            },
            "uuid": {
              "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "name": {
              "type": "array",
              "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "value-name": {
                    "description": "The name of the value. The value need not have a name. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "value": {
                    "description": "The value (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  }
                }
              }
            },
            "administrative-state": {
              "description": "none (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "LOCKED",
              "enum": [
                "LOCKED",
                "UNLOCKED"
              ]
            },
            "operational-state": {
              "description": "none (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "DISABLED",
              "enum": [
                "DISABLED",
                "ENABLED"
              ]
            },
            "lifecycle-state": {
              "description": "none (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "PLANNED",
              "enum": [
                "PLANNED",
                "POTENTIAL_AVAILABLE",
                "POTENTIAL_BUSY",
                "INSTALLED",
                "PENDING_REMOVAL"
              ]
            },
            "termination-direction": {
              "description": "The overall directionality of the LP.\n- A BIDIRECTIONAL LP will have some SINK and/or SOURCE flowss.\n- A SINK LP can only contain elements with SINK flows or CONTRA_DIRECTION_SOURCE flows\n- A SOURCE LP can only contain SOURCE flows or CONTRA_DIRECTION_SINK flows (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "BIDIRECTIONAL",
              "enum": [
                "BIDIRECTIONAL",
                "SINK",
                "SOURCE",
                "UNDEFINED_OR_UNKNOWN"
              ]
            },
            "termination-state": {
              "description": "Indicates whether the layer is terminated and if so how. (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "LP_CAN_NEVER_TERMINATE",
              "enum": [
                "LP_CAN_NEVER_TERMINATE",
                "LT_NOT_TERMINATED",
                "TERMINATED_SERVER_TO_CLIENT_FLOW",
                "TERMINATED_CLIENT_TO_SERVER_FLOW",
                "TERMINATED_BIDIRECTIONAL",
                "LT_PERMENANTLY_TERMINATED",
                "TERMINATION_STATE_UNKNOWN"
              ]
            },
            "total-potential-capacity": {
              "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
              "type": "object",
              "x-yang": {
                "type": "container",
                "is_presence": "false"
              },
              "properties": {
                "total-size": {
                  "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                  "type": "object",
                  "x-yang": {
                    "type": "container",
                    "is_presence": "false"
                  },
                  "properties": {
                    "value": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "integer",
                      "format": "uint64"
                    },
                    "unit": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "TB",
                      "enum": [
                        "TB",
                        "TBPS",
                        "GB",
                        "GBPS",
                        "MB",
                        "MBPS",
                        "KB",
                        "KBPS",
                        "GHz",
                        "MHz"
                      ]
                    }
                  }
                }
              }
            },
            "available-capacity": {
              "description": "Capacity available to be assigned. (non-presence)",
              "type": "object",
              "x-yang": {
                "type": "container",
                "is_presence": "false"
              },
              "properties": {
                "total-size": {
                  "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                  "type": "object",
                  "x-yang": {
                    "type": "container",
                    "is_presence": "false"
                  },
                  "properties": {
                    "value": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "integer",
                      "format": "uint64"
                    },
                    "unit": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "TB",
                      "enum": [
                        "TB",
                        "TBPS",
                        "GB",
                        "GBPS",
                        "MB",
                        "MBPS",
                        "KB",
                        "KBPS",
                        "GHz",
                        "MHz"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "data_tapi-topology_get-node-edge-point-details-post-input": {
      "type": "object",
      "properties": {
        "tapi-topology:topology-id-or-name": {
          "description": "none (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "string"
        },
        "tapi-topology:node-id-or-name": {
          "description": "none (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "string"
        },
        "tapi-topology:ep-id-or-name": {
          "description": "none (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "string"
        }
      }
    },
    "data_tapi-topology_get-node-details-post-output": {
      "type": "object",
      "properties": {
        "tapi-topology:node": {
          "description": "none (non-presence)",
          "type": "object",
          "x-yang": {
            "type": "container",
            "is_presence": "false"
          },
          "properties": {
            "node-edge-point": {
              "type": "array",
              "description": "none (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "layer-protocol-name": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "ODU",
                    "enum": [
                      "ODU",
                      "ETH",
                      "DSR",
                      "PHOTONIC_MEDIA"
                    ]
                  },
                  "available-cep-layer-protocol": {
                    "type": "array",
                    "description": "none (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "layer-protocol-qualifier": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "identityref"
                        },
                        "number-of-cep-instances": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "integer",
                          "format": "uint64"
                        }
                      }
                    }
                  },
                  "aggregated-node-edge-point": {
                    "type": "array",
                    "description": "none (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "topology-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        },
                        "node-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        },
                        "node-edge-point-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        }
                      }
                    }
                  },
                  "mapped-service-interface-point": {
                    "type": "array",
                    "description": "NodeEdgePoint mapped to more than ServiceInterfacePoint (slicing/virtualizing) or a ServiceInterfacePoint mapped to more than one NodeEdgePoint (load balancing/Resilience) should be considered experimental (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "service-interface-point-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        }
                      }
                    }
                  },
                  "link-port-direction": {
                    "description": "The orientation of defined flow at the LinkEnd. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "BIDIRECTIONAL",
                    "enum": [
                      "BIDIRECTIONAL",
                      "INPUT",
                      "OUTPUT",
                      "UNIDENTIFIED_OR_UNKNOWN"
                    ]
                  },
                  "link-port-role": {
                    "description": "Each LinkEnd of the Link has a role (e.g., symmetric, hub, spoke, leaf, root)  in the context of the Link with respect to the Link function.  (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "SYMMETRIC",
                    "enum": [
                      "SYMMETRIC",
                      "ROOT",
                      "LEAF",
                      "TRUNK",
                      "UNKNOWN"
                    ]
                  },
                  "uuid": {
                    "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "name": {
                    "type": "array",
                    "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "value-name": {
                          "description": "The name of the value. The value need not have a name. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "value": {
                          "description": "The value (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        }
                      }
                    }
                  },
                  "administrative-state": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "LOCKED",
                    "enum": [
                      "LOCKED",
                      "UNLOCKED"
                    ]
                  },
                  "operational-state": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "DISABLED",
                    "enum": [
                      "DISABLED",
                      "ENABLED"
                    ]
                  },
                  "lifecycle-state": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "PLANNED",
                    "enum": [
                      "PLANNED",
                      "POTENTIAL_AVAILABLE",
                      "POTENTIAL_BUSY",
                      "INSTALLED",
                      "PENDING_REMOVAL"
                    ]
                  },
                  "termination-direction": {
                    "description": "The overall directionality of the LP.\n- A BIDIRECTIONAL LP will have some SINK and/or SOURCE flowss.\n- A SINK LP can only contain elements with SINK flows or CONTRA_DIRECTION_SOURCE flows\n- A SOURCE LP can only contain SOURCE flows or CONTRA_DIRECTION_SINK flows (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "BIDIRECTIONAL",
                    "enum": [
                      "BIDIRECTIONAL",
                      "SINK",
                      "SOURCE",
                      "UNDEFINED_OR_UNKNOWN"
                    ]
                  },
                  "termination-state": {
                    "description": "Indicates whether the layer is terminated and if so how. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "LP_CAN_NEVER_TERMINATE",
                    "enum": [
                      "LP_CAN_NEVER_TERMINATE",
                      "LT_NOT_TERMINATED",
                      "TERMINATED_SERVER_TO_CLIENT_FLOW",
                      "TERMINATED_CLIENT_TO_SERVER_FLOW",
                      "TERMINATED_BIDIRECTIONAL",
                      "LT_PERMENANTLY_TERMINATED",
                      "TERMINATION_STATE_UNKNOWN"
                    ]
                  },
                  "total-potential-capacity": {
                    "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
                    "type": "object",
                    "x-yang": {
                      "type": "container",
                      "is_presence": "false"
                    },
                    "properties": {
                      "total-size": {
                        "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                        "type": "object",
                        "x-yang": {
                          "type": "container",
                          "is_presence": "false"
                        },
                        "properties": {
                          "value": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "integer",
                            "format": "uint64"
                          },
                          "unit": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "TB",
                            "enum": [
                              "TB",
                              "TBPS",
                              "GB",
                              "GBPS",
                              "MB",
                              "MBPS",
                              "KB",
                              "KBPS",
                              "GHz",
                              "MHz"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "available-capacity": {
                    "description": "Capacity available to be assigned. (non-presence)",
                    "type": "object",
                    "x-yang": {
                      "type": "container",
                      "is_presence": "false"
                    },
                    "properties": {
                      "total-size": {
                        "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                        "type": "object",
                        "x-yang": {
                          "type": "container",
                          "is_presence": "false"
                        },
                        "properties": {
                          "value": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "integer",
                            "format": "uint64"
                          },
                          "unit": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "TB",
                            "enum": [
                              "TB",
                              "TBPS",
                              "GB",
                              "GBPS",
                              "MB",
                              "MBPS",
                              "KB",
                              "KBPS",
                              "GHz",
                              "MHz"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "aggregated-node-edge-point": {
              "type": "array",
              "description": "none (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "topology-uuid": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "leafref"
                  },
                  "node-uuid": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "leafref"
                  },
                  "node-edge-point-uuid": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "leafref"
                  }
                }
              }
            },
            "node-rule-group": {
              "type": "array",
              "description": "none (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "rule": {
                    "type": "array",
                    "description": "none (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "rule-type": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "enumeration",
                          "default": "FORWARDING",
                          "enum": [
                            "FORWARDING",
                            "CAPACITY",
                            "COST",
                            "TIMING",
                            "RISK",
                            "GROUPING"
                          ]
                        },
                        "forwarding-rule": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "enumeration",
                          "default": "MAY_FORWARD_ACROSS_GROUP",
                          "enum": [
                            "MAY_FORWARD_ACROSS_GROUP",
                            "MUST_FORWARD_ACROSS_GROUP",
                            "CANNOT_FORWARD_ACROSS_GROUP",
                            "NO_STATEMENT_ON_FORWARDING"
                          ]
                        },
                        "override-priority": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "integer",
                          "format": "uint64"
                        },
                        "local-id": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "name": {
                          "type": "array",
                          "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "value-name": {
                                "description": "The name of the value. The value need not have a name. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "value": {
                                "description": "The value (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "node-edge-point": {
                    "type": "array",
                    "description": "none (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "topology-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        },
                        "node-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        },
                        "node-edge-point-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        }
                      }
                    }
                  },
                  "composed-rule-group": {
                    "type": "array",
                    "description": "none (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "topology-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        },
                        "node-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        },
                        "node-rule-group-uuid": {
                          "description": "none (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "leafref"
                        }
                      }
                    }
                  },
                  "inter-rule-group": {
                    "type": "array",
                    "description": "none (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "rule": {
                          "type": "array",
                          "description": "none (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "rule-type": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "enumeration",
                                "default": "FORWARDING",
                                "enum": [
                                  "FORWARDING",
                                  "CAPACITY",
                                  "COST",
                                  "TIMING",
                                  "RISK",
                                  "GROUPING"
                                ]
                              },
                              "forwarding-rule": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "enumeration",
                                "default": "MAY_FORWARD_ACROSS_GROUP",
                                "enum": [
                                  "MAY_FORWARD_ACROSS_GROUP",
                                  "MUST_FORWARD_ACROSS_GROUP",
                                  "CANNOT_FORWARD_ACROSS_GROUP",
                                  "NO_STATEMENT_ON_FORWARDING"
                                ]
                              },
                              "override-priority": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "integer",
                                "format": "uint64"
                              },
                              "local-id": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "name": {
                                "type": "array",
                                "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                                "x-yang": {
                                  "type": "list"
                                },
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "value-name": {
                                      "description": "The name of the value. The value need not have a name. (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    },
                                    "value": {
                                      "description": "The value (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "associated-node-rule-group": {
                          "type": "array",
                          "description": "none (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "topology-uuid": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "leafref"
                              },
                              "node-uuid": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "leafref"
                              },
                              "node-rule-group-uuid": {
                                "description": "none (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "leafref"
                              }
                            }
                          }
                        },
                        "uuid": {
                          "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "name": {
                          "type": "array",
                          "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "value-name": {
                                "description": "The name of the value. The value need not have a name. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "value": {
                                "description": "The value (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              }
                            }
                          }
                        },
                        "total-potential-capacity": {
                          "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
                          "type": "object",
                          "x-yang": {
                            "type": "container",
                            "is_presence": "false"
                          },
                          "properties": {
                            "total-size": {
                              "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                              "type": "object",
                              "x-yang": {
                                "type": "container",
                                "is_presence": "false"
                              },
                              "properties": {
                                "value": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "integer",
                                  "format": "uint64"
                                },
                                "unit": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "enumeration",
                                  "default": "TB",
                                  "enum": [
                                    "TB",
                                    "TBPS",
                                    "GB",
                                    "GBPS",
                                    "MB",
                                    "MBPS",
                                    "KB",
                                    "KBPS",
                                    "GHz",
                                    "MHz"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "available-capacity": {
                          "description": "Capacity available to be assigned. (non-presence)",
                          "type": "object",
                          "x-yang": {
                            "type": "container",
                            "is_presence": "false"
                          },
                          "properties": {
                            "total-size": {
                              "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                              "type": "object",
                              "x-yang": {
                                "type": "container",
                                "is_presence": "false"
                              },
                              "properties": {
                                "value": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "integer",
                                  "format": "uint64"
                                },
                                "unit": {
                                  "description": "none (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "enumeration",
                                  "default": "TB",
                                  "enum": [
                                    "TB",
                                    "TBPS",
                                    "GB",
                                    "GBPS",
                                    "MB",
                                    "MBPS",
                                    "KB",
                                    "KBPS",
                                    "GHz",
                                    "MHz"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "cost-characteristic": {
                          "type": "array",
                          "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity. (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "cost-name": {
                                "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "cost-value": {
                                "description": "The specific cost. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "cost-algorithm": {
                                "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              }
                            }
                          }
                        },
                        "latency-characteristic": {
                          "type": "array",
                          "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic. (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "traffic-property-name": {
                                "description": "The identifier of the specific traffic property to which the queuing latency applies. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "fixed-latency-characteristic": {
                                "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "queing-latency-characteristic": {
                                "description": "The specific queuing latency for the traffic property. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "jitter-characteristic": {
                                "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "wander-characteristic": {
                                "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              }
                            }
                          }
                        },
                        "risk-characteristic": {
                          "type": "array",
                          "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration. (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "risk-characteristic-name": {
                                "description": "The name of the risk characteristic. The characteristic may be related to a specific degree of closeness.\nFor example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).\nDepending upon the importance of the traffic being routed different risk characteristics will be evaluated. (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "string"
                              },
                              "risk-identifier-list": {
                                "type": "array",
                                "x-yang": {
                                  "type": "leaf-list"
                                },
                                "items": {
                                  "description": "A list of the identifiers of each physical/geographic unit (with the specific risk characteristic) that is related to a segment of the TopologicalEntity. (leaf-list)",
                                  "type": "string",
                                  "format": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "uuid": {
                    "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "name": {
                    "type": "array",
                    "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "value-name": {
                          "description": "The name of the value. The value need not have a name. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "value": {
                          "description": "The value (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        }
                      }
                    }
                  },
                  "total-potential-capacity": {
                    "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
                    "type": "object",
                    "x-yang": {
                      "type": "container",
                      "is_presence": "false"
                    },
                    "properties": {
                      "total-size": {
                        "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                        "type": "object",
                        "x-yang": {
                          "type": "container",
                          "is_presence": "false"
                        },
                        "properties": {
                          "value": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "integer",
                            "format": "uint64"
                          },
                          "unit": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "TB",
                            "enum": [
                              "TB",
                              "TBPS",
                              "GB",
                              "GBPS",
                              "MB",
                              "MBPS",
                              "KB",
                              "KBPS",
                              "GHz",
                              "MHz"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "available-capacity": {
                    "description": "Capacity available to be assigned. (non-presence)",
                    "type": "object",
                    "x-yang": {
                      "type": "container",
                      "is_presence": "false"
                    },
                    "properties": {
                      "total-size": {
                        "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                        "type": "object",
                        "x-yang": {
                          "type": "container",
                          "is_presence": "false"
                        },
                        "properties": {
                          "value": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "integer",
                            "format": "uint64"
                          },
                          "unit": {
                            "description": "none (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "TB",
                            "enum": [
                              "TB",
                              "TBPS",
                              "GB",
                              "GBPS",
                              "MB",
                              "MBPS",
                              "KB",
                              "KBPS",
                              "GHz",
                              "MHz"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "cost-characteristic": {
                    "type": "array",
                    "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity. (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "cost-name": {
                          "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "cost-value": {
                          "description": "The specific cost. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "cost-algorithm": {
                          "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        }
                      }
                    }
                  },
                  "latency-characteristic": {
                    "type": "array",
                    "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic. (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "traffic-property-name": {
                          "description": "The identifier of the specific traffic property to which the queuing latency applies. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "fixed-latency-characteristic": {
                          "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "queing-latency-characteristic": {
                          "description": "The specific queuing latency for the traffic property. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "jitter-characteristic": {
                          "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "wander-characteristic": {
                          "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        }
                      }
                    }
                  },
                  "risk-characteristic": {
                    "type": "array",
                    "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration. (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "risk-characteristic-name": {
                          "description": "The name of the risk characteristic. The characteristic may be related to a specific degree of closeness.\nFor example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).\nDepending upon the importance of the traffic being routed different risk characteristics will be evaluated. (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "risk-identifier-list": {
                          "type": "array",
                          "x-yang": {
                            "type": "leaf-list"
                          },
                          "items": {
                            "description": "A list of the identifiers of each physical/geographic unit (with the specific risk characteristic) that is related to a segment of the TopologicalEntity. (leaf-list)",
                            "type": "string",
                            "format": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "encap-topology": {
              "description": "none (non-presence)",
              "type": "object",
              "x-yang": {
                "type": "container",
                "is_presence": "false"
              },
              "properties": {
                "topology-uuid": {
                  "description": "none (leaf)",
                  "x-yang": {
                    "type": "leaf"
                  },
                  "type": "string",
                  "format": "leafref"
                }
              }
            },
            "layer-protocol-name": {
              "type": "array",
              "x-yang": {
                "type": "leaf-list"
              },
              "items": {
                "description": "none (leaf-list)",
                "type": "string",
                "format": "enumeration",
                "default": "ODU",
                "enum": [
                  "ODU",
                  "ETH",
                  "DSR",
                  "PHOTONIC_MEDIA"
                ]
              }
            },
            "uuid": {
              "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "name": {
              "type": "array",
              "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "value-name": {
                    "description": "The name of the value. The value need not have a name. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "value": {
                    "description": "The value (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  }
                }
              }
            },
            "administrative-state": {
              "description": "none (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "LOCKED",
              "enum": [
                "LOCKED",
                "UNLOCKED"
              ]
            },
            "operational-state": {
              "description": "none (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "DISABLED",
              "enum": [
                "DISABLED",
                "ENABLED"
              ]
            },
            "lifecycle-state": {
              "description": "none (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "PLANNED",
              "enum": [
                "PLANNED",
                "POTENTIAL_AVAILABLE",
                "POTENTIAL_BUSY",
                "INSTALLED",
                "PENDING_REMOVAL"
              ]
            },
            "total-potential-capacity": {
              "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
              "type": "object",
              "x-yang": {
                "type": "container",
                "is_presence": "false"
              },
              "properties": {
                "total-size": {
                  "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                  "type": "object",
                  "x-yang": {
                    "type": "container",
                    "is_presence": "false"
                  },
                  "properties": {
                    "value": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "integer",
                      "format": "uint64"
                    },
                    "unit": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "TB",
                      "enum": [
                        "TB",
                        "TBPS",
                        "GB",
                        "GBPS",
                        "MB",
                        "MBPS",
                        "KB",
                        "KBPS",
                        "GHz",
                        "MHz"
                      ]
                    }
                  }
                }
              }
            },
            "available-capacity": {
              "description": "Capacity available to be assigned. (non-presence)",
              "type": "object",
              "x-yang": {
                "type": "container",
                "is_presence": "false"
              },
              "properties": {
                "total-size": {
                  "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                  "type": "object",
                  "x-yang": {
                    "type": "container",
                    "is_presence": "false"
                  },
                  "properties": {
                    "value": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "integer",
                      "format": "uint64"
                    },
                    "unit": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "TB",
                      "enum": [
                        "TB",
                        "TBPS",
                        "GB",
                        "GBPS",
                        "MB",
                        "MBPS",
                        "KB",
                        "KBPS",
                        "GHz",
                        "MHz"
                      ]
                    }
                  }
                }
              }
            },
            "cost-characteristic": {
              "type": "array",
              "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity. (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "cost-name": {
                    "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "cost-value": {
                    "description": "The specific cost. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "cost-algorithm": {
                    "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  }
                }
              }
            },
            "error-characteristic": {
              "description": "Describes the degree to which the signal propagated can be errored.\nApplies to TDM systems as the errored signal will be propagated and not packet as errored packets will be discarded. (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "loss-characteristic": {
              "description": "Describes the acceptable characteristic of lost packets where loss may result from discard due to errors or overflow.\nApplies to packet systems and not TDM (as for TDM errored signals are propagated unless grossly errored and overflow/underflow turns into timing slips). (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "repeat-delivery-characteristic": {
              "description": "Primarily applies to packet systems where a packet may be delivered more than once (in fault recovery for example).\nIt can also apply to TDM where several frames may be received twice due to switching in a system with a large differential propagation delay. (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "delivery-order-characteristic": {
              "description": "Describes the degree to which packets will be delivered out of sequence.\nDoes not apply to TDM as the TDM protocols maintain strict order. (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "unavailable-time-characteristic": {
              "description": "Describes the duration for which there may be no valid signal propagated. (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "server-integrity-process-characteristic": {
              "description": "Describes the effect of any server integrity enhancement process on the characteristics of the TopologicalEntity. (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "latency-characteristic": {
              "type": "array",
              "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic. (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "traffic-property-name": {
                    "description": "The identifier of the specific traffic property to which the queuing latency applies. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "fixed-latency-characteristic": {
                    "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "queing-latency-characteristic": {
                    "description": "The specific queuing latency for the traffic property. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "jitter-characteristic": {
                    "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "wander-characteristic": {
                    "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "data_tapi-topology_get-node-details-post-input": {
      "type": "object",
      "properties": {
        "tapi-topology:topology-id-or-name": {
          "description": "none (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "string"
        },
        "tapi-topology:node-id-or-name": {
          "description": "none (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "string"
        }
      }
    },
    "data_tapi-topology_get-link-details-post-output": {
      "type": "object",
      "properties": {
        "tapi-topology:link": {
          "description": "none (non-presence)",
          "type": "object",
          "x-yang": {
            "type": "container",
            "is_presence": "false"
          },
          "properties": {
            "node-edge-point": {
              "type": "array",
              "description": "none (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "topology-uuid": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "leafref"
                  },
                  "node-uuid": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "leafref"
                  },
                  "node-edge-point-uuid": {
                    "description": "none (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "leafref"
                  }
                }
              }
            },
            "layer-protocol-name": {
              "type": "array",
              "x-yang": {
                "type": "leaf-list"
              },
              "items": {
                "description": "none (leaf-list)",
                "type": "string",
                "format": "enumeration",
                "default": "ODU",
                "enum": [
                  "ODU",
                  "ETH",
                  "DSR",
                  "PHOTONIC_MEDIA"
                ]
              }
            },
            "direction": {
              "description": "The directionality of the Link.\nIs applicable to simple Links where all LinkEnds are BIDIRECTIONAL (the Link will be BIDIRECTIONAL) or UNIDIRECTIONAL (the Link will be UNIDIRECTIONAL).\nIs not present in more complex cases. (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "BIDIRECTIONAL",
              "enum": [
                "BIDIRECTIONAL",
                "UNIDIRECTIONAL",
                "UNDEFINED_OR_UNKNOWN"
              ]
            },
            "protection-type": {
              "description": "none (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "NO_PROTECTION",
              "enum": [
                "NO_PROTECTION",
                "ONE_PLUS_ONE_PROTECTION",
                "ONE_FOR_ONE_PROTECTION",
                "ONE_FOR_N_PROTECTION",
                "M_FOR_N_PROTECTION",
                "ONE_FOR_ONE_BY_N"
              ]
            },
            "restoration-policy": {
              "description": "none (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "PER_DOMAIN_RESTORATION",
              "enum": [
                "PER_DOMAIN_RESTORATION",
                "END_TO_END_RESTORATION",
                "NA",
                "DYNAMIC_RESTORATION",
                "PRE_COMPUTED_RESTORATION"
              ]
            },
            "uuid": {
              "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "name": {
              "type": "array",
              "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "value-name": {
                    "description": "The name of the value. The value need not have a name. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "value": {
                    "description": "The value (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  }
                }
              }
            },
            "administrative-state": {
              "description": "none (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "LOCKED",
              "enum": [
                "LOCKED",
                "UNLOCKED"
              ]
            },
            "operational-state": {
              "description": "none (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "DISABLED",
              "enum": [
                "DISABLED",
                "ENABLED"
              ]
            },
            "lifecycle-state": {
              "description": "none (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "PLANNED",
              "enum": [
                "PLANNED",
                "POTENTIAL_AVAILABLE",
                "POTENTIAL_BUSY",
                "INSTALLED",
                "PENDING_REMOVAL"
              ]
            },
            "total-potential-capacity": {
              "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)",
              "type": "object",
              "x-yang": {
                "type": "container",
                "is_presence": "false"
              },
              "properties": {
                "total-size": {
                  "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                  "type": "object",
                  "x-yang": {
                    "type": "container",
                    "is_presence": "false"
                  },
                  "properties": {
                    "value": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "integer",
                      "format": "uint64"
                    },
                    "unit": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "TB",
                      "enum": [
                        "TB",
                        "TBPS",
                        "GB",
                        "GBPS",
                        "MB",
                        "MBPS",
                        "KB",
                        "KBPS",
                        "GHz",
                        "MHz"
                      ]
                    }
                  }
                }
              }
            },
            "available-capacity": {
              "description": "Capacity available to be assigned. (non-presence)",
              "type": "object",
              "x-yang": {
                "type": "container",
                "is_presence": "false"
              },
              "properties": {
                "total-size": {
                  "description": "Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)",
                  "type": "object",
                  "x-yang": {
                    "type": "container",
                    "is_presence": "false"
                  },
                  "properties": {
                    "value": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "integer",
                      "format": "uint64"
                    },
                    "unit": {
                      "description": "none (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "TB",
                      "enum": [
                        "TB",
                        "TBPS",
                        "GB",
                        "GBPS",
                        "MB",
                        "MBPS",
                        "KB",
                        "KBPS",
                        "GHz",
                        "MHz"
                      ]
                    }
                  }
                }
              }
            },
            "cost-characteristic": {
              "type": "array",
              "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity. (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "cost-name": {
                    "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "cost-value": {
                    "description": "The specific cost. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "cost-algorithm": {
                    "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  }
                }
              }
            },
            "error-characteristic": {
              "description": "Describes the degree to which the signal propagated can be errored.\nApplies to TDM systems as the errored signal will be propagated and not packet as errored packets will be discarded. (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "loss-characteristic": {
              "description": "Describes the acceptable characteristic of lost packets where loss may result from discard due to errors or overflow.\nApplies to packet systems and not TDM (as for TDM errored signals are propagated unless grossly errored and overflow/underflow turns into timing slips). (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "repeat-delivery-characteristic": {
              "description": "Primarily applies to packet systems where a packet may be delivered more than once (in fault recovery for example).\nIt can also apply to TDM where several frames may be received twice due to switching in a system with a large differential propagation delay. (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "delivery-order-characteristic": {
              "description": "Describes the degree to which packets will be delivered out of sequence.\nDoes not apply to TDM as the TDM protocols maintain strict order. (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "unavailable-time-characteristic": {
              "description": "Describes the duration for which there may be no valid signal propagated. (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "server-integrity-process-characteristic": {
              "description": "Describes the effect of any server integrity enhancement process on the characteristics of the TopologicalEntity. (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "latency-characteristic": {
              "type": "array",
              "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic. (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "traffic-property-name": {
                    "description": "The identifier of the specific traffic property to which the queuing latency applies. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "fixed-latency-characteristic": {
                    "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "queing-latency-characteristic": {
                    "description": "The specific queuing latency for the traffic property. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "jitter-characteristic": {
                    "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "wander-characteristic": {
                    "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet). (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  }
                }
              }
            },
            "risk-characteristic": {
              "type": "array",
              "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration. (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "risk-characteristic-name": {
                    "description": "The name of the risk characteristic. The characteristic may be related to a specific degree of closeness.\nFor example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).\nDepending upon the importance of the traffic being routed different risk characteristics will be evaluated. (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "risk-identifier-list": {
                    "type": "array",
                    "x-yang": {
                      "type": "leaf-list"
                    },
                    "items": {
                      "description": "A list of the identifiers of each physical/geographic unit (with the specific risk characteristic) that is related to a segment of the TopologicalEntity. (leaf-list)",
                      "type": "string",
                      "format": "string"
                    }
                  }
                }
              }
            },
            "validation-mechanism": {
              "type": "array",
              "description": "Provides details of the specific validation mechanism(s) used to confirm the presence of an intended topologicalEntity. (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "validation-mechanism": {
                    "description": "Name of mechanism used to validate adjacency (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "layer-protocol-adjacency-validated": {
                    "description": "State of validatiion (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "validation-robustness": {
                    "description": "Quality of validation (i.e. how likely is the stated validation to be invalid) (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  }
                }
              }
            },
            "transitioned-layer-protocol-name": {
              "type": "array",
              "x-yang": {
                "type": "leaf-list"
              },
              "items": {
                "description": "Provides the ordered structure of layer protocol transitions encapsulated in the TopologicalEntity. The ordering relates to the LinkPort role. (leaf-list)",
                "type": "string",
                "format": "string"
              }
            }
          }
        }
      }
    },
    "data_tapi-topology_get-link-details-post-input": {
      "type": "object",
      "properties": {
        "tapi-topology:topology-id-or-name": {
          "description": "none (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "string"
        },
        "tapi-topology:link-id-or-name": {
          "description": "none (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "string"
        }
      }
    },
    "data-put-patch": {
      "type": "object",
      "properties": {
        "ietf-restconf:data": {
          "description": "\nThis module contains TAPI Topology Model definitions.\nSource: TapiTopology.uml\nCopyright (c) 2018 Open Networking Foundation (ONF). All rights reserved.\nLicense: This module is distributed under the Apache License 2.0\n- The TAPI YANG models included in this TAPI release are a *normative* part of the TAPI SDK.\n- The YANG specifications have been generated from the corresponding UML model using the [ONF EAGLE UML2YANG mapping tool]\n<https://github.com/OpenNetworkingFoundation/EagleUmlYang>\nand further edited manually to comply with the [ONF IISOMI UML2YANG mapping guidelines]\n<https://wiki.opennetworking.org/display/OIMT/UML+-+YANG+Guidelines>\n- Status of YANG model artifacts can be determined by referring to the corresponding UML artifacts.\nAs described in the UML models, some artifacts are considered *experimental*, and thus the corresponding YANG artifacts.\n- The ONF TAPI release process does not guarantee backward compatibility of YANG models across major versions of TAPI releases.\nThe YANG model backward compatibility criteria are outlined in section 11 of <https://tools.ietf.org/html/rfc7950>.\nYANG models included in this release may not be backward compatible with previous TAPI releases.",
          "type": "object",
          "x-yang": {
            "type": "datastore"
          },
          "properties": {
          }
        }
      }
    },
    "data-post": {
      "type": "object",
      "properties": {
        "tapi-topology:topology-id-or-name": {
          "description": "none (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "string"
        },
        "tapi-topology:topology-id-or-name": {
          "description": "none (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "string"
        },
        "tapi-topology:node-id-or-name": {
          "description": "none (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "string"
        },
        "tapi-topology:topology-id-or-name": {
          "description": "none (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "string"
        },
        "tapi-topology:node-id-or-name": {
          "description": "none (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "string"
        },
        "tapi-topology:ep-id-or-name": {
          "description": "none (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "string"
        },
        "tapi-topology:topology-id-or-name": {
          "description": "none (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "string"
        },
        "tapi-topology:link-id-or-name": {
          "description": "none (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "string"
        }
      }
    },
    "data": {
      "type": "object",
      "properties": {
        "ietf-restconf:data": {
          "type": "object",
          "description": "This resource represents the combined configuration and state data resources that can be accessed by a client and cannot be created or deleted by the client. See RESTCONF RFC 8040 for further information.",
          "x-yang": {
            "type": "datastore"
          },
          "properties": {
          }
        }
      }
    }
  }
}
