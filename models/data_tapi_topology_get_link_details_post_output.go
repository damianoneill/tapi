// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DataTapiTopologyGetLinkDetailsPostOutput data tapi topology get link details post output
// swagger:model data_tapi-topology_get-link-details-post-output
type DataTapiTopologyGetLinkDetailsPostOutput struct {

	// tapi topology link
	TapiTopologyLink *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink `json:"tapi-topology:link,omitempty"`
}

// Validate validates this data tapi topology get link details post output
func (m *DataTapiTopologyGetLinkDetailsPostOutput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTapiTopologyLink(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DataTapiTopologyGetLinkDetailsPostOutput) validateTapiTopologyLink(formats strfmt.Registry) error {

	if swag.IsZero(m.TapiTopologyLink) { // not required
		return nil
	}

	if m.TapiTopologyLink != nil {
		if err := m.TapiTopologyLink.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tapi-topology:link")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DataTapiTopologyGetLinkDetailsPostOutput) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DataTapiTopologyGetLinkDetailsPostOutput) UnmarshalBinary(b []byte) error {
	var res DataTapiTopologyGetLinkDetailsPostOutput
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink none (non-presence)
// swagger:model DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink
type DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink struct {

	// none (leaf)
	// Enum: [LOCKED UNLOCKED]
	AdministrativeState *string `json:"administrative-state,omitempty"`

	// available capacity
	AvailableCapacity *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacity `json:"available-capacity,omitempty"`

	// The list of costs where each cost relates to some aspect of the TopologicalEntity. (list)
	CostCharacteristic []*DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkCostCharacteristicItems0 `json:"cost-characteristic"`

	// Describes the degree to which packets will be delivered out of sequence.
	// Does not apply to TDM as the TDM protocols maintain strict order. (leaf)
	DeliveryOrderCharacteristic string `json:"delivery-order-characteristic,omitempty"`

	// The directionality of the Link.
	// Is applicable to simple Links where all LinkEnds are BIDIRECTIONAL (the Link will be BIDIRECTIONAL) or UNIDIRECTIONAL (the Link will be UNIDIRECTIONAL).
	// Is not present in more complex cases. (leaf)
	// Enum: [BIDIRECTIONAL UNIDIRECTIONAL UNDEFINED_OR_UNKNOWN]
	Direction *string `json:"direction,omitempty"`

	// Describes the degree to which the signal propagated can be errored.
	// Applies to TDM systems as the errored signal will be propagated and not packet as errored packets will be discarded. (leaf)
	ErrorCharacteristic string `json:"error-characteristic,omitempty"`

	// The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic. (list)
	LatencyCharacteristic []*DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkLatencyCharacteristicItems0 `json:"latency-characteristic"`

	// layer protocol name
	LayerProtocolName []*string `json:"layer-protocol-name"`

	// none (leaf)
	// Enum: [PLANNED POTENTIAL_AVAILABLE POTENTIAL_BUSY INSTALLED PENDING_REMOVAL]
	LifecycleState *string `json:"lifecycle-state,omitempty"`

	// Describes the acceptable characteristic of lost packets where loss may result from discard due to errors or overflow.
	// Applies to packet systems and not TDM (as for TDM errored signals are propagated unless grossly errored and overflow/underflow turns into timing slips). (leaf)
	LossCharacteristic string `json:"loss-characteristic,omitempty"`

	// List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)
	Name []*DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkNameItems0 `json:"name"`

	// none (list)
	NodeEdgePoint []*DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkNodeEdgePointItems0 `json:"node-edge-point"`

	// none (leaf)
	// Enum: [DISABLED ENABLED]
	OperationalState *string `json:"operational-state,omitempty"`

	// none (leaf)
	// Enum: [NO_PROTECTION ONE_PLUS_ONE_PROTECTION ONE_FOR_ONE_PROTECTION ONE_FOR_N_PROTECTION M_FOR_N_PROTECTION ONE_FOR_ONE_BY_N]
	ProtectionType *string `json:"protection-type,omitempty"`

	// Primarily applies to packet systems where a packet may be delivered more than once (in fault recovery for example).
	// It can also apply to TDM where several frames may be received twice due to switching in a system with a large differential propagation delay. (leaf)
	RepeatDeliveryCharacteristic string `json:"repeat-delivery-characteristic,omitempty"`

	// none (leaf)
	// Enum: [PER_DOMAIN_RESTORATION END_TO_END_RESTORATION NA DYNAMIC_RESTORATION PRE_COMPUTED_RESTORATION]
	RestorationPolicy *string `json:"restoration-policy,omitempty"`

	// A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration. (list)
	RiskCharacteristic []*DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkRiskCharacteristicItems0 `json:"risk-characteristic"`

	// Describes the effect of any server integrity enhancement process on the characteristics of the TopologicalEntity. (leaf)
	ServerIntegrityProcessCharacteristic string `json:"server-integrity-process-characteristic,omitempty"`

	// total potential capacity
	TotalPotentialCapacity *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacity `json:"total-potential-capacity,omitempty"`

	// transitioned layer protocol name
	TransitionedLayerProtocolName []string `json:"transitioned-layer-protocol-name"`

	// Describes the duration for which there may be no valid signal propagated. (leaf)
	UnavailableTimeCharacteristic string `json:"unavailable-time-characteristic,omitempty"`

	// UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.
	// UUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.
	// Pattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
	// Example of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)
	UUID string `json:"uuid,omitempty"`

	// Provides details of the specific validation mechanism(s) used to confirm the presence of an intended topologicalEntity. (list)
	ValidationMechanism []*DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkValidationMechanismItems0 `json:"validation-mechanism"`
}

// Validate validates this data tapi topology get link details post output tapi topology link
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAdministrativeState(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAvailableCapacity(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCostCharacteristic(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDirection(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLatencyCharacteristic(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLayerProtocolName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLifecycleState(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNodeEdgePoint(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOperationalState(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProtectionType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRestorationPolicy(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRiskCharacteristic(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalPotentialCapacity(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValidationMechanism(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTypeAdministrativeStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["LOCKED","UNLOCKED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTypeAdministrativeStatePropEnum = append(dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTypeAdministrativeStatePropEnum, v)
	}
}

const (

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAdministrativeStateLOCKED captures enum value "LOCKED"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAdministrativeStateLOCKED string = "LOCKED"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAdministrativeStateUNLOCKED captures enum value "UNLOCKED"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAdministrativeStateUNLOCKED string = "UNLOCKED"
)

// prop value enum
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink) validateAdministrativeStateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTypeAdministrativeStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink) validateAdministrativeState(formats strfmt.Registry) error {

	if swag.IsZero(m.AdministrativeState) { // not required
		return nil
	}

	// value enum
	if err := m.validateAdministrativeStateEnum("tapi-topology:link"+"."+"administrative-state", "body", *m.AdministrativeState); err != nil {
		return err
	}

	return nil
}

func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink) validateAvailableCapacity(formats strfmt.Registry) error {

	if swag.IsZero(m.AvailableCapacity) { // not required
		return nil
	}

	if m.AvailableCapacity != nil {
		if err := m.AvailableCapacity.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tapi-topology:link" + "." + "available-capacity")
			}
			return err
		}
	}

	return nil
}

func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink) validateCostCharacteristic(formats strfmt.Registry) error {

	if swag.IsZero(m.CostCharacteristic) { // not required
		return nil
	}

	for i := 0; i < len(m.CostCharacteristic); i++ {
		if swag.IsZero(m.CostCharacteristic[i]) { // not required
			continue
		}

		if m.CostCharacteristic[i] != nil {
			if err := m.CostCharacteristic[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tapi-topology:link" + "." + "cost-characteristic" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTypeDirectionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["BIDIRECTIONAL","UNIDIRECTIONAL","UNDEFINED_OR_UNKNOWN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTypeDirectionPropEnum = append(dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTypeDirectionPropEnum, v)
	}
}

const (

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkDirectionBIDIRECTIONAL captures enum value "BIDIRECTIONAL"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkDirectionBIDIRECTIONAL string = "BIDIRECTIONAL"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkDirectionUNIDIRECTIONAL captures enum value "UNIDIRECTIONAL"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkDirectionUNIDIRECTIONAL string = "UNIDIRECTIONAL"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkDirectionUNDEFINEDORUNKNOWN captures enum value "UNDEFINED_OR_UNKNOWN"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkDirectionUNDEFINEDORUNKNOWN string = "UNDEFINED_OR_UNKNOWN"
)

// prop value enum
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink) validateDirectionEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTypeDirectionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink) validateDirection(formats strfmt.Registry) error {

	if swag.IsZero(m.Direction) { // not required
		return nil
	}

	// value enum
	if err := m.validateDirectionEnum("tapi-topology:link"+"."+"direction", "body", *m.Direction); err != nil {
		return err
	}

	return nil
}

func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink) validateLatencyCharacteristic(formats strfmt.Registry) error {

	if swag.IsZero(m.LatencyCharacteristic) { // not required
		return nil
	}

	for i := 0; i < len(m.LatencyCharacteristic); i++ {
		if swag.IsZero(m.LatencyCharacteristic[i]) { // not required
			continue
		}

		if m.LatencyCharacteristic[i] != nil {
			if err := m.LatencyCharacteristic[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tapi-topology:link" + "." + "latency-characteristic" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkLayerProtocolNameItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ODU","ETH","DSR","PHOTONIC_MEDIA"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkLayerProtocolNameItemsEnum = append(dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkLayerProtocolNameItemsEnum, v)
	}
}

func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink) validateLayerProtocolNameItemsEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkLayerProtocolNameItemsEnum); err != nil {
		return err
	}
	return nil
}

func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink) validateLayerProtocolName(formats strfmt.Registry) error {

	if swag.IsZero(m.LayerProtocolName) { // not required
		return nil
	}

	for i := 0; i < len(m.LayerProtocolName); i++ {
		if swag.IsZero(m.LayerProtocolName[i]) { // not required
			continue
		}

		// value enum
		if err := m.validateLayerProtocolNameItemsEnum("tapi-topology:link"+"."+"layer-protocol-name"+"."+strconv.Itoa(i), "body", *m.LayerProtocolName[i]); err != nil {
			return err
		}

	}

	return nil
}

var dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTypeLifecycleStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PLANNED","POTENTIAL_AVAILABLE","POTENTIAL_BUSY","INSTALLED","PENDING_REMOVAL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTypeLifecycleStatePropEnum = append(dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTypeLifecycleStatePropEnum, v)
	}
}

const (

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkLifecycleStatePLANNED captures enum value "PLANNED"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkLifecycleStatePLANNED string = "PLANNED"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkLifecycleStatePOTENTIALAVAILABLE captures enum value "POTENTIAL_AVAILABLE"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkLifecycleStatePOTENTIALAVAILABLE string = "POTENTIAL_AVAILABLE"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkLifecycleStatePOTENTIALBUSY captures enum value "POTENTIAL_BUSY"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkLifecycleStatePOTENTIALBUSY string = "POTENTIAL_BUSY"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkLifecycleStateINSTALLED captures enum value "INSTALLED"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkLifecycleStateINSTALLED string = "INSTALLED"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkLifecycleStatePENDINGREMOVAL captures enum value "PENDING_REMOVAL"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkLifecycleStatePENDINGREMOVAL string = "PENDING_REMOVAL"
)

// prop value enum
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink) validateLifecycleStateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTypeLifecycleStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink) validateLifecycleState(formats strfmt.Registry) error {

	if swag.IsZero(m.LifecycleState) { // not required
		return nil
	}

	// value enum
	if err := m.validateLifecycleStateEnum("tapi-topology:link"+"."+"lifecycle-state", "body", *m.LifecycleState); err != nil {
		return err
	}

	return nil
}

func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink) validateName(formats strfmt.Registry) error {

	if swag.IsZero(m.Name) { // not required
		return nil
	}

	for i := 0; i < len(m.Name); i++ {
		if swag.IsZero(m.Name[i]) { // not required
			continue
		}

		if m.Name[i] != nil {
			if err := m.Name[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tapi-topology:link" + "." + "name" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink) validateNodeEdgePoint(formats strfmt.Registry) error {

	if swag.IsZero(m.NodeEdgePoint) { // not required
		return nil
	}

	for i := 0; i < len(m.NodeEdgePoint); i++ {
		if swag.IsZero(m.NodeEdgePoint[i]) { // not required
			continue
		}

		if m.NodeEdgePoint[i] != nil {
			if err := m.NodeEdgePoint[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tapi-topology:link" + "." + "node-edge-point" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTypeOperationalStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DISABLED","ENABLED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTypeOperationalStatePropEnum = append(dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTypeOperationalStatePropEnum, v)
	}
}

const (

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkOperationalStateDISABLED captures enum value "DISABLED"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkOperationalStateDISABLED string = "DISABLED"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkOperationalStateENABLED captures enum value "ENABLED"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkOperationalStateENABLED string = "ENABLED"
)

// prop value enum
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink) validateOperationalStateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTypeOperationalStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink) validateOperationalState(formats strfmt.Registry) error {

	if swag.IsZero(m.OperationalState) { // not required
		return nil
	}

	// value enum
	if err := m.validateOperationalStateEnum("tapi-topology:link"+"."+"operational-state", "body", *m.OperationalState); err != nil {
		return err
	}

	return nil
}

var dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTypeProtectionTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["NO_PROTECTION","ONE_PLUS_ONE_PROTECTION","ONE_FOR_ONE_PROTECTION","ONE_FOR_N_PROTECTION","M_FOR_N_PROTECTION","ONE_FOR_ONE_BY_N"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTypeProtectionTypePropEnum = append(dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTypeProtectionTypePropEnum, v)
	}
}

const (

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkProtectionTypeNOPROTECTION captures enum value "NO_PROTECTION"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkProtectionTypeNOPROTECTION string = "NO_PROTECTION"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkProtectionTypeONEPLUSONEPROTECTION captures enum value "ONE_PLUS_ONE_PROTECTION"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkProtectionTypeONEPLUSONEPROTECTION string = "ONE_PLUS_ONE_PROTECTION"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkProtectionTypeONEFORONEPROTECTION captures enum value "ONE_FOR_ONE_PROTECTION"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkProtectionTypeONEFORONEPROTECTION string = "ONE_FOR_ONE_PROTECTION"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkProtectionTypeONEFORNPROTECTION captures enum value "ONE_FOR_N_PROTECTION"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkProtectionTypeONEFORNPROTECTION string = "ONE_FOR_N_PROTECTION"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkProtectionTypeMFORNPROTECTION captures enum value "M_FOR_N_PROTECTION"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkProtectionTypeMFORNPROTECTION string = "M_FOR_N_PROTECTION"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkProtectionTypeONEFORONEBYN captures enum value "ONE_FOR_ONE_BY_N"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkProtectionTypeONEFORONEBYN string = "ONE_FOR_ONE_BY_N"
)

// prop value enum
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink) validateProtectionTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTypeProtectionTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink) validateProtectionType(formats strfmt.Registry) error {

	if swag.IsZero(m.ProtectionType) { // not required
		return nil
	}

	// value enum
	if err := m.validateProtectionTypeEnum("tapi-topology:link"+"."+"protection-type", "body", *m.ProtectionType); err != nil {
		return err
	}

	return nil
}

var dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTypeRestorationPolicyPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PER_DOMAIN_RESTORATION","END_TO_END_RESTORATION","NA","DYNAMIC_RESTORATION","PRE_COMPUTED_RESTORATION"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTypeRestorationPolicyPropEnum = append(dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTypeRestorationPolicyPropEnum, v)
	}
}

const (

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkRestorationPolicyPERDOMAINRESTORATION captures enum value "PER_DOMAIN_RESTORATION"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkRestorationPolicyPERDOMAINRESTORATION string = "PER_DOMAIN_RESTORATION"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkRestorationPolicyENDTOENDRESTORATION captures enum value "END_TO_END_RESTORATION"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkRestorationPolicyENDTOENDRESTORATION string = "END_TO_END_RESTORATION"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkRestorationPolicyNA captures enum value "NA"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkRestorationPolicyNA string = "NA"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkRestorationPolicyDYNAMICRESTORATION captures enum value "DYNAMIC_RESTORATION"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkRestorationPolicyDYNAMICRESTORATION string = "DYNAMIC_RESTORATION"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkRestorationPolicyPRECOMPUTEDRESTORATION captures enum value "PRE_COMPUTED_RESTORATION"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkRestorationPolicyPRECOMPUTEDRESTORATION string = "PRE_COMPUTED_RESTORATION"
)

// prop value enum
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink) validateRestorationPolicyEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTypeRestorationPolicyPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink) validateRestorationPolicy(formats strfmt.Registry) error {

	if swag.IsZero(m.RestorationPolicy) { // not required
		return nil
	}

	// value enum
	if err := m.validateRestorationPolicyEnum("tapi-topology:link"+"."+"restoration-policy", "body", *m.RestorationPolicy); err != nil {
		return err
	}

	return nil
}

func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink) validateRiskCharacteristic(formats strfmt.Registry) error {

	if swag.IsZero(m.RiskCharacteristic) { // not required
		return nil
	}

	for i := 0; i < len(m.RiskCharacteristic); i++ {
		if swag.IsZero(m.RiskCharacteristic[i]) { // not required
			continue
		}

		if m.RiskCharacteristic[i] != nil {
			if err := m.RiskCharacteristic[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tapi-topology:link" + "." + "risk-characteristic" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink) validateTotalPotentialCapacity(formats strfmt.Registry) error {

	if swag.IsZero(m.TotalPotentialCapacity) { // not required
		return nil
	}

	if m.TotalPotentialCapacity != nil {
		if err := m.TotalPotentialCapacity.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tapi-topology:link" + "." + "total-potential-capacity")
			}
			return err
		}
	}

	return nil
}

func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink) validateValidationMechanism(formats strfmt.Registry) error {

	if swag.IsZero(m.ValidationMechanism) { // not required
		return nil
	}

	for i := 0; i < len(m.ValidationMechanism); i++ {
		if swag.IsZero(m.ValidationMechanism[i]) { // not required
			continue
		}

		if m.ValidationMechanism[i] != nil {
			if err := m.ValidationMechanism[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tapi-topology:link" + "." + "validation-mechanism" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink) UnmarshalBinary(b []byte) error {
	var res DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLink
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacity Capacity available to be assigned. (non-presence)
// swagger:model DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacity
type DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacity struct {

	// total size
	TotalSize *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSize `json:"total-size,omitempty"`
}

// Validate validates this data tapi topology get link details post output tapi topology link available capacity
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTotalSize(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacity) validateTotalSize(formats strfmt.Registry) error {

	if swag.IsZero(m.TotalSize) { // not required
		return nil
	}

	if m.TotalSize != nil {
		if err := m.TotalSize.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tapi-topology:link" + "." + "available-capacity" + "." + "total-size")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacity) UnmarshalBinary(b []byte) error {
	var res DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSize Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)
// swagger:model DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSize
type DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSize struct {

	// none (leaf)
	// Enum: [TB TBPS GB GBPS MB MBPS KB KBPS GHz MHz]
	Unit *string `json:"unit,omitempty"`

	// none (leaf)
	Value uint64 `json:"value,omitempty"`
}

// Validate validates this data tapi topology get link details post output tapi topology link available capacity total size
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSize) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUnit(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSizeTypeUnitPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["TB","TBPS","GB","GBPS","MB","MBPS","KB","KBPS","GHz","MHz"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSizeTypeUnitPropEnum = append(dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSizeTypeUnitPropEnum, v)
	}
}

const (

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSizeUnitTB captures enum value "TB"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSizeUnitTB string = "TB"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSizeUnitTBPS captures enum value "TBPS"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSizeUnitTBPS string = "TBPS"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSizeUnitGB captures enum value "GB"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSizeUnitGB string = "GB"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSizeUnitGBPS captures enum value "GBPS"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSizeUnitGBPS string = "GBPS"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSizeUnitMB captures enum value "MB"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSizeUnitMB string = "MB"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSizeUnitMBPS captures enum value "MBPS"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSizeUnitMBPS string = "MBPS"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSizeUnitKB captures enum value "KB"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSizeUnitKB string = "KB"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSizeUnitKBPS captures enum value "KBPS"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSizeUnitKBPS string = "KBPS"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSizeUnitGHz captures enum value "GHz"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSizeUnitGHz string = "GHz"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSizeUnitMHz captures enum value "MHz"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSizeUnitMHz string = "MHz"
)

// prop value enum
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSize) validateUnitEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSizeTypeUnitPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSize) validateUnit(formats strfmt.Registry) error {

	if swag.IsZero(m.Unit) { // not required
		return nil
	}

	// value enum
	if err := m.validateUnitEnum("tapi-topology:link"+"."+"available-capacity"+"."+"total-size"+"."+"unit", "body", *m.Unit); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSize) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSize) UnmarshalBinary(b []byte) error {
	var res DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkAvailableCapacityTotalSize
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkCostCharacteristicItems0 data tapi topology get link details post output tapi topology link cost characteristic items0
// swagger:model DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkCostCharacteristicItems0
type DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkCostCharacteristicItems0 struct {

	// The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm. (leaf)
	CostAlgorithm string `json:"cost-algorithm,omitempty"`

	// The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName. (leaf)
	CostName string `json:"cost-name,omitempty"`

	// The specific cost. (leaf)
	CostValue string `json:"cost-value,omitempty"`
}

// Validate validates this data tapi topology get link details post output tapi topology link cost characteristic items0
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkCostCharacteristicItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkCostCharacteristicItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkCostCharacteristicItems0) UnmarshalBinary(b []byte) error {
	var res DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkCostCharacteristicItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkLatencyCharacteristicItems0 data tapi topology get link details post output tapi topology link latency characteristic items0
// swagger:model DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkLatencyCharacteristicItems0
type DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkLatencyCharacteristicItems0 struct {

	// A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity (leaf)
	FixedLatencyCharacteristic string `json:"fixed-latency-characteristic,omitempty"`

	// High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.
	// Applies to TDM systems (and not packet). (leaf)
	JitterCharacteristic string `json:"jitter-characteristic,omitempty"`

	// The specific queuing latency for the traffic property. (leaf)
	QueingLatencyCharacteristic string `json:"queing-latency-characteristic,omitempty"`

	// The identifier of the specific traffic property to which the queuing latency applies. (leaf)
	TrafficPropertyName string `json:"traffic-property-name,omitempty"`

	// Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.
	// Applies to TDM systems (and not packet). (leaf)
	WanderCharacteristic string `json:"wander-characteristic,omitempty"`
}

// Validate validates this data tapi topology get link details post output tapi topology link latency characteristic items0
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkLatencyCharacteristicItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkLatencyCharacteristicItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkLatencyCharacteristicItems0) UnmarshalBinary(b []byte) error {
	var res DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkLatencyCharacteristicItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkNameItems0 data tapi topology get link details post output tapi topology link name items0
// swagger:model DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkNameItems0
type DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkNameItems0 struct {

	// The value (leaf)
	Value string `json:"value,omitempty"`

	// The name of the value. The value need not have a name. (leaf)
	ValueName string `json:"value-name,omitempty"`
}

// Validate validates this data tapi topology get link details post output tapi topology link name items0
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkNameItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkNameItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkNameItems0) UnmarshalBinary(b []byte) error {
	var res DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkNameItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkNodeEdgePointItems0 data tapi topology get link details post output tapi topology link node edge point items0
// swagger:model DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkNodeEdgePointItems0
type DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkNodeEdgePointItems0 struct {

	// none (leaf)
	NodeEdgePointUUID string `json:"node-edge-point-uuid,omitempty"`

	// none (leaf)
	NodeUUID string `json:"node-uuid,omitempty"`

	// none (leaf)
	TopologyUUID string `json:"topology-uuid,omitempty"`
}

// Validate validates this data tapi topology get link details post output tapi topology link node edge point items0
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkNodeEdgePointItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkNodeEdgePointItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkNodeEdgePointItems0) UnmarshalBinary(b []byte) error {
	var res DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkNodeEdgePointItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkRiskCharacteristicItems0 data tapi topology get link details post output tapi topology link risk characteristic items0
// swagger:model DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkRiskCharacteristicItems0
type DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkRiskCharacteristicItems0 struct {

	// The name of the risk characteristic. The characteristic may be related to a specific degree of closeness.
	// For example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).
	// Depending upon the importance of the traffic being routed different risk characteristics will be evaluated. (leaf)
	RiskCharacteristicName string `json:"risk-characteristic-name,omitempty"`

	// risk identifier list
	RiskIdentifierList []string `json:"risk-identifier-list"`
}

// Validate validates this data tapi topology get link details post output tapi topology link risk characteristic items0
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkRiskCharacteristicItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkRiskCharacteristicItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkRiskCharacteristicItems0) UnmarshalBinary(b []byte) error {
	var res DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkRiskCharacteristicItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacity An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)
// swagger:model DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacity
type DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacity struct {

	// total size
	TotalSize *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSize `json:"total-size,omitempty"`
}

// Validate validates this data tapi topology get link details post output tapi topology link total potential capacity
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTotalSize(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacity) validateTotalSize(formats strfmt.Registry) error {

	if swag.IsZero(m.TotalSize) { // not required
		return nil
	}

	if m.TotalSize != nil {
		if err := m.TotalSize.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tapi-topology:link" + "." + "total-potential-capacity" + "." + "total-size")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacity) UnmarshalBinary(b []byte) error {
	var res DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSize Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)
// swagger:model DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSize
type DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSize struct {

	// none (leaf)
	// Enum: [TB TBPS GB GBPS MB MBPS KB KBPS GHz MHz]
	Unit *string `json:"unit,omitempty"`

	// none (leaf)
	Value uint64 `json:"value,omitempty"`
}

// Validate validates this data tapi topology get link details post output tapi topology link total potential capacity total size
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSize) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUnit(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSizeTypeUnitPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["TB","TBPS","GB","GBPS","MB","MBPS","KB","KBPS","GHz","MHz"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSizeTypeUnitPropEnum = append(dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSizeTypeUnitPropEnum, v)
	}
}

const (

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSizeUnitTB captures enum value "TB"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSizeUnitTB string = "TB"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSizeUnitTBPS captures enum value "TBPS"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSizeUnitTBPS string = "TBPS"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSizeUnitGB captures enum value "GB"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSizeUnitGB string = "GB"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSizeUnitGBPS captures enum value "GBPS"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSizeUnitGBPS string = "GBPS"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSizeUnitMB captures enum value "MB"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSizeUnitMB string = "MB"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSizeUnitMBPS captures enum value "MBPS"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSizeUnitMBPS string = "MBPS"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSizeUnitKB captures enum value "KB"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSizeUnitKB string = "KB"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSizeUnitKBPS captures enum value "KBPS"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSizeUnitKBPS string = "KBPS"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSizeUnitGHz captures enum value "GHz"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSizeUnitGHz string = "GHz"

	// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSizeUnitMHz captures enum value "MHz"
	DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSizeUnitMHz string = "MHz"
)

// prop value enum
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSize) validateUnitEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, dataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSizeTypeUnitPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSize) validateUnit(formats strfmt.Registry) error {

	if swag.IsZero(m.Unit) { // not required
		return nil
	}

	// value enum
	if err := m.validateUnitEnum("tapi-topology:link"+"."+"total-potential-capacity"+"."+"total-size"+"."+"unit", "body", *m.Unit); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSize) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSize) UnmarshalBinary(b []byte) error {
	var res DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkTotalPotentialCapacityTotalSize
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkValidationMechanismItems0 data tapi topology get link details post output tapi topology link validation mechanism items0
// swagger:model DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkValidationMechanismItems0
type DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkValidationMechanismItems0 struct {

	// State of validatiion (leaf)
	LayerProtocolAdjacencyValidated string `json:"layer-protocol-adjacency-validated,omitempty"`

	// Name of mechanism used to validate adjacency (leaf)
	ValidationMechanism string `json:"validation-mechanism,omitempty"`

	// Quality of validation (i.e. how likely is the stated validation to be invalid) (leaf)
	ValidationRobustness string `json:"validation-robustness,omitempty"`
}

// Validate validates this data tapi topology get link details post output tapi topology link validation mechanism items0
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkValidationMechanismItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkValidationMechanismItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkValidationMechanismItems0) UnmarshalBinary(b []byte) error {
	var res DataTapiTopologyGetLinkDetailsPostOutputTapiTopologyLinkValidationMechanismItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
