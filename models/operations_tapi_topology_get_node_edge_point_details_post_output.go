// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutput operations tapi topology get node edge point details post output
// swagger:model operations_tapi-topology_get-node-edge-point-details-post-output
type OperationsTapiTopologyGetNodeEdgePointDetailsPostOutput struct {

	// tapi topology node edge point
	TapiTopologyNodeEdgePoint *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint `json:"tapi-topology:node-edge-point,omitempty"`
}

// Validate validates this operations tapi topology get node edge point details post output
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTapiTopologyNodeEdgePoint(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutput) validateTapiTopologyNodeEdgePoint(formats strfmt.Registry) error {

	if swag.IsZero(m.TapiTopologyNodeEdgePoint) { // not required
		return nil
	}

	if m.TapiTopologyNodeEdgePoint != nil {
		if err := m.TapiTopologyNodeEdgePoint.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tapi-topology:node-edge-point")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutput) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutput) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeEdgePointDetailsPostOutput
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint none (non-presence)
// swagger:model OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint
type OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint struct {

	// none (leaf)
	// Enum: [LOCKED UNLOCKED]
	AdministrativeState *string `json:"administrative-state,omitempty"`

	// none (list)
	AggregatedNodeEdgePoint []*OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAggregatedNodeEdgePointItems0 `json:"aggregated-node-edge-point"`

	// available capacity
	AvailableCapacity *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacity `json:"available-capacity,omitempty"`

	// none (list)
	AvailableCepLayerProtocol []*OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCepLayerProtocolItems0 `json:"available-cep-layer-protocol"`

	// none (leaf)
	// Enum: [ODU ETH DSR PHOTONIC_MEDIA]
	LayerProtocolName *string `json:"layer-protocol-name,omitempty"`

	// none (leaf)
	// Enum: [PLANNED POTENTIAL_AVAILABLE POTENTIAL_BUSY INSTALLED PENDING_REMOVAL]
	LifecycleState *string `json:"lifecycle-state,omitempty"`

	// The orientation of defined flow at the LinkEnd. (leaf)
	// Enum: [BIDIRECTIONAL INPUT OUTPUT UNIDENTIFIED_OR_UNKNOWN]
	LinkPortDirection *string `json:"link-port-direction,omitempty"`

	// Each LinkEnd of the Link has a role (e.g., symmetric, hub, spoke, leaf, root)  in the context of the Link with respect to the Link function.  (leaf)
	// Enum: [SYMMETRIC ROOT LEAF TRUNK UNKNOWN]
	LinkPortRole *string `json:"link-port-role,omitempty"`

	// NodeEdgePoint mapped to more than ServiceInterfacePoint (slicing/virtualizing) or a ServiceInterfacePoint mapped to more than one NodeEdgePoint (load balancing/Resilience) should be considered experimental (list)
	MappedServiceInterfacePoint []*OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointMappedServiceInterfacePointItems0 `json:"mapped-service-interface-point"`

	// List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)
	Name []*OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointNameItems0 `json:"name"`

	// none (leaf)
	// Enum: [DISABLED ENABLED]
	OperationalState *string `json:"operational-state,omitempty"`

	// The overall directionality of the LP.
	// - A BIDIRECTIONAL LP will have some SINK and/or SOURCE flowss.
	// - A SINK LP can only contain elements with SINK flows or CONTRA_DIRECTION_SOURCE flows
	// - A SOURCE LP can only contain SOURCE flows or CONTRA_DIRECTION_SINK flows (leaf)
	// Enum: [BIDIRECTIONAL SINK SOURCE UNDEFINED_OR_UNKNOWN]
	TerminationDirection *string `json:"termination-direction,omitempty"`

	// Indicates whether the layer is terminated and if so how. (leaf)
	// Enum: [LP_CAN_NEVER_TERMINATE LT_NOT_TERMINATED TERMINATED_SERVER_TO_CLIENT_FLOW TERMINATED_CLIENT_TO_SERVER_FLOW TERMINATED_BIDIRECTIONAL LT_PERMENANTLY_TERMINATED TERMINATION_STATE_UNKNOWN]
	TerminationState *string `json:"termination-state,omitempty"`

	// total potential capacity
	TotalPotentialCapacity *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacity `json:"total-potential-capacity,omitempty"`

	// UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.
	// UUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.
	// Pattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
	// Example of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)
	UUID string `json:"uuid,omitempty"`
}

// Validate validates this operations tapi topology get node edge point details post output tapi topology node edge point
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAdministrativeState(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAggregatedNodeEdgePoint(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAvailableCapacity(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAvailableCepLayerProtocol(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLayerProtocolName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLifecycleState(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLinkPortDirection(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLinkPortRole(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMappedServiceInterfacePoint(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOperationalState(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTerminationDirection(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTerminationState(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalPotentialCapacity(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeAdministrativeStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["LOCKED","UNLOCKED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeAdministrativeStatePropEnum = append(operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeAdministrativeStatePropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAdministrativeStateLOCKED captures enum value "LOCKED"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAdministrativeStateLOCKED string = "LOCKED"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAdministrativeStateUNLOCKED captures enum value "UNLOCKED"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAdministrativeStateUNLOCKED string = "UNLOCKED"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint) validateAdministrativeStateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeAdministrativeStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint) validateAdministrativeState(formats strfmt.Registry) error {

	if swag.IsZero(m.AdministrativeState) { // not required
		return nil
	}

	// value enum
	if err := m.validateAdministrativeStateEnum("tapi-topology:node-edge-point"+"."+"administrative-state", "body", *m.AdministrativeState); err != nil {
		return err
	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint) validateAggregatedNodeEdgePoint(formats strfmt.Registry) error {

	if swag.IsZero(m.AggregatedNodeEdgePoint) { // not required
		return nil
	}

	for i := 0; i < len(m.AggregatedNodeEdgePoint); i++ {
		if swag.IsZero(m.AggregatedNodeEdgePoint[i]) { // not required
			continue
		}

		if m.AggregatedNodeEdgePoint[i] != nil {
			if err := m.AggregatedNodeEdgePoint[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tapi-topology:node-edge-point" + "." + "aggregated-node-edge-point" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint) validateAvailableCapacity(formats strfmt.Registry) error {

	if swag.IsZero(m.AvailableCapacity) { // not required
		return nil
	}

	if m.AvailableCapacity != nil {
		if err := m.AvailableCapacity.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tapi-topology:node-edge-point" + "." + "available-capacity")
			}
			return err
		}
	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint) validateAvailableCepLayerProtocol(formats strfmt.Registry) error {

	if swag.IsZero(m.AvailableCepLayerProtocol) { // not required
		return nil
	}

	for i := 0; i < len(m.AvailableCepLayerProtocol); i++ {
		if swag.IsZero(m.AvailableCepLayerProtocol[i]) { // not required
			continue
		}

		if m.AvailableCepLayerProtocol[i] != nil {
			if err := m.AvailableCepLayerProtocol[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tapi-topology:node-edge-point" + "." + "available-cep-layer-protocol" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeLayerProtocolNamePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ODU","ETH","DSR","PHOTONIC_MEDIA"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeLayerProtocolNamePropEnum = append(operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeLayerProtocolNamePropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLayerProtocolNameODU captures enum value "ODU"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLayerProtocolNameODU string = "ODU"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLayerProtocolNameETH captures enum value "ETH"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLayerProtocolNameETH string = "ETH"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLayerProtocolNameDSR captures enum value "DSR"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLayerProtocolNameDSR string = "DSR"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLayerProtocolNamePHOTONICMEDIA captures enum value "PHOTONIC_MEDIA"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLayerProtocolNamePHOTONICMEDIA string = "PHOTONIC_MEDIA"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint) validateLayerProtocolNameEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeLayerProtocolNamePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint) validateLayerProtocolName(formats strfmt.Registry) error {

	if swag.IsZero(m.LayerProtocolName) { // not required
		return nil
	}

	// value enum
	if err := m.validateLayerProtocolNameEnum("tapi-topology:node-edge-point"+"."+"layer-protocol-name", "body", *m.LayerProtocolName); err != nil {
		return err
	}

	return nil
}

var operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeLifecycleStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PLANNED","POTENTIAL_AVAILABLE","POTENTIAL_BUSY","INSTALLED","PENDING_REMOVAL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeLifecycleStatePropEnum = append(operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeLifecycleStatePropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLifecycleStatePLANNED captures enum value "PLANNED"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLifecycleStatePLANNED string = "PLANNED"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLifecycleStatePOTENTIALAVAILABLE captures enum value "POTENTIAL_AVAILABLE"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLifecycleStatePOTENTIALAVAILABLE string = "POTENTIAL_AVAILABLE"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLifecycleStatePOTENTIALBUSY captures enum value "POTENTIAL_BUSY"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLifecycleStatePOTENTIALBUSY string = "POTENTIAL_BUSY"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLifecycleStateINSTALLED captures enum value "INSTALLED"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLifecycleStateINSTALLED string = "INSTALLED"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLifecycleStatePENDINGREMOVAL captures enum value "PENDING_REMOVAL"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLifecycleStatePENDINGREMOVAL string = "PENDING_REMOVAL"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint) validateLifecycleStateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeLifecycleStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint) validateLifecycleState(formats strfmt.Registry) error {

	if swag.IsZero(m.LifecycleState) { // not required
		return nil
	}

	// value enum
	if err := m.validateLifecycleStateEnum("tapi-topology:node-edge-point"+"."+"lifecycle-state", "body", *m.LifecycleState); err != nil {
		return err
	}

	return nil
}

var operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeLinkPortDirectionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["BIDIRECTIONAL","INPUT","OUTPUT","UNIDENTIFIED_OR_UNKNOWN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeLinkPortDirectionPropEnum = append(operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeLinkPortDirectionPropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLinkPortDirectionBIDIRECTIONAL captures enum value "BIDIRECTIONAL"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLinkPortDirectionBIDIRECTIONAL string = "BIDIRECTIONAL"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLinkPortDirectionINPUT captures enum value "INPUT"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLinkPortDirectionINPUT string = "INPUT"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLinkPortDirectionOUTPUT captures enum value "OUTPUT"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLinkPortDirectionOUTPUT string = "OUTPUT"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLinkPortDirectionUNIDENTIFIEDORUNKNOWN captures enum value "UNIDENTIFIED_OR_UNKNOWN"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLinkPortDirectionUNIDENTIFIEDORUNKNOWN string = "UNIDENTIFIED_OR_UNKNOWN"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint) validateLinkPortDirectionEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeLinkPortDirectionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint) validateLinkPortDirection(formats strfmt.Registry) error {

	if swag.IsZero(m.LinkPortDirection) { // not required
		return nil
	}

	// value enum
	if err := m.validateLinkPortDirectionEnum("tapi-topology:node-edge-point"+"."+"link-port-direction", "body", *m.LinkPortDirection); err != nil {
		return err
	}

	return nil
}

var operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeLinkPortRolePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["SYMMETRIC","ROOT","LEAF","TRUNK","UNKNOWN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeLinkPortRolePropEnum = append(operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeLinkPortRolePropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLinkPortRoleSYMMETRIC captures enum value "SYMMETRIC"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLinkPortRoleSYMMETRIC string = "SYMMETRIC"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLinkPortRoleROOT captures enum value "ROOT"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLinkPortRoleROOT string = "ROOT"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLinkPortRoleLEAF captures enum value "LEAF"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLinkPortRoleLEAF string = "LEAF"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLinkPortRoleTRUNK captures enum value "TRUNK"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLinkPortRoleTRUNK string = "TRUNK"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLinkPortRoleUNKNOWN captures enum value "UNKNOWN"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointLinkPortRoleUNKNOWN string = "UNKNOWN"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint) validateLinkPortRoleEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeLinkPortRolePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint) validateLinkPortRole(formats strfmt.Registry) error {

	if swag.IsZero(m.LinkPortRole) { // not required
		return nil
	}

	// value enum
	if err := m.validateLinkPortRoleEnum("tapi-topology:node-edge-point"+"."+"link-port-role", "body", *m.LinkPortRole); err != nil {
		return err
	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint) validateMappedServiceInterfacePoint(formats strfmt.Registry) error {

	if swag.IsZero(m.MappedServiceInterfacePoint) { // not required
		return nil
	}

	for i := 0; i < len(m.MappedServiceInterfacePoint); i++ {
		if swag.IsZero(m.MappedServiceInterfacePoint[i]) { // not required
			continue
		}

		if m.MappedServiceInterfacePoint[i] != nil {
			if err := m.MappedServiceInterfacePoint[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tapi-topology:node-edge-point" + "." + "mapped-service-interface-point" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint) validateName(formats strfmt.Registry) error {

	if swag.IsZero(m.Name) { // not required
		return nil
	}

	for i := 0; i < len(m.Name); i++ {
		if swag.IsZero(m.Name[i]) { // not required
			continue
		}

		if m.Name[i] != nil {
			if err := m.Name[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tapi-topology:node-edge-point" + "." + "name" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeOperationalStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DISABLED","ENABLED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeOperationalStatePropEnum = append(operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeOperationalStatePropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointOperationalStateDISABLED captures enum value "DISABLED"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointOperationalStateDISABLED string = "DISABLED"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointOperationalStateENABLED captures enum value "ENABLED"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointOperationalStateENABLED string = "ENABLED"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint) validateOperationalStateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeOperationalStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint) validateOperationalState(formats strfmt.Registry) error {

	if swag.IsZero(m.OperationalState) { // not required
		return nil
	}

	// value enum
	if err := m.validateOperationalStateEnum("tapi-topology:node-edge-point"+"."+"operational-state", "body", *m.OperationalState); err != nil {
		return err
	}

	return nil
}

var operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeTerminationDirectionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["BIDIRECTIONAL","SINK","SOURCE","UNDEFINED_OR_UNKNOWN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeTerminationDirectionPropEnum = append(operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeTerminationDirectionPropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTerminationDirectionBIDIRECTIONAL captures enum value "BIDIRECTIONAL"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTerminationDirectionBIDIRECTIONAL string = "BIDIRECTIONAL"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTerminationDirectionSINK captures enum value "SINK"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTerminationDirectionSINK string = "SINK"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTerminationDirectionSOURCE captures enum value "SOURCE"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTerminationDirectionSOURCE string = "SOURCE"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTerminationDirectionUNDEFINEDORUNKNOWN captures enum value "UNDEFINED_OR_UNKNOWN"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTerminationDirectionUNDEFINEDORUNKNOWN string = "UNDEFINED_OR_UNKNOWN"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint) validateTerminationDirectionEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeTerminationDirectionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint) validateTerminationDirection(formats strfmt.Registry) error {

	if swag.IsZero(m.TerminationDirection) { // not required
		return nil
	}

	// value enum
	if err := m.validateTerminationDirectionEnum("tapi-topology:node-edge-point"+"."+"termination-direction", "body", *m.TerminationDirection); err != nil {
		return err
	}

	return nil
}

var operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeTerminationStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["LP_CAN_NEVER_TERMINATE","LT_NOT_TERMINATED","TERMINATED_SERVER_TO_CLIENT_FLOW","TERMINATED_CLIENT_TO_SERVER_FLOW","TERMINATED_BIDIRECTIONAL","LT_PERMENANTLY_TERMINATED","TERMINATION_STATE_UNKNOWN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeTerminationStatePropEnum = append(operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeTerminationStatePropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTerminationStateLPCANNEVERTERMINATE captures enum value "LP_CAN_NEVER_TERMINATE"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTerminationStateLPCANNEVERTERMINATE string = "LP_CAN_NEVER_TERMINATE"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTerminationStateLTNOTTERMINATED captures enum value "LT_NOT_TERMINATED"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTerminationStateLTNOTTERMINATED string = "LT_NOT_TERMINATED"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTerminationStateTERMINATEDSERVERTOCLIENTFLOW captures enum value "TERMINATED_SERVER_TO_CLIENT_FLOW"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTerminationStateTERMINATEDSERVERTOCLIENTFLOW string = "TERMINATED_SERVER_TO_CLIENT_FLOW"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTerminationStateTERMINATEDCLIENTTOSERVERFLOW captures enum value "TERMINATED_CLIENT_TO_SERVER_FLOW"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTerminationStateTERMINATEDCLIENTTOSERVERFLOW string = "TERMINATED_CLIENT_TO_SERVER_FLOW"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTerminationStateTERMINATEDBIDIRECTIONAL captures enum value "TERMINATED_BIDIRECTIONAL"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTerminationStateTERMINATEDBIDIRECTIONAL string = "TERMINATED_BIDIRECTIONAL"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTerminationStateLTPERMENANTLYTERMINATED captures enum value "LT_PERMENANTLY_TERMINATED"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTerminationStateLTPERMENANTLYTERMINATED string = "LT_PERMENANTLY_TERMINATED"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTerminationStateTERMINATIONSTATEUNKNOWN captures enum value "TERMINATION_STATE_UNKNOWN"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTerminationStateTERMINATIONSTATEUNKNOWN string = "TERMINATION_STATE_UNKNOWN"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint) validateTerminationStateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTypeTerminationStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint) validateTerminationState(formats strfmt.Registry) error {

	if swag.IsZero(m.TerminationState) { // not required
		return nil
	}

	// value enum
	if err := m.validateTerminationStateEnum("tapi-topology:node-edge-point"+"."+"termination-state", "body", *m.TerminationState); err != nil {
		return err
	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint) validateTotalPotentialCapacity(formats strfmt.Registry) error {

	if swag.IsZero(m.TotalPotentialCapacity) { // not required
		return nil
	}

	if m.TotalPotentialCapacity != nil {
		if err := m.TotalPotentialCapacity.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tapi-topology:node-edge-point" + "." + "total-potential-capacity")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePoint
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAggregatedNodeEdgePointItems0 operations tapi topology get node edge point details post output tapi topology node edge point aggregated node edge point items0
// swagger:model OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAggregatedNodeEdgePointItems0
type OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAggregatedNodeEdgePointItems0 struct {

	// none (leaf)
	NodeEdgePointUUID string `json:"node-edge-point-uuid,omitempty"`

	// none (leaf)
	NodeUUID string `json:"node-uuid,omitempty"`

	// none (leaf)
	TopologyUUID string `json:"topology-uuid,omitempty"`
}

// Validate validates this operations tapi topology get node edge point details post output tapi topology node edge point aggregated node edge point items0
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAggregatedNodeEdgePointItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAggregatedNodeEdgePointItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAggregatedNodeEdgePointItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAggregatedNodeEdgePointItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacity Capacity available to be assigned. (non-presence)
// swagger:model OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacity
type OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacity struct {

	// total size
	TotalSize *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSize `json:"total-size,omitempty"`
}

// Validate validates this operations tapi topology get node edge point details post output tapi topology node edge point available capacity
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTotalSize(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacity) validateTotalSize(formats strfmt.Registry) error {

	if swag.IsZero(m.TotalSize) { // not required
		return nil
	}

	if m.TotalSize != nil {
		if err := m.TotalSize.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tapi-topology:node-edge-point" + "." + "available-capacity" + "." + "total-size")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacity) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSize Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)
// swagger:model OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSize
type OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSize struct {

	// none (leaf)
	// Enum: [TB TBPS GB GBPS MB MBPS KB KBPS GHz MHz]
	Unit *string `json:"unit,omitempty"`

	// none (leaf)
	Value uint64 `json:"value,omitempty"`
}

// Validate validates this operations tapi topology get node edge point details post output tapi topology node edge point available capacity total size
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSize) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUnit(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSizeTypeUnitPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["TB","TBPS","GB","GBPS","MB","MBPS","KB","KBPS","GHz","MHz"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSizeTypeUnitPropEnum = append(operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSizeTypeUnitPropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSizeUnitTB captures enum value "TB"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSizeUnitTB string = "TB"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSizeUnitTBPS captures enum value "TBPS"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSizeUnitTBPS string = "TBPS"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSizeUnitGB captures enum value "GB"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSizeUnitGB string = "GB"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSizeUnitGBPS captures enum value "GBPS"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSizeUnitGBPS string = "GBPS"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSizeUnitMB captures enum value "MB"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSizeUnitMB string = "MB"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSizeUnitMBPS captures enum value "MBPS"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSizeUnitMBPS string = "MBPS"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSizeUnitKB captures enum value "KB"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSizeUnitKB string = "KB"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSizeUnitKBPS captures enum value "KBPS"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSizeUnitKBPS string = "KBPS"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSizeUnitGHz captures enum value "GHz"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSizeUnitGHz string = "GHz"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSizeUnitMHz captures enum value "MHz"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSizeUnitMHz string = "MHz"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSize) validateUnitEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSizeTypeUnitPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSize) validateUnit(formats strfmt.Registry) error {

	if swag.IsZero(m.Unit) { // not required
		return nil
	}

	// value enum
	if err := m.validateUnitEnum("tapi-topology:node-edge-point"+"."+"available-capacity"+"."+"total-size"+"."+"unit", "body", *m.Unit); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSize) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSize) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCapacityTotalSize
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCepLayerProtocolItems0 operations tapi topology get node edge point details post output tapi topology node edge point available cep layer protocol items0
// swagger:model OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCepLayerProtocolItems0
type OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCepLayerProtocolItems0 struct {

	// none (leaf)
	LayerProtocolQualifier string `json:"layer-protocol-qualifier,omitempty"`

	// none (leaf)
	NumberOfCepInstances uint64 `json:"number-of-cep-instances,omitempty"`
}

// Validate validates this operations tapi topology get node edge point details post output tapi topology node edge point available cep layer protocol items0
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCepLayerProtocolItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCepLayerProtocolItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCepLayerProtocolItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointAvailableCepLayerProtocolItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointMappedServiceInterfacePointItems0 operations tapi topology get node edge point details post output tapi topology node edge point mapped service interface point items0
// swagger:model OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointMappedServiceInterfacePointItems0
type OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointMappedServiceInterfacePointItems0 struct {

	// none (leaf)
	ServiceInterfacePointUUID string `json:"service-interface-point-uuid,omitempty"`
}

// Validate validates this operations tapi topology get node edge point details post output tapi topology node edge point mapped service interface point items0
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointMappedServiceInterfacePointItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointMappedServiceInterfacePointItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointMappedServiceInterfacePointItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointMappedServiceInterfacePointItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointNameItems0 operations tapi topology get node edge point details post output tapi topology node edge point name items0
// swagger:model OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointNameItems0
type OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointNameItems0 struct {

	// The value (leaf)
	Value string `json:"value,omitempty"`

	// The name of the value. The value need not have a name. (leaf)
	ValueName string `json:"value-name,omitempty"`
}

// Validate validates this operations tapi topology get node edge point details post output tapi topology node edge point name items0
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointNameItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointNameItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointNameItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointNameItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacity An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)
// swagger:model OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacity
type OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacity struct {

	// total size
	TotalSize *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSize `json:"total-size,omitempty"`
}

// Validate validates this operations tapi topology get node edge point details post output tapi topology node edge point total potential capacity
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTotalSize(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacity) validateTotalSize(formats strfmt.Registry) error {

	if swag.IsZero(m.TotalSize) { // not required
		return nil
	}

	if m.TotalSize != nil {
		if err := m.TotalSize.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tapi-topology:node-edge-point" + "." + "total-potential-capacity" + "." + "total-size")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacity) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSize Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)
// swagger:model OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSize
type OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSize struct {

	// none (leaf)
	// Enum: [TB TBPS GB GBPS MB MBPS KB KBPS GHz MHz]
	Unit *string `json:"unit,omitempty"`

	// none (leaf)
	Value uint64 `json:"value,omitempty"`
}

// Validate validates this operations tapi topology get node edge point details post output tapi topology node edge point total potential capacity total size
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSize) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUnit(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSizeTypeUnitPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["TB","TBPS","GB","GBPS","MB","MBPS","KB","KBPS","GHz","MHz"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSizeTypeUnitPropEnum = append(operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSizeTypeUnitPropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSizeUnitTB captures enum value "TB"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSizeUnitTB string = "TB"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSizeUnitTBPS captures enum value "TBPS"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSizeUnitTBPS string = "TBPS"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSizeUnitGB captures enum value "GB"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSizeUnitGB string = "GB"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSizeUnitGBPS captures enum value "GBPS"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSizeUnitGBPS string = "GBPS"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSizeUnitMB captures enum value "MB"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSizeUnitMB string = "MB"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSizeUnitMBPS captures enum value "MBPS"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSizeUnitMBPS string = "MBPS"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSizeUnitKB captures enum value "KB"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSizeUnitKB string = "KB"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSizeUnitKBPS captures enum value "KBPS"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSizeUnitKBPS string = "KBPS"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSizeUnitGHz captures enum value "GHz"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSizeUnitGHz string = "GHz"

	// OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSizeUnitMHz captures enum value "MHz"
	OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSizeUnitMHz string = "MHz"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSize) validateUnitEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSizeTypeUnitPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSize) validateUnit(formats strfmt.Registry) error {

	if swag.IsZero(m.Unit) { // not required
		return nil
	}

	// value enum
	if err := m.validateUnitEnum("tapi-topology:node-edge-point"+"."+"total-potential-capacity"+"."+"total-size"+"."+"unit", "body", *m.Unit); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSize) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSize) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeEdgePointDetailsPostOutputTapiTopologyNodeEdgePointTotalPotentialCapacityTotalSize
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
