// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OperationsTapiConnectivityGetConnectionDetailsPostOutput operations tapi connectivity get connection details post output
// swagger:model operations_tapi-connectivity_get-connection-details-post-output
type OperationsTapiConnectivityGetConnectionDetailsPostOutput struct {

	// tapi connectivity connection
	TapiConnectivityConnection *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnection `json:"tapi-connectivity:connection,omitempty"`
}

// Validate validates this operations tapi connectivity get connection details post output
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTapiConnectivityConnection(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutput) validateTapiConnectivityConnection(formats strfmt.Registry) error {

	if swag.IsZero(m.TapiConnectivityConnection) { // not required
		return nil
	}

	if m.TapiConnectivityConnection != nil {
		if err := m.TapiConnectivityConnection.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tapi-connectivity:connection")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutput) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutput) UnmarshalBinary(b []byte) error {
	var res OperationsTapiConnectivityGetConnectionDetailsPostOutput
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnection none (non-presence)
// swagger:model OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnection
type OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnection struct {

	// bounding node
	BoundingNode *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionBoundingNode `json:"bounding-node,omitempty"`

	// none (list)
	ConnectionEndPoint []*OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionConnectionEndPointItems0 `json:"connection-end-point"`

	// none (leaf)
	// Enum: [BIDIRECTIONAL UNIDIRECTIONAL UNDEFINED_OR_UNKNOWN]
	Direction *string `json:"direction,omitempty"`

	// none (leaf)
	// Enum: [ODU ETH DSR PHOTONIC_MEDIA]
	LayerProtocolName *string `json:"layer-protocol-name,omitempty"`

	// none (leaf)
	// Enum: [PLANNED POTENTIAL_AVAILABLE POTENTIAL_BUSY INSTALLED PENDING_REMOVAL]
	LifecycleState *string `json:"lifecycle-state,omitempty"`

	// An Connection object supports a recursive aggregation relationship such that the internal construction of an Connection can be exposed as multiple lower level Connection objects (partitioning).
	// Aggregation is used as for the Node/Topology  to allow changes in hierarchy.
	// Connection aggregation reflects Node/Topology aggregation.
	// The FC represents a Cross-Connection in an NE. The Cross-Connection in an NE is not necessarily the lowest level of FC partitioning. (list)
	LowerConnection []*OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionLowerConnectionItems0 `json:"lower-connection"`

	// List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)
	Name []*OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionNameItems0 `json:"name"`

	// none (leaf)
	// Enum: [DISABLED ENABLED]
	OperationalState *string `json:"operational-state,omitempty"`

	// none (list)
	Route []*OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionRouteItems0 `json:"route"`

	// none (list)
	SupportedClientLink []*OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSupportedClientLinkItems0 `json:"supported-client-link"`

	// none (list)
	SwitchControl []*OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0 `json:"switch-control"`

	// UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.
	// UUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.
	// Pattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
	// Example of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)
	UUID string `json:"uuid,omitempty"`
}

// Validate validates this operations tapi connectivity get connection details post output tapi connectivity connection
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnection) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBoundingNode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateConnectionEndPoint(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDirection(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLayerProtocolName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLifecycleState(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLowerConnection(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOperationalState(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRoute(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSupportedClientLink(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSwitchControl(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnection) validateBoundingNode(formats strfmt.Registry) error {

	if swag.IsZero(m.BoundingNode) { // not required
		return nil
	}

	if m.BoundingNode != nil {
		if err := m.BoundingNode.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tapi-connectivity:connection" + "." + "bounding-node")
			}
			return err
		}
	}

	return nil
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnection) validateConnectionEndPoint(formats strfmt.Registry) error {

	if swag.IsZero(m.ConnectionEndPoint) { // not required
		return nil
	}

	for i := 0; i < len(m.ConnectionEndPoint); i++ {
		if swag.IsZero(m.ConnectionEndPoint[i]) { // not required
			continue
		}

		if m.ConnectionEndPoint[i] != nil {
			if err := m.ConnectionEndPoint[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tapi-connectivity:connection" + "." + "connection-end-point" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionTypeDirectionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["BIDIRECTIONAL","UNIDIRECTIONAL","UNDEFINED_OR_UNKNOWN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionTypeDirectionPropEnum = append(operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionTypeDirectionPropEnum, v)
	}
}

const (

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionDirectionBIDIRECTIONAL captures enum value "BIDIRECTIONAL"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionDirectionBIDIRECTIONAL string = "BIDIRECTIONAL"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionDirectionUNIDIRECTIONAL captures enum value "UNIDIRECTIONAL"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionDirectionUNIDIRECTIONAL string = "UNIDIRECTIONAL"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionDirectionUNDEFINEDORUNKNOWN captures enum value "UNDEFINED_OR_UNKNOWN"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionDirectionUNDEFINEDORUNKNOWN string = "UNDEFINED_OR_UNKNOWN"
)

// prop value enum
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnection) validateDirectionEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionTypeDirectionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnection) validateDirection(formats strfmt.Registry) error {

	if swag.IsZero(m.Direction) { // not required
		return nil
	}

	// value enum
	if err := m.validateDirectionEnum("tapi-connectivity:connection"+"."+"direction", "body", *m.Direction); err != nil {
		return err
	}

	return nil
}

var operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionTypeLayerProtocolNamePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ODU","ETH","DSR","PHOTONIC_MEDIA"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionTypeLayerProtocolNamePropEnum = append(operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionTypeLayerProtocolNamePropEnum, v)
	}
}

const (

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionLayerProtocolNameODU captures enum value "ODU"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionLayerProtocolNameODU string = "ODU"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionLayerProtocolNameETH captures enum value "ETH"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionLayerProtocolNameETH string = "ETH"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionLayerProtocolNameDSR captures enum value "DSR"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionLayerProtocolNameDSR string = "DSR"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionLayerProtocolNamePHOTONICMEDIA captures enum value "PHOTONIC_MEDIA"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionLayerProtocolNamePHOTONICMEDIA string = "PHOTONIC_MEDIA"
)

// prop value enum
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnection) validateLayerProtocolNameEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionTypeLayerProtocolNamePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnection) validateLayerProtocolName(formats strfmt.Registry) error {

	if swag.IsZero(m.LayerProtocolName) { // not required
		return nil
	}

	// value enum
	if err := m.validateLayerProtocolNameEnum("tapi-connectivity:connection"+"."+"layer-protocol-name", "body", *m.LayerProtocolName); err != nil {
		return err
	}

	return nil
}

var operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionTypeLifecycleStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PLANNED","POTENTIAL_AVAILABLE","POTENTIAL_BUSY","INSTALLED","PENDING_REMOVAL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionTypeLifecycleStatePropEnum = append(operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionTypeLifecycleStatePropEnum, v)
	}
}

const (

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionLifecycleStatePLANNED captures enum value "PLANNED"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionLifecycleStatePLANNED string = "PLANNED"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionLifecycleStatePOTENTIALAVAILABLE captures enum value "POTENTIAL_AVAILABLE"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionLifecycleStatePOTENTIALAVAILABLE string = "POTENTIAL_AVAILABLE"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionLifecycleStatePOTENTIALBUSY captures enum value "POTENTIAL_BUSY"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionLifecycleStatePOTENTIALBUSY string = "POTENTIAL_BUSY"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionLifecycleStateINSTALLED captures enum value "INSTALLED"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionLifecycleStateINSTALLED string = "INSTALLED"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionLifecycleStatePENDINGREMOVAL captures enum value "PENDING_REMOVAL"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionLifecycleStatePENDINGREMOVAL string = "PENDING_REMOVAL"
)

// prop value enum
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnection) validateLifecycleStateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionTypeLifecycleStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnection) validateLifecycleState(formats strfmt.Registry) error {

	if swag.IsZero(m.LifecycleState) { // not required
		return nil
	}

	// value enum
	if err := m.validateLifecycleStateEnum("tapi-connectivity:connection"+"."+"lifecycle-state", "body", *m.LifecycleState); err != nil {
		return err
	}

	return nil
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnection) validateLowerConnection(formats strfmt.Registry) error {

	if swag.IsZero(m.LowerConnection) { // not required
		return nil
	}

	for i := 0; i < len(m.LowerConnection); i++ {
		if swag.IsZero(m.LowerConnection[i]) { // not required
			continue
		}

		if m.LowerConnection[i] != nil {
			if err := m.LowerConnection[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tapi-connectivity:connection" + "." + "lower-connection" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnection) validateName(formats strfmt.Registry) error {

	if swag.IsZero(m.Name) { // not required
		return nil
	}

	for i := 0; i < len(m.Name); i++ {
		if swag.IsZero(m.Name[i]) { // not required
			continue
		}

		if m.Name[i] != nil {
			if err := m.Name[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tapi-connectivity:connection" + "." + "name" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionTypeOperationalStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DISABLED","ENABLED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionTypeOperationalStatePropEnum = append(operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionTypeOperationalStatePropEnum, v)
	}
}

const (

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionOperationalStateDISABLED captures enum value "DISABLED"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionOperationalStateDISABLED string = "DISABLED"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionOperationalStateENABLED captures enum value "ENABLED"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionOperationalStateENABLED string = "ENABLED"
)

// prop value enum
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnection) validateOperationalStateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionTypeOperationalStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnection) validateOperationalState(formats strfmt.Registry) error {

	if swag.IsZero(m.OperationalState) { // not required
		return nil
	}

	// value enum
	if err := m.validateOperationalStateEnum("tapi-connectivity:connection"+"."+"operational-state", "body", *m.OperationalState); err != nil {
		return err
	}

	return nil
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnection) validateRoute(formats strfmt.Registry) error {

	if swag.IsZero(m.Route) { // not required
		return nil
	}

	for i := 0; i < len(m.Route); i++ {
		if swag.IsZero(m.Route[i]) { // not required
			continue
		}

		if m.Route[i] != nil {
			if err := m.Route[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tapi-connectivity:connection" + "." + "route" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnection) validateSupportedClientLink(formats strfmt.Registry) error {

	if swag.IsZero(m.SupportedClientLink) { // not required
		return nil
	}

	for i := 0; i < len(m.SupportedClientLink); i++ {
		if swag.IsZero(m.SupportedClientLink[i]) { // not required
			continue
		}

		if m.SupportedClientLink[i] != nil {
			if err := m.SupportedClientLink[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tapi-connectivity:connection" + "." + "supported-client-link" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnection) validateSwitchControl(formats strfmt.Registry) error {

	if swag.IsZero(m.SwitchControl) { // not required
		return nil
	}

	for i := 0; i < len(m.SwitchControl); i++ {
		if swag.IsZero(m.SwitchControl[i]) { // not required
			continue
		}

		if m.SwitchControl[i] != nil {
			if err := m.SwitchControl[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tapi-connectivity:connection" + "." + "switch-control" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnection) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnection) UnmarshalBinary(b []byte) error {
	var res OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnection
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionBoundingNode none (non-presence)
// swagger:model OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionBoundingNode
type OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionBoundingNode struct {

	// none (leaf)
	NodeUUID string `json:"node-uuid,omitempty"`

	// none (leaf)
	TopologyUUID string `json:"topology-uuid,omitempty"`
}

// Validate validates this operations tapi connectivity get connection details post output tapi connectivity connection bounding node
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionBoundingNode) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionBoundingNode) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionBoundingNode) UnmarshalBinary(b []byte) error {
	var res OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionBoundingNode
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionConnectionEndPointItems0 operations tapi connectivity get connection details post output tapi connectivity connection connection end point items0
// swagger:model OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionConnectionEndPointItems0
type OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionConnectionEndPointItems0 struct {

	// none (leaf)
	ConnectionEndPointUUID string `json:"connection-end-point-uuid,omitempty"`

	// none (leaf)
	NodeEdgePointUUID string `json:"node-edge-point-uuid,omitempty"`

	// none (leaf)
	NodeUUID string `json:"node-uuid,omitempty"`

	// none (leaf)
	TopologyUUID string `json:"topology-uuid,omitempty"`
}

// Validate validates this operations tapi connectivity get connection details post output tapi connectivity connection connection end point items0
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionConnectionEndPointItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionConnectionEndPointItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionConnectionEndPointItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionConnectionEndPointItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionLowerConnectionItems0 operations tapi connectivity get connection details post output tapi connectivity connection lower connection items0
// swagger:model OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionLowerConnectionItems0
type OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionLowerConnectionItems0 struct {

	// none (leaf)
	ConnectionUUID string `json:"connection-uuid,omitempty"`
}

// Validate validates this operations tapi connectivity get connection details post output tapi connectivity connection lower connection items0
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionLowerConnectionItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionLowerConnectionItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionLowerConnectionItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionLowerConnectionItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionNameItems0 operations tapi connectivity get connection details post output tapi connectivity connection name items0
// swagger:model OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionNameItems0
type OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionNameItems0 struct {

	// The value (leaf)
	Value string `json:"value,omitempty"`

	// The name of the value. The value need not have a name. (leaf)
	ValueName string `json:"value-name,omitempty"`
}

// Validate validates this operations tapi connectivity get connection details post output tapi connectivity connection name items0
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionNameItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionNameItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionNameItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionNameItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionRouteItems0 operations tapi connectivity get connection details post output tapi connectivity connection route items0
// swagger:model OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionRouteItems0
type OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionRouteItems0 struct {

	// none (list)
	ConnectionEndPoint []*OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionRouteItems0ConnectionEndPointItems0 `json:"connection-end-point"`

	// none (leaf)
	LocalID string `json:"local-id,omitempty"`

	// List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)
	Name []*OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionRouteItems0NameItems0 `json:"name"`
}

// Validate validates this operations tapi connectivity get connection details post output tapi connectivity connection route items0
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionRouteItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateConnectionEndPoint(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionRouteItems0) validateConnectionEndPoint(formats strfmt.Registry) error {

	if swag.IsZero(m.ConnectionEndPoint) { // not required
		return nil
	}

	for i := 0; i < len(m.ConnectionEndPoint); i++ {
		if swag.IsZero(m.ConnectionEndPoint[i]) { // not required
			continue
		}

		if m.ConnectionEndPoint[i] != nil {
			if err := m.ConnectionEndPoint[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("connection-end-point" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionRouteItems0) validateName(formats strfmt.Registry) error {

	if swag.IsZero(m.Name) { // not required
		return nil
	}

	for i := 0; i < len(m.Name); i++ {
		if swag.IsZero(m.Name[i]) { // not required
			continue
		}

		if m.Name[i] != nil {
			if err := m.Name[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("name" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionRouteItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionRouteItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionRouteItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionRouteItems0ConnectionEndPointItems0 operations tapi connectivity get connection details post output tapi connectivity connection route items0 connection end point items0
// swagger:model OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionRouteItems0ConnectionEndPointItems0
type OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionRouteItems0ConnectionEndPointItems0 struct {

	// none (leaf)
	ConnectionEndPointUUID string `json:"connection-end-point-uuid,omitempty"`

	// none (leaf)
	NodeEdgePointUUID string `json:"node-edge-point-uuid,omitempty"`

	// none (leaf)
	NodeUUID string `json:"node-uuid,omitempty"`

	// none (leaf)
	TopologyUUID string `json:"topology-uuid,omitempty"`
}

// Validate validates this operations tapi connectivity get connection details post output tapi connectivity connection route items0 connection end point items0
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionRouteItems0ConnectionEndPointItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionRouteItems0ConnectionEndPointItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionRouteItems0ConnectionEndPointItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionRouteItems0ConnectionEndPointItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionRouteItems0NameItems0 operations tapi connectivity get connection details post output tapi connectivity connection route items0 name items0
// swagger:model OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionRouteItems0NameItems0
type OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionRouteItems0NameItems0 struct {

	// The value (leaf)
	Value string `json:"value,omitempty"`

	// The name of the value. The value need not have a name. (leaf)
	ValueName string `json:"value-name,omitempty"`
}

// Validate validates this operations tapi connectivity get connection details post output tapi connectivity connection route items0 name items0
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionRouteItems0NameItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionRouteItems0NameItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionRouteItems0NameItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionRouteItems0NameItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSupportedClientLinkItems0 operations tapi connectivity get connection details post output tapi connectivity connection supported client link items0
// swagger:model OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSupportedClientLinkItems0
type OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSupportedClientLinkItems0 struct {

	// none (leaf)
	LinkUUID string `json:"link-uuid,omitempty"`

	// none (leaf)
	TopologyUUID string `json:"topology-uuid,omitempty"`
}

// Validate validates this operations tapi connectivity get connection details post output tapi connectivity connection supported client link items0
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSupportedClientLinkItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSupportedClientLinkItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSupportedClientLinkItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSupportedClientLinkItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0 operations tapi connectivity get connection details post output tapi connectivity connection switch control items0
// swagger:model OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0
type OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0 struct {

	// none (leaf)
	FaultConditionDetermination string `json:"fault-condition-determination,omitempty"`

	// This attribute indicates the time, in milliseconds, between declaration of signal degrade or signal fail, and the initialization of the protection switching algorithm. (leaf)
	HoldOffTime uint64 `json:"hold-off-time,omitempty"`

	// Is operating such that switching at both ends of each flow acorss the FC is coordinated at both ingress and egress ends. (leaf)
	IsCoordinatedSwitchingBothEnds bool `json:"is-coordinated-switching-both-ends,omitempty"`

	// Temporarily prevents any switch action to be taken and, as such, freezes the current state.
	// Until the freeze is cleared, additional near-end external commands are rejected and fault condition changes and received APS messages are ignored.
	// All administrative controls of any aspect of protection are rejected. (leaf)
	IsFrozen bool `json:"is-frozen,omitempty"`

	// The resource is configured to temporarily not be available for use in the protection scheme(s) it is part of.
	// This overrides all other protection control states including forced.
	// If the item is locked out then it cannot be used under any circumstances.
	// Note: Only relevant when part of a protection scheme. (leaf)
	IsLockOut bool `json:"is-lock-out,omitempty"`

	// Used to limit the maximum swtich times. When work fault disappears , and traffic return to the original work path, switch counter reset. (leaf)
	MaxSwitchTimes uint64 `json:"max-switch-times,omitempty"`

	// List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)
	Name []*OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0NameItems0 `json:"name"`

	// preferred restoration layer
	PreferredRestorationLayer []*string `json:"preferred-restoration-layer"`

	// none (leaf)
	// Enum: [NO_PROTECTION ONE_PLUS_ONE_PROTECTION ONE_FOR_ONE_PROTECTION ONE_FOR_N_PROTECTION M_FOR_N_PROTECTION ONE_FOR_ONE_BY_N]
	ProtectionType *string `json:"protection-type,omitempty"`

	//  The coordination mechanism between multi-layers. (leaf)
	// Enum: [NO_COORDINATE HOLD_OFF_TIME WAIT_FOR_NOTIFICATION]
	RestorationCoordinateType *string `json:"restoration-coordinate-type,omitempty"`

	// none (leaf)
	// Enum: [PER_DOMAIN_RESTORATION END_TO_END_RESTORATION NA DYNAMIC_RESTORATION PRE_COMPUTED_RESTORATION]
	RestorationPolicy *string `json:"restoration-policy,omitempty"`

	// none (leaf)
	RestorePriority uint64 `json:"restore-priority,omitempty"`

	// Indcates whether the protection scheme is revertive or non-revertive. (leaf)
	// Enum: [REVERTIVE NON-REVERTIVE]
	ReversionMode *string `json:"reversion-mode,omitempty"`

	// Degree of administrative control applied to the switch selection. (leaf)
	// Enum: [LOCK_OUT NORMAL MANUAL FORCED]
	SelectionControl *string `json:"selection-control,omitempty"`

	// none (list)
	SubSwitchControl []*OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SubSwitchControlItems0 `json:"sub-switch-control"`

	// none (list)
	Switch []*OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0 `json:"switch"`

	// UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.
	// UUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.
	// Pattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
	// Example of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)
	UUID string `json:"uuid,omitempty"`

	// If the protection system is revertive, this attribute specifies the time, in minutes, to wait after a fault clears on a higher priority (preferred) resource before reverting to the preferred resource. (leaf)
	WaitToRevertTime uint64 `json:"wait-to-revert-time,omitempty"`
}

// Validate validates this operations tapi connectivity get connection details post output tapi connectivity connection switch control items0
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePreferredRestorationLayer(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProtectionType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRestorationCoordinateType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRestorationPolicy(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateReversionMode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSelectionControl(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSubSwitchControl(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSwitch(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0) validateName(formats strfmt.Registry) error {

	if swag.IsZero(m.Name) { // not required
		return nil
	}

	for i := 0; i < len(m.Name); i++ {
		if swag.IsZero(m.Name[i]) { // not required
			continue
		}

		if m.Name[i] != nil {
			if err := m.Name[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("name" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0PreferredRestorationLayerItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ODU","ETH","DSR","PHOTONIC_MEDIA"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0PreferredRestorationLayerItemsEnum = append(operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0PreferredRestorationLayerItemsEnum, v)
	}
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0) validatePreferredRestorationLayerItemsEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0PreferredRestorationLayerItemsEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0) validatePreferredRestorationLayer(formats strfmt.Registry) error {

	if swag.IsZero(m.PreferredRestorationLayer) { // not required
		return nil
	}

	for i := 0; i < len(m.PreferredRestorationLayer); i++ {
		if swag.IsZero(m.PreferredRestorationLayer[i]) { // not required
			continue
		}

		// value enum
		if err := m.validatePreferredRestorationLayerItemsEnum("preferred-restoration-layer"+"."+strconv.Itoa(i), "body", *m.PreferredRestorationLayer[i]); err != nil {
			return err
		}

	}

	return nil
}

var operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0TypeProtectionTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["NO_PROTECTION","ONE_PLUS_ONE_PROTECTION","ONE_FOR_ONE_PROTECTION","ONE_FOR_N_PROTECTION","M_FOR_N_PROTECTION","ONE_FOR_ONE_BY_N"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0TypeProtectionTypePropEnum = append(operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0TypeProtectionTypePropEnum, v)
	}
}

const (

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0ProtectionTypeNOPROTECTION captures enum value "NO_PROTECTION"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0ProtectionTypeNOPROTECTION string = "NO_PROTECTION"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0ProtectionTypeONEPLUSONEPROTECTION captures enum value "ONE_PLUS_ONE_PROTECTION"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0ProtectionTypeONEPLUSONEPROTECTION string = "ONE_PLUS_ONE_PROTECTION"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0ProtectionTypeONEFORONEPROTECTION captures enum value "ONE_FOR_ONE_PROTECTION"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0ProtectionTypeONEFORONEPROTECTION string = "ONE_FOR_ONE_PROTECTION"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0ProtectionTypeONEFORNPROTECTION captures enum value "ONE_FOR_N_PROTECTION"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0ProtectionTypeONEFORNPROTECTION string = "ONE_FOR_N_PROTECTION"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0ProtectionTypeMFORNPROTECTION captures enum value "M_FOR_N_PROTECTION"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0ProtectionTypeMFORNPROTECTION string = "M_FOR_N_PROTECTION"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0ProtectionTypeONEFORONEBYN captures enum value "ONE_FOR_ONE_BY_N"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0ProtectionTypeONEFORONEBYN string = "ONE_FOR_ONE_BY_N"
)

// prop value enum
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0) validateProtectionTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0TypeProtectionTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0) validateProtectionType(formats strfmt.Registry) error {

	if swag.IsZero(m.ProtectionType) { // not required
		return nil
	}

	// value enum
	if err := m.validateProtectionTypeEnum("protection-type", "body", *m.ProtectionType); err != nil {
		return err
	}

	return nil
}

var operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0TypeRestorationCoordinateTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["NO_COORDINATE","HOLD_OFF_TIME","WAIT_FOR_NOTIFICATION"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0TypeRestorationCoordinateTypePropEnum = append(operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0TypeRestorationCoordinateTypePropEnum, v)
	}
}

const (

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0RestorationCoordinateTypeNOCOORDINATE captures enum value "NO_COORDINATE"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0RestorationCoordinateTypeNOCOORDINATE string = "NO_COORDINATE"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0RestorationCoordinateTypeHOLDOFFTIME captures enum value "HOLD_OFF_TIME"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0RestorationCoordinateTypeHOLDOFFTIME string = "HOLD_OFF_TIME"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0RestorationCoordinateTypeWAITFORNOTIFICATION captures enum value "WAIT_FOR_NOTIFICATION"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0RestorationCoordinateTypeWAITFORNOTIFICATION string = "WAIT_FOR_NOTIFICATION"
)

// prop value enum
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0) validateRestorationCoordinateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0TypeRestorationCoordinateTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0) validateRestorationCoordinateType(formats strfmt.Registry) error {

	if swag.IsZero(m.RestorationCoordinateType) { // not required
		return nil
	}

	// value enum
	if err := m.validateRestorationCoordinateTypeEnum("restoration-coordinate-type", "body", *m.RestorationCoordinateType); err != nil {
		return err
	}

	return nil
}

var operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0TypeRestorationPolicyPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PER_DOMAIN_RESTORATION","END_TO_END_RESTORATION","NA","DYNAMIC_RESTORATION","PRE_COMPUTED_RESTORATION"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0TypeRestorationPolicyPropEnum = append(operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0TypeRestorationPolicyPropEnum, v)
	}
}

const (

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0RestorationPolicyPERDOMAINRESTORATION captures enum value "PER_DOMAIN_RESTORATION"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0RestorationPolicyPERDOMAINRESTORATION string = "PER_DOMAIN_RESTORATION"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0RestorationPolicyENDTOENDRESTORATION captures enum value "END_TO_END_RESTORATION"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0RestorationPolicyENDTOENDRESTORATION string = "END_TO_END_RESTORATION"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0RestorationPolicyNA captures enum value "NA"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0RestorationPolicyNA string = "NA"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0RestorationPolicyDYNAMICRESTORATION captures enum value "DYNAMIC_RESTORATION"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0RestorationPolicyDYNAMICRESTORATION string = "DYNAMIC_RESTORATION"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0RestorationPolicyPRECOMPUTEDRESTORATION captures enum value "PRE_COMPUTED_RESTORATION"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0RestorationPolicyPRECOMPUTEDRESTORATION string = "PRE_COMPUTED_RESTORATION"
)

// prop value enum
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0) validateRestorationPolicyEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0TypeRestorationPolicyPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0) validateRestorationPolicy(formats strfmt.Registry) error {

	if swag.IsZero(m.RestorationPolicy) { // not required
		return nil
	}

	// value enum
	if err := m.validateRestorationPolicyEnum("restoration-policy", "body", *m.RestorationPolicy); err != nil {
		return err
	}

	return nil
}

var operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0TypeReversionModePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["REVERTIVE","NON-REVERTIVE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0TypeReversionModePropEnum = append(operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0TypeReversionModePropEnum, v)
	}
}

const (

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0ReversionModeREVERTIVE captures enum value "REVERTIVE"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0ReversionModeREVERTIVE string = "REVERTIVE"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0ReversionModeNONREVERTIVE captures enum value "NON-REVERTIVE"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0ReversionModeNONREVERTIVE string = "NON-REVERTIVE"
)

// prop value enum
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0) validateReversionModeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0TypeReversionModePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0) validateReversionMode(formats strfmt.Registry) error {

	if swag.IsZero(m.ReversionMode) { // not required
		return nil
	}

	// value enum
	if err := m.validateReversionModeEnum("reversion-mode", "body", *m.ReversionMode); err != nil {
		return err
	}

	return nil
}

var operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0TypeSelectionControlPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["LOCK_OUT","NORMAL","MANUAL","FORCED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0TypeSelectionControlPropEnum = append(operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0TypeSelectionControlPropEnum, v)
	}
}

const (

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SelectionControlLOCKOUT captures enum value "LOCK_OUT"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SelectionControlLOCKOUT string = "LOCK_OUT"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SelectionControlNORMAL captures enum value "NORMAL"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SelectionControlNORMAL string = "NORMAL"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SelectionControlMANUAL captures enum value "MANUAL"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SelectionControlMANUAL string = "MANUAL"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SelectionControlFORCED captures enum value "FORCED"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SelectionControlFORCED string = "FORCED"
)

// prop value enum
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0) validateSelectionControlEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0TypeSelectionControlPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0) validateSelectionControl(formats strfmt.Registry) error {

	if swag.IsZero(m.SelectionControl) { // not required
		return nil
	}

	// value enum
	if err := m.validateSelectionControlEnum("selection-control", "body", *m.SelectionControl); err != nil {
		return err
	}

	return nil
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0) validateSubSwitchControl(formats strfmt.Registry) error {

	if swag.IsZero(m.SubSwitchControl) { // not required
		return nil
	}

	for i := 0; i < len(m.SubSwitchControl); i++ {
		if swag.IsZero(m.SubSwitchControl[i]) { // not required
			continue
		}

		if m.SubSwitchControl[i] != nil {
			if err := m.SubSwitchControl[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("sub-switch-control" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0) validateSwitch(formats strfmt.Registry) error {

	if swag.IsZero(m.Switch) { // not required
		return nil
	}

	for i := 0; i < len(m.Switch); i++ {
		if swag.IsZero(m.Switch[i]) { // not required
			continue
		}

		if m.Switch[i] != nil {
			if err := m.Switch[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("switch" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0NameItems0 operations tapi connectivity get connection details post output tapi connectivity connection switch control items0 name items0
// swagger:model OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0NameItems0
type OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0NameItems0 struct {

	// The value (leaf)
	Value string `json:"value,omitempty"`

	// The name of the value. The value need not have a name. (leaf)
	ValueName string `json:"value-name,omitempty"`
}

// Validate validates this operations tapi connectivity get connection details post output tapi connectivity connection switch control items0 name items0
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0NameItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0NameItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0NameItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0NameItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SubSwitchControlItems0 operations tapi connectivity get connection details post output tapi connectivity connection switch control items0 sub switch control items0
// swagger:model OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SubSwitchControlItems0
type OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SubSwitchControlItems0 struct {

	// none (leaf)
	ConnectionUUID string `json:"connection-uuid,omitempty"`

	// none (leaf)
	SwitchControlUUID string `json:"switch-control-uuid,omitempty"`
}

// Validate validates this operations tapi connectivity get connection details post output tapi connectivity connection switch control items0 sub switch control items0
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SubSwitchControlItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SubSwitchControlItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SubSwitchControlItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SubSwitchControlItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0 operations tapi connectivity get connection details post output tapi connectivity connection switch control items0 switch items0
// swagger:model OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0
type OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0 struct {

	// none (leaf)
	LocalID string `json:"local-id,omitempty"`

	// List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)
	Name []*OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0NameItems0 `json:"name"`

	// none (list)
	SelectedConnectionEndPoint []*OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectedConnectionEndPointItems0 `json:"selected-connection-end-point"`

	// none (list)
	SelectedRoute []*OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectedRouteItems0 `json:"selected-route"`

	// The reason for the current switch selection. (leaf)
	// Enum: [LOCKOUT NORMAL MANUAL FORCED WAIT_TO_REVERT SIGNAL_DEGRADE SIGNAL_FAIL]
	SelectionReason *string `json:"selection-reason,omitempty"`

	// Indicates whether the switch selects from ingress to the FC or to egress of the FC, or both. (leaf)
	// Enum: [BIDIRECTIONAL INPUT OUTPUT UNIDENTIFIED_OR_UNKNOWN]
	SwitchDirection *string `json:"switch-direction,omitempty"`
}

// Validate validates this operations tapi connectivity get connection details post output tapi connectivity connection switch control items0 switch items0
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSelectedConnectionEndPoint(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSelectedRoute(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSelectionReason(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSwitchDirection(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0) validateName(formats strfmt.Registry) error {

	if swag.IsZero(m.Name) { // not required
		return nil
	}

	for i := 0; i < len(m.Name); i++ {
		if swag.IsZero(m.Name[i]) { // not required
			continue
		}

		if m.Name[i] != nil {
			if err := m.Name[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("name" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0) validateSelectedConnectionEndPoint(formats strfmt.Registry) error {

	if swag.IsZero(m.SelectedConnectionEndPoint) { // not required
		return nil
	}

	for i := 0; i < len(m.SelectedConnectionEndPoint); i++ {
		if swag.IsZero(m.SelectedConnectionEndPoint[i]) { // not required
			continue
		}

		if m.SelectedConnectionEndPoint[i] != nil {
			if err := m.SelectedConnectionEndPoint[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("selected-connection-end-point" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0) validateSelectedRoute(formats strfmt.Registry) error {

	if swag.IsZero(m.SelectedRoute) { // not required
		return nil
	}

	for i := 0; i < len(m.SelectedRoute); i++ {
		if swag.IsZero(m.SelectedRoute[i]) { // not required
			continue
		}

		if m.SelectedRoute[i] != nil {
			if err := m.SelectedRoute[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("selected-route" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0TypeSelectionReasonPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["LOCKOUT","NORMAL","MANUAL","FORCED","WAIT_TO_REVERT","SIGNAL_DEGRADE","SIGNAL_FAIL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0TypeSelectionReasonPropEnum = append(operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0TypeSelectionReasonPropEnum, v)
	}
}

const (

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectionReasonLOCKOUT captures enum value "LOCKOUT"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectionReasonLOCKOUT string = "LOCKOUT"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectionReasonNORMAL captures enum value "NORMAL"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectionReasonNORMAL string = "NORMAL"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectionReasonMANUAL captures enum value "MANUAL"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectionReasonMANUAL string = "MANUAL"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectionReasonFORCED captures enum value "FORCED"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectionReasonFORCED string = "FORCED"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectionReasonWAITTOREVERT captures enum value "WAIT_TO_REVERT"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectionReasonWAITTOREVERT string = "WAIT_TO_REVERT"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectionReasonSIGNALDEGRADE captures enum value "SIGNAL_DEGRADE"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectionReasonSIGNALDEGRADE string = "SIGNAL_DEGRADE"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectionReasonSIGNALFAIL captures enum value "SIGNAL_FAIL"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectionReasonSIGNALFAIL string = "SIGNAL_FAIL"
)

// prop value enum
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0) validateSelectionReasonEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0TypeSelectionReasonPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0) validateSelectionReason(formats strfmt.Registry) error {

	if swag.IsZero(m.SelectionReason) { // not required
		return nil
	}

	// value enum
	if err := m.validateSelectionReasonEnum("selection-reason", "body", *m.SelectionReason); err != nil {
		return err
	}

	return nil
}

var operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0TypeSwitchDirectionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["BIDIRECTIONAL","INPUT","OUTPUT","UNIDENTIFIED_OR_UNKNOWN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0TypeSwitchDirectionPropEnum = append(operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0TypeSwitchDirectionPropEnum, v)
	}
}

const (

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SwitchDirectionBIDIRECTIONAL captures enum value "BIDIRECTIONAL"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SwitchDirectionBIDIRECTIONAL string = "BIDIRECTIONAL"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SwitchDirectionINPUT captures enum value "INPUT"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SwitchDirectionINPUT string = "INPUT"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SwitchDirectionOUTPUT captures enum value "OUTPUT"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SwitchDirectionOUTPUT string = "OUTPUT"

	// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SwitchDirectionUNIDENTIFIEDORUNKNOWN captures enum value "UNIDENTIFIED_OR_UNKNOWN"
	OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SwitchDirectionUNIDENTIFIEDORUNKNOWN string = "UNIDENTIFIED_OR_UNKNOWN"
)

// prop value enum
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0) validateSwitchDirectionEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0TypeSwitchDirectionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0) validateSwitchDirection(formats strfmt.Registry) error {

	if swag.IsZero(m.SwitchDirection) { // not required
		return nil
	}

	// value enum
	if err := m.validateSwitchDirectionEnum("switch-direction", "body", *m.SwitchDirection); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0NameItems0 operations tapi connectivity get connection details post output tapi connectivity connection switch control items0 switch items0 name items0
// swagger:model OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0NameItems0
type OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0NameItems0 struct {

	// The value (leaf)
	Value string `json:"value,omitempty"`

	// The name of the value. The value need not have a name. (leaf)
	ValueName string `json:"value-name,omitempty"`
}

// Validate validates this operations tapi connectivity get connection details post output tapi connectivity connection switch control items0 switch items0 name items0
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0NameItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0NameItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0NameItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0NameItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectedConnectionEndPointItems0 operations tapi connectivity get connection details post output tapi connectivity connection switch control items0 switch items0 selected connection end point items0
// swagger:model OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectedConnectionEndPointItems0
type OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectedConnectionEndPointItems0 struct {

	// none (leaf)
	ConnectionEndPointUUID string `json:"connection-end-point-uuid,omitempty"`

	// none (leaf)
	NodeEdgePointUUID string `json:"node-edge-point-uuid,omitempty"`

	// none (leaf)
	NodeUUID string `json:"node-uuid,omitempty"`

	// none (leaf)
	TopologyUUID string `json:"topology-uuid,omitempty"`
}

// Validate validates this operations tapi connectivity get connection details post output tapi connectivity connection switch control items0 switch items0 selected connection end point items0
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectedConnectionEndPointItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectedConnectionEndPointItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectedConnectionEndPointItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectedConnectionEndPointItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectedRouteItems0 operations tapi connectivity get connection details post output tapi connectivity connection switch control items0 switch items0 selected route items0
// swagger:model OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectedRouteItems0
type OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectedRouteItems0 struct {

	// none (leaf)
	ConnectionUUID string `json:"connection-uuid,omitempty"`

	// none (leaf)
	RouteLocalID string `json:"route-local-id,omitempty"`
}

// Validate validates this operations tapi connectivity get connection details post output tapi connectivity connection switch control items0 switch items0 selected route items0
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectedRouteItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectedRouteItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectedRouteItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiConnectivityGetConnectionDetailsPostOutputTapiConnectivityConnectionSwitchControlItems0SwitchItems0SelectedRouteItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
