// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OperationsTapiTopologyGetNodeDetailsPostOutput operations tapi topology get node details post output
// swagger:model operations_tapi-topology_get-node-details-post-output
type OperationsTapiTopologyGetNodeDetailsPostOutput struct {

	// tapi topology node
	TapiTopologyNode *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNode `json:"tapi-topology:node,omitempty"`
}

// Validate validates this operations tapi topology get node details post output
func (m *OperationsTapiTopologyGetNodeDetailsPostOutput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTapiTopologyNode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutput) validateTapiTopologyNode(formats strfmt.Registry) error {

	if swag.IsZero(m.TapiTopologyNode) { // not required
		return nil
	}

	if m.TapiTopologyNode != nil {
		if err := m.TapiTopologyNode.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tapi-topology:node")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutput) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutput) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutput
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNode none (non-presence)
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNode
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNode struct {

	// none (leaf)
	// Enum: [LOCKED UNLOCKED]
	AdministrativeState *string `json:"administrative-state,omitempty"`

	// none (list)
	AggregatedNodeEdgePoint []*OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAggregatedNodeEdgePointItems0 `json:"aggregated-node-edge-point"`

	// available capacity
	AvailableCapacity *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacity `json:"available-capacity,omitempty"`

	// The list of costs where each cost relates to some aspect of the TopologicalEntity. (list)
	CostCharacteristic []*OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeCostCharacteristicItems0 `json:"cost-characteristic"`

	// Describes the degree to which packets will be delivered out of sequence.
	// Does not apply to TDM as the TDM protocols maintain strict order. (leaf)
	DeliveryOrderCharacteristic string `json:"delivery-order-characteristic,omitempty"`

	// encap topology
	EncapTopology *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeEncapTopology `json:"encap-topology,omitempty"`

	// Describes the degree to which the signal propagated can be errored.
	// Applies to TDM systems as the errored signal will be propagated and not packet as errored packets will be discarded. (leaf)
	ErrorCharacteristic string `json:"error-characteristic,omitempty"`

	// The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic. (list)
	LatencyCharacteristic []*OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeLatencyCharacteristicItems0 `json:"latency-characteristic"`

	// layer protocol name
	LayerProtocolName []*string `json:"layer-protocol-name"`

	// none (leaf)
	// Enum: [PLANNED POTENTIAL_AVAILABLE POTENTIAL_BUSY INSTALLED PENDING_REMOVAL]
	LifecycleState *string `json:"lifecycle-state,omitempty"`

	// Describes the acceptable characteristic of lost packets where loss may result from discard due to errors or overflow.
	// Applies to packet systems and not TDM (as for TDM errored signals are propagated unless grossly errored and overflow/underflow turns into timing slips). (leaf)
	LossCharacteristic string `json:"loss-characteristic,omitempty"`

	// List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)
	Name []*OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNameItems0 `json:"name"`

	// none (list)
	NodeEdgePoint []*OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0 `json:"node-edge-point"`

	// none (list)
	NodeRuleGroup []*OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0 `json:"node-rule-group"`

	// none (leaf)
	// Enum: [DISABLED ENABLED]
	OperationalState *string `json:"operational-state,omitempty"`

	// Primarily applies to packet systems where a packet may be delivered more than once (in fault recovery for example).
	// It can also apply to TDM where several frames may be received twice due to switching in a system with a large differential propagation delay. (leaf)
	RepeatDeliveryCharacteristic string `json:"repeat-delivery-characteristic,omitempty"`

	// Describes the effect of any server integrity enhancement process on the characteristics of the TopologicalEntity. (leaf)
	ServerIntegrityProcessCharacteristic string `json:"server-integrity-process-characteristic,omitempty"`

	// total potential capacity
	TotalPotentialCapacity *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacity `json:"total-potential-capacity,omitempty"`

	// Describes the duration for which there may be no valid signal propagated. (leaf)
	UnavailableTimeCharacteristic string `json:"unavailable-time-characteristic,omitempty"`

	// UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.
	// UUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.
	// Pattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
	// Example of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)
	UUID string `json:"uuid,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNode) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAdministrativeState(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAggregatedNodeEdgePoint(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAvailableCapacity(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCostCharacteristic(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEncapTopology(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLatencyCharacteristic(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLayerProtocolName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLifecycleState(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNodeEdgePoint(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNodeRuleGroup(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOperationalState(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalPotentialCapacity(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTypeAdministrativeStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["LOCKED","UNLOCKED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTypeAdministrativeStatePropEnum = append(operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTypeAdministrativeStatePropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAdministrativeStateLOCKED captures enum value "LOCKED"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAdministrativeStateLOCKED string = "LOCKED"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAdministrativeStateUNLOCKED captures enum value "UNLOCKED"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAdministrativeStateUNLOCKED string = "UNLOCKED"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNode) validateAdministrativeStateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTypeAdministrativeStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNode) validateAdministrativeState(formats strfmt.Registry) error {

	if swag.IsZero(m.AdministrativeState) { // not required
		return nil
	}

	// value enum
	if err := m.validateAdministrativeStateEnum("tapi-topology:node"+"."+"administrative-state", "body", *m.AdministrativeState); err != nil {
		return err
	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNode) validateAggregatedNodeEdgePoint(formats strfmt.Registry) error {

	if swag.IsZero(m.AggregatedNodeEdgePoint) { // not required
		return nil
	}

	for i := 0; i < len(m.AggregatedNodeEdgePoint); i++ {
		if swag.IsZero(m.AggregatedNodeEdgePoint[i]) { // not required
			continue
		}

		if m.AggregatedNodeEdgePoint[i] != nil {
			if err := m.AggregatedNodeEdgePoint[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tapi-topology:node" + "." + "aggregated-node-edge-point" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNode) validateAvailableCapacity(formats strfmt.Registry) error {

	if swag.IsZero(m.AvailableCapacity) { // not required
		return nil
	}

	if m.AvailableCapacity != nil {
		if err := m.AvailableCapacity.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tapi-topology:node" + "." + "available-capacity")
			}
			return err
		}
	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNode) validateCostCharacteristic(formats strfmt.Registry) error {

	if swag.IsZero(m.CostCharacteristic) { // not required
		return nil
	}

	for i := 0; i < len(m.CostCharacteristic); i++ {
		if swag.IsZero(m.CostCharacteristic[i]) { // not required
			continue
		}

		if m.CostCharacteristic[i] != nil {
			if err := m.CostCharacteristic[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tapi-topology:node" + "." + "cost-characteristic" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNode) validateEncapTopology(formats strfmt.Registry) error {

	if swag.IsZero(m.EncapTopology) { // not required
		return nil
	}

	if m.EncapTopology != nil {
		if err := m.EncapTopology.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tapi-topology:node" + "." + "encap-topology")
			}
			return err
		}
	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNode) validateLatencyCharacteristic(formats strfmt.Registry) error {

	if swag.IsZero(m.LatencyCharacteristic) { // not required
		return nil
	}

	for i := 0; i < len(m.LatencyCharacteristic); i++ {
		if swag.IsZero(m.LatencyCharacteristic[i]) { // not required
			continue
		}

		if m.LatencyCharacteristic[i] != nil {
			if err := m.LatencyCharacteristic[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tapi-topology:node" + "." + "latency-characteristic" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeLayerProtocolNameItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ODU","ETH","DSR","PHOTONIC_MEDIA"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeLayerProtocolNameItemsEnum = append(operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeLayerProtocolNameItemsEnum, v)
	}
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNode) validateLayerProtocolNameItemsEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeLayerProtocolNameItemsEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNode) validateLayerProtocolName(formats strfmt.Registry) error {

	if swag.IsZero(m.LayerProtocolName) { // not required
		return nil
	}

	for i := 0; i < len(m.LayerProtocolName); i++ {
		if swag.IsZero(m.LayerProtocolName[i]) { // not required
			continue
		}

		// value enum
		if err := m.validateLayerProtocolNameItemsEnum("tapi-topology:node"+"."+"layer-protocol-name"+"."+strconv.Itoa(i), "body", *m.LayerProtocolName[i]); err != nil {
			return err
		}

	}

	return nil
}

var operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTypeLifecycleStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PLANNED","POTENTIAL_AVAILABLE","POTENTIAL_BUSY","INSTALLED","PENDING_REMOVAL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTypeLifecycleStatePropEnum = append(operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTypeLifecycleStatePropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeLifecycleStatePLANNED captures enum value "PLANNED"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeLifecycleStatePLANNED string = "PLANNED"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeLifecycleStatePOTENTIALAVAILABLE captures enum value "POTENTIAL_AVAILABLE"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeLifecycleStatePOTENTIALAVAILABLE string = "POTENTIAL_AVAILABLE"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeLifecycleStatePOTENTIALBUSY captures enum value "POTENTIAL_BUSY"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeLifecycleStatePOTENTIALBUSY string = "POTENTIAL_BUSY"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeLifecycleStateINSTALLED captures enum value "INSTALLED"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeLifecycleStateINSTALLED string = "INSTALLED"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeLifecycleStatePENDINGREMOVAL captures enum value "PENDING_REMOVAL"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeLifecycleStatePENDINGREMOVAL string = "PENDING_REMOVAL"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNode) validateLifecycleStateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTypeLifecycleStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNode) validateLifecycleState(formats strfmt.Registry) error {

	if swag.IsZero(m.LifecycleState) { // not required
		return nil
	}

	// value enum
	if err := m.validateLifecycleStateEnum("tapi-topology:node"+"."+"lifecycle-state", "body", *m.LifecycleState); err != nil {
		return err
	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNode) validateName(formats strfmt.Registry) error {

	if swag.IsZero(m.Name) { // not required
		return nil
	}

	for i := 0; i < len(m.Name); i++ {
		if swag.IsZero(m.Name[i]) { // not required
			continue
		}

		if m.Name[i] != nil {
			if err := m.Name[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tapi-topology:node" + "." + "name" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNode) validateNodeEdgePoint(formats strfmt.Registry) error {

	if swag.IsZero(m.NodeEdgePoint) { // not required
		return nil
	}

	for i := 0; i < len(m.NodeEdgePoint); i++ {
		if swag.IsZero(m.NodeEdgePoint[i]) { // not required
			continue
		}

		if m.NodeEdgePoint[i] != nil {
			if err := m.NodeEdgePoint[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tapi-topology:node" + "." + "node-edge-point" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNode) validateNodeRuleGroup(formats strfmt.Registry) error {

	if swag.IsZero(m.NodeRuleGroup) { // not required
		return nil
	}

	for i := 0; i < len(m.NodeRuleGroup); i++ {
		if swag.IsZero(m.NodeRuleGroup[i]) { // not required
			continue
		}

		if m.NodeRuleGroup[i] != nil {
			if err := m.NodeRuleGroup[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tapi-topology:node" + "." + "node-rule-group" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTypeOperationalStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DISABLED","ENABLED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTypeOperationalStatePropEnum = append(operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTypeOperationalStatePropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeOperationalStateDISABLED captures enum value "DISABLED"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeOperationalStateDISABLED string = "DISABLED"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeOperationalStateENABLED captures enum value "ENABLED"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeOperationalStateENABLED string = "ENABLED"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNode) validateOperationalStateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTypeOperationalStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNode) validateOperationalState(formats strfmt.Registry) error {

	if swag.IsZero(m.OperationalState) { // not required
		return nil
	}

	// value enum
	if err := m.validateOperationalStateEnum("tapi-topology:node"+"."+"operational-state", "body", *m.OperationalState); err != nil {
		return err
	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNode) validateTotalPotentialCapacity(formats strfmt.Registry) error {

	if swag.IsZero(m.TotalPotentialCapacity) { // not required
		return nil
	}

	if m.TotalPotentialCapacity != nil {
		if err := m.TotalPotentialCapacity.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tapi-topology:node" + "." + "total-potential-capacity")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNode) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNode) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNode
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAggregatedNodeEdgePointItems0 operations tapi topology get node details post output tapi topology node aggregated node edge point items0
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAggregatedNodeEdgePointItems0
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAggregatedNodeEdgePointItems0 struct {

	// none (leaf)
	NodeEdgePointUUID string `json:"node-edge-point-uuid,omitempty"`

	// none (leaf)
	NodeUUID string `json:"node-uuid,omitempty"`

	// none (leaf)
	TopologyUUID string `json:"topology-uuid,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node aggregated node edge point items0
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAggregatedNodeEdgePointItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAggregatedNodeEdgePointItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAggregatedNodeEdgePointItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAggregatedNodeEdgePointItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacity Capacity available to be assigned. (non-presence)
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacity
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacity struct {

	// total size
	TotalSize *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSize `json:"total-size,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node available capacity
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTotalSize(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacity) validateTotalSize(formats strfmt.Registry) error {

	if swag.IsZero(m.TotalSize) { // not required
		return nil
	}

	if m.TotalSize != nil {
		if err := m.TotalSize.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tapi-topology:node" + "." + "available-capacity" + "." + "total-size")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacity) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSize Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSize
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSize struct {

	// none (leaf)
	// Enum: [TB TBPS GB GBPS MB MBPS KB KBPS GHz MHz]
	Unit *string `json:"unit,omitempty"`

	// none (leaf)
	Value uint64 `json:"value,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node available capacity total size
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSize) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUnit(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSizeTypeUnitPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["TB","TBPS","GB","GBPS","MB","MBPS","KB","KBPS","GHz","MHz"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSizeTypeUnitPropEnum = append(operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSizeTypeUnitPropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSizeUnitTB captures enum value "TB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSizeUnitTB string = "TB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSizeUnitTBPS captures enum value "TBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSizeUnitTBPS string = "TBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSizeUnitGB captures enum value "GB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSizeUnitGB string = "GB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSizeUnitGBPS captures enum value "GBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSizeUnitGBPS string = "GBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSizeUnitMB captures enum value "MB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSizeUnitMB string = "MB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSizeUnitMBPS captures enum value "MBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSizeUnitMBPS string = "MBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSizeUnitKB captures enum value "KB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSizeUnitKB string = "KB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSizeUnitKBPS captures enum value "KBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSizeUnitKBPS string = "KBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSizeUnitGHz captures enum value "GHz"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSizeUnitGHz string = "GHz"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSizeUnitMHz captures enum value "MHz"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSizeUnitMHz string = "MHz"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSize) validateUnitEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSizeTypeUnitPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSize) validateUnit(formats strfmt.Registry) error {

	if swag.IsZero(m.Unit) { // not required
		return nil
	}

	// value enum
	if err := m.validateUnitEnum("tapi-topology:node"+"."+"available-capacity"+"."+"total-size"+"."+"unit", "body", *m.Unit); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSize) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSize) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeAvailableCapacityTotalSize
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeCostCharacteristicItems0 operations tapi topology get node details post output tapi topology node cost characteristic items0
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeCostCharacteristicItems0
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeCostCharacteristicItems0 struct {

	// The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm. (leaf)
	CostAlgorithm string `json:"cost-algorithm,omitempty"`

	// The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName. (leaf)
	CostName string `json:"cost-name,omitempty"`

	// The specific cost. (leaf)
	CostValue string `json:"cost-value,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node cost characteristic items0
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeCostCharacteristicItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeCostCharacteristicItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeCostCharacteristicItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeCostCharacteristicItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeEncapTopology none (non-presence)
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeEncapTopology
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeEncapTopology struct {

	// none (leaf)
	TopologyUUID string `json:"topology-uuid,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node encap topology
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeEncapTopology) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeEncapTopology) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeEncapTopology) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeEncapTopology
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeLatencyCharacteristicItems0 operations tapi topology get node details post output tapi topology node latency characteristic items0
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeLatencyCharacteristicItems0
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeLatencyCharacteristicItems0 struct {

	// A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity (leaf)
	FixedLatencyCharacteristic string `json:"fixed-latency-characteristic,omitempty"`

	// High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.
	// Applies to TDM systems (and not packet). (leaf)
	JitterCharacteristic string `json:"jitter-characteristic,omitempty"`

	// The specific queuing latency for the traffic property. (leaf)
	QueingLatencyCharacteristic string `json:"queing-latency-characteristic,omitempty"`

	// The identifier of the specific traffic property to which the queuing latency applies. (leaf)
	TrafficPropertyName string `json:"traffic-property-name,omitempty"`

	// Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.
	// Applies to TDM systems (and not packet). (leaf)
	WanderCharacteristic string `json:"wander-characteristic,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node latency characteristic items0
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeLatencyCharacteristicItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeLatencyCharacteristicItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeLatencyCharacteristicItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeLatencyCharacteristicItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNameItems0 operations tapi topology get node details post output tapi topology node name items0
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNameItems0
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNameItems0 struct {

	// The value (leaf)
	Value string `json:"value,omitempty"`

	// The name of the value. The value need not have a name. (leaf)
	ValueName string `json:"value-name,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node name items0
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNameItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNameItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNameItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNameItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0 operations tapi topology get node details post output tapi topology node node edge point items0
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0 struct {

	// none (leaf)
	// Enum: [LOCKED UNLOCKED]
	AdministrativeState *string `json:"administrative-state,omitempty"`

	// none (list)
	AggregatedNodeEdgePoint []*OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AggregatedNodeEdgePointItems0 `json:"aggregated-node-edge-point"`

	// available capacity
	AvailableCapacity *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacity `json:"available-capacity,omitempty"`

	// none (list)
	AvailableCepLayerProtocol []*OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCepLayerProtocolItems0 `json:"available-cep-layer-protocol"`

	// none (leaf)
	// Enum: [ODU ETH DSR PHOTONIC_MEDIA]
	LayerProtocolName *string `json:"layer-protocol-name,omitempty"`

	// none (leaf)
	// Enum: [PLANNED POTENTIAL_AVAILABLE POTENTIAL_BUSY INSTALLED PENDING_REMOVAL]
	LifecycleState *string `json:"lifecycle-state,omitempty"`

	// The orientation of defined flow at the LinkEnd. (leaf)
	// Enum: [BIDIRECTIONAL INPUT OUTPUT UNIDENTIFIED_OR_UNKNOWN]
	LinkPortDirection *string `json:"link-port-direction,omitempty"`

	// Each LinkEnd of the Link has a role (e.g., symmetric, hub, spoke, leaf, root)  in the context of the Link with respect to the Link function.  (leaf)
	// Enum: [SYMMETRIC ROOT LEAF TRUNK UNKNOWN]
	LinkPortRole *string `json:"link-port-role,omitempty"`

	// NodeEdgePoint mapped to more than ServiceInterfacePoint (slicing/virtualizing) or a ServiceInterfacePoint mapped to more than one NodeEdgePoint (load balancing/Resilience) should be considered experimental (list)
	MappedServiceInterfacePoint []*OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0MappedServiceInterfacePointItems0 `json:"mapped-service-interface-point"`

	// List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)
	Name []*OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0NameItems0 `json:"name"`

	// none (leaf)
	// Enum: [DISABLED ENABLED]
	OperationalState *string `json:"operational-state,omitempty"`

	// The overall directionality of the LP.
	// - A BIDIRECTIONAL LP will have some SINK and/or SOURCE flowss.
	// - A SINK LP can only contain elements with SINK flows or CONTRA_DIRECTION_SOURCE flows
	// - A SOURCE LP can only contain SOURCE flows or CONTRA_DIRECTION_SINK flows (leaf)
	// Enum: [BIDIRECTIONAL SINK SOURCE UNDEFINED_OR_UNKNOWN]
	TerminationDirection *string `json:"termination-direction,omitempty"`

	// Indicates whether the layer is terminated and if so how. (leaf)
	// Enum: [LP_CAN_NEVER_TERMINATE LT_NOT_TERMINATED TERMINATED_SERVER_TO_CLIENT_FLOW TERMINATED_CLIENT_TO_SERVER_FLOW TERMINATED_BIDIRECTIONAL LT_PERMENANTLY_TERMINATED TERMINATION_STATE_UNKNOWN]
	TerminationState *string `json:"termination-state,omitempty"`

	// total potential capacity
	TotalPotentialCapacity *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacity `json:"total-potential-capacity,omitempty"`

	// UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.
	// UUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.
	// Pattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
	// Example of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)
	UUID string `json:"uuid,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node edge point items0
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAdministrativeState(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAggregatedNodeEdgePoint(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAvailableCapacity(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAvailableCepLayerProtocol(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLayerProtocolName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLifecycleState(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLinkPortDirection(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLinkPortRole(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMappedServiceInterfacePoint(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOperationalState(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTerminationDirection(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTerminationState(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalPotentialCapacity(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeAdministrativeStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["LOCKED","UNLOCKED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeAdministrativeStatePropEnum = append(operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeAdministrativeStatePropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AdministrativeStateLOCKED captures enum value "LOCKED"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AdministrativeStateLOCKED string = "LOCKED"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AdministrativeStateUNLOCKED captures enum value "UNLOCKED"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AdministrativeStateUNLOCKED string = "UNLOCKED"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0) validateAdministrativeStateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeAdministrativeStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0) validateAdministrativeState(formats strfmt.Registry) error {

	if swag.IsZero(m.AdministrativeState) { // not required
		return nil
	}

	// value enum
	if err := m.validateAdministrativeStateEnum("administrative-state", "body", *m.AdministrativeState); err != nil {
		return err
	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0) validateAggregatedNodeEdgePoint(formats strfmt.Registry) error {

	if swag.IsZero(m.AggregatedNodeEdgePoint) { // not required
		return nil
	}

	for i := 0; i < len(m.AggregatedNodeEdgePoint); i++ {
		if swag.IsZero(m.AggregatedNodeEdgePoint[i]) { // not required
			continue
		}

		if m.AggregatedNodeEdgePoint[i] != nil {
			if err := m.AggregatedNodeEdgePoint[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("aggregated-node-edge-point" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0) validateAvailableCapacity(formats strfmt.Registry) error {

	if swag.IsZero(m.AvailableCapacity) { // not required
		return nil
	}

	if m.AvailableCapacity != nil {
		if err := m.AvailableCapacity.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("available-capacity")
			}
			return err
		}
	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0) validateAvailableCepLayerProtocol(formats strfmt.Registry) error {

	if swag.IsZero(m.AvailableCepLayerProtocol) { // not required
		return nil
	}

	for i := 0; i < len(m.AvailableCepLayerProtocol); i++ {
		if swag.IsZero(m.AvailableCepLayerProtocol[i]) { // not required
			continue
		}

		if m.AvailableCepLayerProtocol[i] != nil {
			if err := m.AvailableCepLayerProtocol[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("available-cep-layer-protocol" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeLayerProtocolNamePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ODU","ETH","DSR","PHOTONIC_MEDIA"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeLayerProtocolNamePropEnum = append(operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeLayerProtocolNamePropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LayerProtocolNameODU captures enum value "ODU"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LayerProtocolNameODU string = "ODU"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LayerProtocolNameETH captures enum value "ETH"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LayerProtocolNameETH string = "ETH"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LayerProtocolNameDSR captures enum value "DSR"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LayerProtocolNameDSR string = "DSR"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LayerProtocolNamePHOTONICMEDIA captures enum value "PHOTONIC_MEDIA"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LayerProtocolNamePHOTONICMEDIA string = "PHOTONIC_MEDIA"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0) validateLayerProtocolNameEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeLayerProtocolNamePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0) validateLayerProtocolName(formats strfmt.Registry) error {

	if swag.IsZero(m.LayerProtocolName) { // not required
		return nil
	}

	// value enum
	if err := m.validateLayerProtocolNameEnum("layer-protocol-name", "body", *m.LayerProtocolName); err != nil {
		return err
	}

	return nil
}

var operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeLifecycleStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PLANNED","POTENTIAL_AVAILABLE","POTENTIAL_BUSY","INSTALLED","PENDING_REMOVAL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeLifecycleStatePropEnum = append(operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeLifecycleStatePropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LifecycleStatePLANNED captures enum value "PLANNED"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LifecycleStatePLANNED string = "PLANNED"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LifecycleStatePOTENTIALAVAILABLE captures enum value "POTENTIAL_AVAILABLE"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LifecycleStatePOTENTIALAVAILABLE string = "POTENTIAL_AVAILABLE"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LifecycleStatePOTENTIALBUSY captures enum value "POTENTIAL_BUSY"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LifecycleStatePOTENTIALBUSY string = "POTENTIAL_BUSY"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LifecycleStateINSTALLED captures enum value "INSTALLED"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LifecycleStateINSTALLED string = "INSTALLED"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LifecycleStatePENDINGREMOVAL captures enum value "PENDING_REMOVAL"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LifecycleStatePENDINGREMOVAL string = "PENDING_REMOVAL"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0) validateLifecycleStateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeLifecycleStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0) validateLifecycleState(formats strfmt.Registry) error {

	if swag.IsZero(m.LifecycleState) { // not required
		return nil
	}

	// value enum
	if err := m.validateLifecycleStateEnum("lifecycle-state", "body", *m.LifecycleState); err != nil {
		return err
	}

	return nil
}

var operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeLinkPortDirectionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["BIDIRECTIONAL","INPUT","OUTPUT","UNIDENTIFIED_OR_UNKNOWN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeLinkPortDirectionPropEnum = append(operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeLinkPortDirectionPropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LinkPortDirectionBIDIRECTIONAL captures enum value "BIDIRECTIONAL"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LinkPortDirectionBIDIRECTIONAL string = "BIDIRECTIONAL"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LinkPortDirectionINPUT captures enum value "INPUT"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LinkPortDirectionINPUT string = "INPUT"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LinkPortDirectionOUTPUT captures enum value "OUTPUT"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LinkPortDirectionOUTPUT string = "OUTPUT"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LinkPortDirectionUNIDENTIFIEDORUNKNOWN captures enum value "UNIDENTIFIED_OR_UNKNOWN"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LinkPortDirectionUNIDENTIFIEDORUNKNOWN string = "UNIDENTIFIED_OR_UNKNOWN"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0) validateLinkPortDirectionEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeLinkPortDirectionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0) validateLinkPortDirection(formats strfmt.Registry) error {

	if swag.IsZero(m.LinkPortDirection) { // not required
		return nil
	}

	// value enum
	if err := m.validateLinkPortDirectionEnum("link-port-direction", "body", *m.LinkPortDirection); err != nil {
		return err
	}

	return nil
}

var operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeLinkPortRolePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["SYMMETRIC","ROOT","LEAF","TRUNK","UNKNOWN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeLinkPortRolePropEnum = append(operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeLinkPortRolePropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LinkPortRoleSYMMETRIC captures enum value "SYMMETRIC"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LinkPortRoleSYMMETRIC string = "SYMMETRIC"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LinkPortRoleROOT captures enum value "ROOT"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LinkPortRoleROOT string = "ROOT"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LinkPortRoleLEAF captures enum value "LEAF"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LinkPortRoleLEAF string = "LEAF"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LinkPortRoleTRUNK captures enum value "TRUNK"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LinkPortRoleTRUNK string = "TRUNK"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LinkPortRoleUNKNOWN captures enum value "UNKNOWN"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0LinkPortRoleUNKNOWN string = "UNKNOWN"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0) validateLinkPortRoleEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeLinkPortRolePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0) validateLinkPortRole(formats strfmt.Registry) error {

	if swag.IsZero(m.LinkPortRole) { // not required
		return nil
	}

	// value enum
	if err := m.validateLinkPortRoleEnum("link-port-role", "body", *m.LinkPortRole); err != nil {
		return err
	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0) validateMappedServiceInterfacePoint(formats strfmt.Registry) error {

	if swag.IsZero(m.MappedServiceInterfacePoint) { // not required
		return nil
	}

	for i := 0; i < len(m.MappedServiceInterfacePoint); i++ {
		if swag.IsZero(m.MappedServiceInterfacePoint[i]) { // not required
			continue
		}

		if m.MappedServiceInterfacePoint[i] != nil {
			if err := m.MappedServiceInterfacePoint[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("mapped-service-interface-point" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0) validateName(formats strfmt.Registry) error {

	if swag.IsZero(m.Name) { // not required
		return nil
	}

	for i := 0; i < len(m.Name); i++ {
		if swag.IsZero(m.Name[i]) { // not required
			continue
		}

		if m.Name[i] != nil {
			if err := m.Name[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("name" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeOperationalStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DISABLED","ENABLED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeOperationalStatePropEnum = append(operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeOperationalStatePropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0OperationalStateDISABLED captures enum value "DISABLED"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0OperationalStateDISABLED string = "DISABLED"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0OperationalStateENABLED captures enum value "ENABLED"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0OperationalStateENABLED string = "ENABLED"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0) validateOperationalStateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeOperationalStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0) validateOperationalState(formats strfmt.Registry) error {

	if swag.IsZero(m.OperationalState) { // not required
		return nil
	}

	// value enum
	if err := m.validateOperationalStateEnum("operational-state", "body", *m.OperationalState); err != nil {
		return err
	}

	return nil
}

var operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeTerminationDirectionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["BIDIRECTIONAL","SINK","SOURCE","UNDEFINED_OR_UNKNOWN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeTerminationDirectionPropEnum = append(operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeTerminationDirectionPropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TerminationDirectionBIDIRECTIONAL captures enum value "BIDIRECTIONAL"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TerminationDirectionBIDIRECTIONAL string = "BIDIRECTIONAL"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TerminationDirectionSINK captures enum value "SINK"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TerminationDirectionSINK string = "SINK"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TerminationDirectionSOURCE captures enum value "SOURCE"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TerminationDirectionSOURCE string = "SOURCE"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TerminationDirectionUNDEFINEDORUNKNOWN captures enum value "UNDEFINED_OR_UNKNOWN"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TerminationDirectionUNDEFINEDORUNKNOWN string = "UNDEFINED_OR_UNKNOWN"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0) validateTerminationDirectionEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeTerminationDirectionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0) validateTerminationDirection(formats strfmt.Registry) error {

	if swag.IsZero(m.TerminationDirection) { // not required
		return nil
	}

	// value enum
	if err := m.validateTerminationDirectionEnum("termination-direction", "body", *m.TerminationDirection); err != nil {
		return err
	}

	return nil
}

var operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeTerminationStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["LP_CAN_NEVER_TERMINATE","LT_NOT_TERMINATED","TERMINATED_SERVER_TO_CLIENT_FLOW","TERMINATED_CLIENT_TO_SERVER_FLOW","TERMINATED_BIDIRECTIONAL","LT_PERMENANTLY_TERMINATED","TERMINATION_STATE_UNKNOWN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeTerminationStatePropEnum = append(operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeTerminationStatePropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TerminationStateLPCANNEVERTERMINATE captures enum value "LP_CAN_NEVER_TERMINATE"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TerminationStateLPCANNEVERTERMINATE string = "LP_CAN_NEVER_TERMINATE"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TerminationStateLTNOTTERMINATED captures enum value "LT_NOT_TERMINATED"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TerminationStateLTNOTTERMINATED string = "LT_NOT_TERMINATED"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TerminationStateTERMINATEDSERVERTOCLIENTFLOW captures enum value "TERMINATED_SERVER_TO_CLIENT_FLOW"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TerminationStateTERMINATEDSERVERTOCLIENTFLOW string = "TERMINATED_SERVER_TO_CLIENT_FLOW"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TerminationStateTERMINATEDCLIENTTOSERVERFLOW captures enum value "TERMINATED_CLIENT_TO_SERVER_FLOW"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TerminationStateTERMINATEDCLIENTTOSERVERFLOW string = "TERMINATED_CLIENT_TO_SERVER_FLOW"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TerminationStateTERMINATEDBIDIRECTIONAL captures enum value "TERMINATED_BIDIRECTIONAL"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TerminationStateTERMINATEDBIDIRECTIONAL string = "TERMINATED_BIDIRECTIONAL"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TerminationStateLTPERMENANTLYTERMINATED captures enum value "LT_PERMENANTLY_TERMINATED"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TerminationStateLTPERMENANTLYTERMINATED string = "LT_PERMENANTLY_TERMINATED"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TerminationStateTERMINATIONSTATEUNKNOWN captures enum value "TERMINATION_STATE_UNKNOWN"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TerminationStateTERMINATIONSTATEUNKNOWN string = "TERMINATION_STATE_UNKNOWN"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0) validateTerminationStateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TypeTerminationStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0) validateTerminationState(formats strfmt.Registry) error {

	if swag.IsZero(m.TerminationState) { // not required
		return nil
	}

	// value enum
	if err := m.validateTerminationStateEnum("termination-state", "body", *m.TerminationState); err != nil {
		return err
	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0) validateTotalPotentialCapacity(formats strfmt.Registry) error {

	if swag.IsZero(m.TotalPotentialCapacity) { // not required
		return nil
	}

	if m.TotalPotentialCapacity != nil {
		if err := m.TotalPotentialCapacity.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("total-potential-capacity")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AggregatedNodeEdgePointItems0 operations tapi topology get node details post output tapi topology node node edge point items0 aggregated node edge point items0
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AggregatedNodeEdgePointItems0
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AggregatedNodeEdgePointItems0 struct {

	// none (leaf)
	NodeEdgePointUUID string `json:"node-edge-point-uuid,omitempty"`

	// none (leaf)
	NodeUUID string `json:"node-uuid,omitempty"`

	// none (leaf)
	TopologyUUID string `json:"topology-uuid,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node edge point items0 aggregated node edge point items0
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AggregatedNodeEdgePointItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AggregatedNodeEdgePointItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AggregatedNodeEdgePointItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AggregatedNodeEdgePointItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacity Capacity available to be assigned. (non-presence)
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacity
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacity struct {

	// total size
	TotalSize *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSize `json:"total-size,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node edge point items0 available capacity
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTotalSize(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacity) validateTotalSize(formats strfmt.Registry) error {

	if swag.IsZero(m.TotalSize) { // not required
		return nil
	}

	if m.TotalSize != nil {
		if err := m.TotalSize.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("available-capacity" + "." + "total-size")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacity) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSize Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSize
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSize struct {

	// none (leaf)
	// Enum: [TB TBPS GB GBPS MB MBPS KB KBPS GHz MHz]
	Unit *string `json:"unit,omitempty"`

	// none (leaf)
	Value uint64 `json:"value,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node edge point items0 available capacity total size
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSize) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUnit(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSizeTypeUnitPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["TB","TBPS","GB","GBPS","MB","MBPS","KB","KBPS","GHz","MHz"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSizeTypeUnitPropEnum = append(operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSizeTypeUnitPropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSizeUnitTB captures enum value "TB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSizeUnitTB string = "TB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSizeUnitTBPS captures enum value "TBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSizeUnitTBPS string = "TBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSizeUnitGB captures enum value "GB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSizeUnitGB string = "GB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSizeUnitGBPS captures enum value "GBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSizeUnitGBPS string = "GBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSizeUnitMB captures enum value "MB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSizeUnitMB string = "MB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSizeUnitMBPS captures enum value "MBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSizeUnitMBPS string = "MBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSizeUnitKB captures enum value "KB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSizeUnitKB string = "KB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSizeUnitKBPS captures enum value "KBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSizeUnitKBPS string = "KBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSizeUnitGHz captures enum value "GHz"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSizeUnitGHz string = "GHz"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSizeUnitMHz captures enum value "MHz"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSizeUnitMHz string = "MHz"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSize) validateUnitEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSizeTypeUnitPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSize) validateUnit(formats strfmt.Registry) error {

	if swag.IsZero(m.Unit) { // not required
		return nil
	}

	// value enum
	if err := m.validateUnitEnum("available-capacity"+"."+"total-size"+"."+"unit", "body", *m.Unit); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSize) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSize) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCapacityTotalSize
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCepLayerProtocolItems0 operations tapi topology get node details post output tapi topology node node edge point items0 available cep layer protocol items0
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCepLayerProtocolItems0
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCepLayerProtocolItems0 struct {

	// none (leaf)
	LayerProtocolQualifier string `json:"layer-protocol-qualifier,omitempty"`

	// none (leaf)
	NumberOfCepInstances uint64 `json:"number-of-cep-instances,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node edge point items0 available cep layer protocol items0
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCepLayerProtocolItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCepLayerProtocolItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCepLayerProtocolItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0AvailableCepLayerProtocolItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0MappedServiceInterfacePointItems0 operations tapi topology get node details post output tapi topology node node edge point items0 mapped service interface point items0
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0MappedServiceInterfacePointItems0
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0MappedServiceInterfacePointItems0 struct {

	// none (leaf)
	ServiceInterfacePointUUID string `json:"service-interface-point-uuid,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node edge point items0 mapped service interface point items0
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0MappedServiceInterfacePointItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0MappedServiceInterfacePointItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0MappedServiceInterfacePointItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0MappedServiceInterfacePointItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0NameItems0 operations tapi topology get node details post output tapi topology node node edge point items0 name items0
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0NameItems0
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0NameItems0 struct {

	// The value (leaf)
	Value string `json:"value,omitempty"`

	// The name of the value. The value need not have a name. (leaf)
	ValueName string `json:"value-name,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node edge point items0 name items0
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0NameItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0NameItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0NameItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0NameItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacity An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacity
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacity struct {

	// total size
	TotalSize *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSize `json:"total-size,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node edge point items0 total potential capacity
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTotalSize(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacity) validateTotalSize(formats strfmt.Registry) error {

	if swag.IsZero(m.TotalSize) { // not required
		return nil
	}

	if m.TotalSize != nil {
		if err := m.TotalSize.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("total-potential-capacity" + "." + "total-size")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacity) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSize Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSize
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSize struct {

	// none (leaf)
	// Enum: [TB TBPS GB GBPS MB MBPS KB KBPS GHz MHz]
	Unit *string `json:"unit,omitempty"`

	// none (leaf)
	Value uint64 `json:"value,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node edge point items0 total potential capacity total size
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSize) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUnit(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSizeTypeUnitPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["TB","TBPS","GB","GBPS","MB","MBPS","KB","KBPS","GHz","MHz"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSizeTypeUnitPropEnum = append(operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSizeTypeUnitPropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSizeUnitTB captures enum value "TB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSizeUnitTB string = "TB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSizeUnitTBPS captures enum value "TBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSizeUnitTBPS string = "TBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSizeUnitGB captures enum value "GB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSizeUnitGB string = "GB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSizeUnitGBPS captures enum value "GBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSizeUnitGBPS string = "GBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSizeUnitMB captures enum value "MB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSizeUnitMB string = "MB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSizeUnitMBPS captures enum value "MBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSizeUnitMBPS string = "MBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSizeUnitKB captures enum value "KB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSizeUnitKB string = "KB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSizeUnitKBPS captures enum value "KBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSizeUnitKBPS string = "KBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSizeUnitGHz captures enum value "GHz"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSizeUnitGHz string = "GHz"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSizeUnitMHz captures enum value "MHz"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSizeUnitMHz string = "MHz"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSize) validateUnitEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSizeTypeUnitPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSize) validateUnit(formats strfmt.Registry) error {

	if swag.IsZero(m.Unit) { // not required
		return nil
	}

	// value enum
	if err := m.validateUnitEnum("total-potential-capacity"+"."+"total-size"+"."+"unit", "body", *m.Unit); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSize) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSize) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeEdgePointItems0TotalPotentialCapacityTotalSize
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0 operations tapi topology get node details post output tapi topology node node rule group items0
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0 struct {

	// available capacity
	AvailableCapacity *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacity `json:"available-capacity,omitempty"`

	// none (list)
	ComposedRuleGroup []*OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0ComposedRuleGroupItems0 `json:"composed-rule-group"`

	// The list of costs where each cost relates to some aspect of the TopologicalEntity. (list)
	CostCharacteristic []*OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0CostCharacteristicItems0 `json:"cost-characteristic"`

	// none (list)
	InterRuleGroup []*OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0 `json:"inter-rule-group"`

	// The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic. (list)
	LatencyCharacteristic []*OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0LatencyCharacteristicItems0 `json:"latency-characteristic"`

	// List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)
	Name []*OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0NameItems0 `json:"name"`

	// none (list)
	NodeEdgePoint []*OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0NodeEdgePointItems0 `json:"node-edge-point"`

	// A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration. (list)
	RiskCharacteristic []*OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RiskCharacteristicItems0 `json:"risk-characteristic"`

	// none (list)
	Rule []*OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0 `json:"rule"`

	// total potential capacity
	TotalPotentialCapacity *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacity `json:"total-potential-capacity,omitempty"`

	// UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.
	// UUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.
	// Pattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
	// Example of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)
	UUID string `json:"uuid,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node rule group items0
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAvailableCapacity(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateComposedRuleGroup(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCostCharacteristic(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateInterRuleGroup(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLatencyCharacteristic(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNodeEdgePoint(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRiskCharacteristic(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRule(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalPotentialCapacity(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0) validateAvailableCapacity(formats strfmt.Registry) error {

	if swag.IsZero(m.AvailableCapacity) { // not required
		return nil
	}

	if m.AvailableCapacity != nil {
		if err := m.AvailableCapacity.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("available-capacity")
			}
			return err
		}
	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0) validateComposedRuleGroup(formats strfmt.Registry) error {

	if swag.IsZero(m.ComposedRuleGroup) { // not required
		return nil
	}

	for i := 0; i < len(m.ComposedRuleGroup); i++ {
		if swag.IsZero(m.ComposedRuleGroup[i]) { // not required
			continue
		}

		if m.ComposedRuleGroup[i] != nil {
			if err := m.ComposedRuleGroup[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("composed-rule-group" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0) validateCostCharacteristic(formats strfmt.Registry) error {

	if swag.IsZero(m.CostCharacteristic) { // not required
		return nil
	}

	for i := 0; i < len(m.CostCharacteristic); i++ {
		if swag.IsZero(m.CostCharacteristic[i]) { // not required
			continue
		}

		if m.CostCharacteristic[i] != nil {
			if err := m.CostCharacteristic[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("cost-characteristic" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0) validateInterRuleGroup(formats strfmt.Registry) error {

	if swag.IsZero(m.InterRuleGroup) { // not required
		return nil
	}

	for i := 0; i < len(m.InterRuleGroup); i++ {
		if swag.IsZero(m.InterRuleGroup[i]) { // not required
			continue
		}

		if m.InterRuleGroup[i] != nil {
			if err := m.InterRuleGroup[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("inter-rule-group" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0) validateLatencyCharacteristic(formats strfmt.Registry) error {

	if swag.IsZero(m.LatencyCharacteristic) { // not required
		return nil
	}

	for i := 0; i < len(m.LatencyCharacteristic); i++ {
		if swag.IsZero(m.LatencyCharacteristic[i]) { // not required
			continue
		}

		if m.LatencyCharacteristic[i] != nil {
			if err := m.LatencyCharacteristic[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("latency-characteristic" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0) validateName(formats strfmt.Registry) error {

	if swag.IsZero(m.Name) { // not required
		return nil
	}

	for i := 0; i < len(m.Name); i++ {
		if swag.IsZero(m.Name[i]) { // not required
			continue
		}

		if m.Name[i] != nil {
			if err := m.Name[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("name" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0) validateNodeEdgePoint(formats strfmt.Registry) error {

	if swag.IsZero(m.NodeEdgePoint) { // not required
		return nil
	}

	for i := 0; i < len(m.NodeEdgePoint); i++ {
		if swag.IsZero(m.NodeEdgePoint[i]) { // not required
			continue
		}

		if m.NodeEdgePoint[i] != nil {
			if err := m.NodeEdgePoint[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("node-edge-point" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0) validateRiskCharacteristic(formats strfmt.Registry) error {

	if swag.IsZero(m.RiskCharacteristic) { // not required
		return nil
	}

	for i := 0; i < len(m.RiskCharacteristic); i++ {
		if swag.IsZero(m.RiskCharacteristic[i]) { // not required
			continue
		}

		if m.RiskCharacteristic[i] != nil {
			if err := m.RiskCharacteristic[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("risk-characteristic" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0) validateRule(formats strfmt.Registry) error {

	if swag.IsZero(m.Rule) { // not required
		return nil
	}

	for i := 0; i < len(m.Rule); i++ {
		if swag.IsZero(m.Rule[i]) { // not required
			continue
		}

		if m.Rule[i] != nil {
			if err := m.Rule[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("rule" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0) validateTotalPotentialCapacity(formats strfmt.Registry) error {

	if swag.IsZero(m.TotalPotentialCapacity) { // not required
		return nil
	}

	if m.TotalPotentialCapacity != nil {
		if err := m.TotalPotentialCapacity.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("total-potential-capacity")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacity Capacity available to be assigned. (non-presence)
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacity
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacity struct {

	// total size
	TotalSize *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSize `json:"total-size,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node rule group items0 available capacity
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTotalSize(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacity) validateTotalSize(formats strfmt.Registry) error {

	if swag.IsZero(m.TotalSize) { // not required
		return nil
	}

	if m.TotalSize != nil {
		if err := m.TotalSize.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("available-capacity" + "." + "total-size")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacity) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSize Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSize
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSize struct {

	// none (leaf)
	// Enum: [TB TBPS GB GBPS MB MBPS KB KBPS GHz MHz]
	Unit *string `json:"unit,omitempty"`

	// none (leaf)
	Value uint64 `json:"value,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node rule group items0 available capacity total size
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSize) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUnit(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSizeTypeUnitPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["TB","TBPS","GB","GBPS","MB","MBPS","KB","KBPS","GHz","MHz"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSizeTypeUnitPropEnum = append(operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSizeTypeUnitPropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSizeUnitTB captures enum value "TB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSizeUnitTB string = "TB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSizeUnitTBPS captures enum value "TBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSizeUnitTBPS string = "TBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSizeUnitGB captures enum value "GB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSizeUnitGB string = "GB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSizeUnitGBPS captures enum value "GBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSizeUnitGBPS string = "GBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSizeUnitMB captures enum value "MB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSizeUnitMB string = "MB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSizeUnitMBPS captures enum value "MBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSizeUnitMBPS string = "MBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSizeUnitKB captures enum value "KB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSizeUnitKB string = "KB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSizeUnitKBPS captures enum value "KBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSizeUnitKBPS string = "KBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSizeUnitGHz captures enum value "GHz"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSizeUnitGHz string = "GHz"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSizeUnitMHz captures enum value "MHz"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSizeUnitMHz string = "MHz"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSize) validateUnitEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSizeTypeUnitPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSize) validateUnit(formats strfmt.Registry) error {

	if swag.IsZero(m.Unit) { // not required
		return nil
	}

	// value enum
	if err := m.validateUnitEnum("available-capacity"+"."+"total-size"+"."+"unit", "body", *m.Unit); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSize) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSize) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0AvailableCapacityTotalSize
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0ComposedRuleGroupItems0 operations tapi topology get node details post output tapi topology node node rule group items0 composed rule group items0
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0ComposedRuleGroupItems0
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0ComposedRuleGroupItems0 struct {

	// none (leaf)
	NodeRuleGroupUUID string `json:"node-rule-group-uuid,omitempty"`

	// none (leaf)
	NodeUUID string `json:"node-uuid,omitempty"`

	// none (leaf)
	TopologyUUID string `json:"topology-uuid,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node rule group items0 composed rule group items0
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0ComposedRuleGroupItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0ComposedRuleGroupItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0ComposedRuleGroupItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0ComposedRuleGroupItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0CostCharacteristicItems0 operations tapi topology get node details post output tapi topology node node rule group items0 cost characteristic items0
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0CostCharacteristicItems0
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0CostCharacteristicItems0 struct {

	// The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm. (leaf)
	CostAlgorithm string `json:"cost-algorithm,omitempty"`

	// The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName. (leaf)
	CostName string `json:"cost-name,omitempty"`

	// The specific cost. (leaf)
	CostValue string `json:"cost-value,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node rule group items0 cost characteristic items0
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0CostCharacteristicItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0CostCharacteristicItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0CostCharacteristicItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0CostCharacteristicItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0 operations tapi topology get node details post output tapi topology node node rule group items0 inter rule group items0
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0 struct {

	// none (list)
	AssociatedNodeRuleGroup []*OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AssociatedNodeRuleGroupItems0 `json:"associated-node-rule-group"`

	// available capacity
	AvailableCapacity *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacity `json:"available-capacity,omitempty"`

	// The list of costs where each cost relates to some aspect of the TopologicalEntity. (list)
	CostCharacteristic []*OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0CostCharacteristicItems0 `json:"cost-characteristic"`

	// The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic. (list)
	LatencyCharacteristic []*OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0LatencyCharacteristicItems0 `json:"latency-characteristic"`

	// List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)
	Name []*OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0NameItems0 `json:"name"`

	// A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration. (list)
	RiskCharacteristic []*OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RiskCharacteristicItems0 `json:"risk-characteristic"`

	// none (list)
	Rule []*OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0 `json:"rule"`

	// total potential capacity
	TotalPotentialCapacity *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacity `json:"total-potential-capacity,omitempty"`

	// UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.
	// UUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.
	// Pattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
	// Example of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 (leaf)
	UUID string `json:"uuid,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node rule group items0 inter rule group items0
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAssociatedNodeRuleGroup(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAvailableCapacity(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCostCharacteristic(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLatencyCharacteristic(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRiskCharacteristic(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRule(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalPotentialCapacity(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0) validateAssociatedNodeRuleGroup(formats strfmt.Registry) error {

	if swag.IsZero(m.AssociatedNodeRuleGroup) { // not required
		return nil
	}

	for i := 0; i < len(m.AssociatedNodeRuleGroup); i++ {
		if swag.IsZero(m.AssociatedNodeRuleGroup[i]) { // not required
			continue
		}

		if m.AssociatedNodeRuleGroup[i] != nil {
			if err := m.AssociatedNodeRuleGroup[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("associated-node-rule-group" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0) validateAvailableCapacity(formats strfmt.Registry) error {

	if swag.IsZero(m.AvailableCapacity) { // not required
		return nil
	}

	if m.AvailableCapacity != nil {
		if err := m.AvailableCapacity.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("available-capacity")
			}
			return err
		}
	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0) validateCostCharacteristic(formats strfmt.Registry) error {

	if swag.IsZero(m.CostCharacteristic) { // not required
		return nil
	}

	for i := 0; i < len(m.CostCharacteristic); i++ {
		if swag.IsZero(m.CostCharacteristic[i]) { // not required
			continue
		}

		if m.CostCharacteristic[i] != nil {
			if err := m.CostCharacteristic[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("cost-characteristic" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0) validateLatencyCharacteristic(formats strfmt.Registry) error {

	if swag.IsZero(m.LatencyCharacteristic) { // not required
		return nil
	}

	for i := 0; i < len(m.LatencyCharacteristic); i++ {
		if swag.IsZero(m.LatencyCharacteristic[i]) { // not required
			continue
		}

		if m.LatencyCharacteristic[i] != nil {
			if err := m.LatencyCharacteristic[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("latency-characteristic" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0) validateName(formats strfmt.Registry) error {

	if swag.IsZero(m.Name) { // not required
		return nil
	}

	for i := 0; i < len(m.Name); i++ {
		if swag.IsZero(m.Name[i]) { // not required
			continue
		}

		if m.Name[i] != nil {
			if err := m.Name[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("name" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0) validateRiskCharacteristic(formats strfmt.Registry) error {

	if swag.IsZero(m.RiskCharacteristic) { // not required
		return nil
	}

	for i := 0; i < len(m.RiskCharacteristic); i++ {
		if swag.IsZero(m.RiskCharacteristic[i]) { // not required
			continue
		}

		if m.RiskCharacteristic[i] != nil {
			if err := m.RiskCharacteristic[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("risk-characteristic" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0) validateRule(formats strfmt.Registry) error {

	if swag.IsZero(m.Rule) { // not required
		return nil
	}

	for i := 0; i < len(m.Rule); i++ {
		if swag.IsZero(m.Rule[i]) { // not required
			continue
		}

		if m.Rule[i] != nil {
			if err := m.Rule[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("rule" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0) validateTotalPotentialCapacity(formats strfmt.Registry) error {

	if swag.IsZero(m.TotalPotentialCapacity) { // not required
		return nil
	}

	if m.TotalPotentialCapacity != nil {
		if err := m.TotalPotentialCapacity.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("total-potential-capacity")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AssociatedNodeRuleGroupItems0 operations tapi topology get node details post output tapi topology node node rule group items0 inter rule group items0 associated node rule group items0
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AssociatedNodeRuleGroupItems0
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AssociatedNodeRuleGroupItems0 struct {

	// none (leaf)
	NodeRuleGroupUUID string `json:"node-rule-group-uuid,omitempty"`

	// none (leaf)
	NodeUUID string `json:"node-uuid,omitempty"`

	// none (leaf)
	TopologyUUID string `json:"topology-uuid,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node rule group items0 inter rule group items0 associated node rule group items0
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AssociatedNodeRuleGroupItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AssociatedNodeRuleGroupItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AssociatedNodeRuleGroupItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AssociatedNodeRuleGroupItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacity Capacity available to be assigned. (non-presence)
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacity
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacity struct {

	// total size
	TotalSize *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSize `json:"total-size,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node rule group items0 inter rule group items0 available capacity
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTotalSize(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacity) validateTotalSize(formats strfmt.Registry) error {

	if swag.IsZero(m.TotalSize) { // not required
		return nil
	}

	if m.TotalSize != nil {
		if err := m.TotalSize.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("available-capacity" + "." + "total-size")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacity) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSize Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSize
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSize struct {

	// none (leaf)
	// Enum: [TB TBPS GB GBPS MB MBPS KB KBPS GHz MHz]
	Unit *string `json:"unit,omitempty"`

	// none (leaf)
	Value uint64 `json:"value,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node rule group items0 inter rule group items0 available capacity total size
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSize) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUnit(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSizeTypeUnitPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["TB","TBPS","GB","GBPS","MB","MBPS","KB","KBPS","GHz","MHz"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSizeTypeUnitPropEnum = append(operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSizeTypeUnitPropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSizeUnitTB captures enum value "TB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSizeUnitTB string = "TB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSizeUnitTBPS captures enum value "TBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSizeUnitTBPS string = "TBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSizeUnitGB captures enum value "GB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSizeUnitGB string = "GB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSizeUnitGBPS captures enum value "GBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSizeUnitGBPS string = "GBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSizeUnitMB captures enum value "MB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSizeUnitMB string = "MB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSizeUnitMBPS captures enum value "MBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSizeUnitMBPS string = "MBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSizeUnitKB captures enum value "KB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSizeUnitKB string = "KB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSizeUnitKBPS captures enum value "KBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSizeUnitKBPS string = "KBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSizeUnitGHz captures enum value "GHz"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSizeUnitGHz string = "GHz"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSizeUnitMHz captures enum value "MHz"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSizeUnitMHz string = "MHz"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSize) validateUnitEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSizeTypeUnitPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSize) validateUnit(formats strfmt.Registry) error {

	if swag.IsZero(m.Unit) { // not required
		return nil
	}

	// value enum
	if err := m.validateUnitEnum("available-capacity"+"."+"total-size"+"."+"unit", "body", *m.Unit); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSize) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSize) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0AvailableCapacityTotalSize
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0CostCharacteristicItems0 operations tapi topology get node details post output tapi topology node node rule group items0 inter rule group items0 cost characteristic items0
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0CostCharacteristicItems0
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0CostCharacteristicItems0 struct {

	// The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm. (leaf)
	CostAlgorithm string `json:"cost-algorithm,omitempty"`

	// The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName. (leaf)
	CostName string `json:"cost-name,omitempty"`

	// The specific cost. (leaf)
	CostValue string `json:"cost-value,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node rule group items0 inter rule group items0 cost characteristic items0
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0CostCharacteristicItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0CostCharacteristicItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0CostCharacteristicItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0CostCharacteristicItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0LatencyCharacteristicItems0 operations tapi topology get node details post output tapi topology node node rule group items0 inter rule group items0 latency characteristic items0
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0LatencyCharacteristicItems0
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0LatencyCharacteristicItems0 struct {

	// A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity (leaf)
	FixedLatencyCharacteristic string `json:"fixed-latency-characteristic,omitempty"`

	// High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.
	// Applies to TDM systems (and not packet). (leaf)
	JitterCharacteristic string `json:"jitter-characteristic,omitempty"`

	// The specific queuing latency for the traffic property. (leaf)
	QueingLatencyCharacteristic string `json:"queing-latency-characteristic,omitempty"`

	// The identifier of the specific traffic property to which the queuing latency applies. (leaf)
	TrafficPropertyName string `json:"traffic-property-name,omitempty"`

	// Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.
	// Applies to TDM systems (and not packet). (leaf)
	WanderCharacteristic string `json:"wander-characteristic,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node rule group items0 inter rule group items0 latency characteristic items0
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0LatencyCharacteristicItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0LatencyCharacteristicItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0LatencyCharacteristicItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0LatencyCharacteristicItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0NameItems0 operations tapi topology get node details post output tapi topology node node rule group items0 inter rule group items0 name items0
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0NameItems0
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0NameItems0 struct {

	// The value (leaf)
	Value string `json:"value,omitempty"`

	// The name of the value. The value need not have a name. (leaf)
	ValueName string `json:"value-name,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node rule group items0 inter rule group items0 name items0
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0NameItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0NameItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0NameItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0NameItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RiskCharacteristicItems0 operations tapi topology get node details post output tapi topology node node rule group items0 inter rule group items0 risk characteristic items0
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RiskCharacteristicItems0
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RiskCharacteristicItems0 struct {

	// The name of the risk characteristic. The characteristic may be related to a specific degree of closeness.
	// For example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).
	// Depending upon the importance of the traffic being routed different risk characteristics will be evaluated. (leaf)
	RiskCharacteristicName string `json:"risk-characteristic-name,omitempty"`

	// risk identifier list
	RiskIdentifierList []string `json:"risk-identifier-list"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node rule group items0 inter rule group items0 risk characteristic items0
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RiskCharacteristicItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RiskCharacteristicItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RiskCharacteristicItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RiskCharacteristicItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0 operations tapi topology get node details post output tapi topology node node rule group items0 inter rule group items0 rule items0
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0 struct {

	// none (leaf)
	// Enum: [MAY_FORWARD_ACROSS_GROUP MUST_FORWARD_ACROSS_GROUP CANNOT_FORWARD_ACROSS_GROUP NO_STATEMENT_ON_FORWARDING]
	ForwardingRule *string `json:"forwarding-rule,omitempty"`

	// none (leaf)
	LocalID string `json:"local-id,omitempty"`

	// List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)
	Name []*OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0NameItems0 `json:"name"`

	// none (leaf)
	OverridePriority uint64 `json:"override-priority,omitempty"`

	// none (leaf)
	// Enum: [FORWARDING CAPACITY COST TIMING RISK GROUPING]
	RuleType *string `json:"rule-type,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node rule group items0 inter rule group items0 rule items0
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateForwardingRule(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRuleType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0TypeForwardingRulePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["MAY_FORWARD_ACROSS_GROUP","MUST_FORWARD_ACROSS_GROUP","CANNOT_FORWARD_ACROSS_GROUP","NO_STATEMENT_ON_FORWARDING"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0TypeForwardingRulePropEnum = append(operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0TypeForwardingRulePropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0ForwardingRuleMAYFORWARDACROSSGROUP captures enum value "MAY_FORWARD_ACROSS_GROUP"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0ForwardingRuleMAYFORWARDACROSSGROUP string = "MAY_FORWARD_ACROSS_GROUP"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0ForwardingRuleMUSTFORWARDACROSSGROUP captures enum value "MUST_FORWARD_ACROSS_GROUP"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0ForwardingRuleMUSTFORWARDACROSSGROUP string = "MUST_FORWARD_ACROSS_GROUP"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0ForwardingRuleCANNOTFORWARDACROSSGROUP captures enum value "CANNOT_FORWARD_ACROSS_GROUP"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0ForwardingRuleCANNOTFORWARDACROSSGROUP string = "CANNOT_FORWARD_ACROSS_GROUP"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0ForwardingRuleNOSTATEMENTONFORWARDING captures enum value "NO_STATEMENT_ON_FORWARDING"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0ForwardingRuleNOSTATEMENTONFORWARDING string = "NO_STATEMENT_ON_FORWARDING"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0) validateForwardingRuleEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0TypeForwardingRulePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0) validateForwardingRule(formats strfmt.Registry) error {

	if swag.IsZero(m.ForwardingRule) { // not required
		return nil
	}

	// value enum
	if err := m.validateForwardingRuleEnum("forwarding-rule", "body", *m.ForwardingRule); err != nil {
		return err
	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0) validateName(formats strfmt.Registry) error {

	if swag.IsZero(m.Name) { // not required
		return nil
	}

	for i := 0; i < len(m.Name); i++ {
		if swag.IsZero(m.Name[i]) { // not required
			continue
		}

		if m.Name[i] != nil {
			if err := m.Name[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("name" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0TypeRuleTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["FORWARDING","CAPACITY","COST","TIMING","RISK","GROUPING"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0TypeRuleTypePropEnum = append(operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0TypeRuleTypePropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0RuleTypeFORWARDING captures enum value "FORWARDING"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0RuleTypeFORWARDING string = "FORWARDING"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0RuleTypeCAPACITY captures enum value "CAPACITY"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0RuleTypeCAPACITY string = "CAPACITY"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0RuleTypeCOST captures enum value "COST"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0RuleTypeCOST string = "COST"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0RuleTypeTIMING captures enum value "TIMING"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0RuleTypeTIMING string = "TIMING"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0RuleTypeRISK captures enum value "RISK"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0RuleTypeRISK string = "RISK"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0RuleTypeGROUPING captures enum value "GROUPING"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0RuleTypeGROUPING string = "GROUPING"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0) validateRuleTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0TypeRuleTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0) validateRuleType(formats strfmt.Registry) error {

	if swag.IsZero(m.RuleType) { // not required
		return nil
	}

	// value enum
	if err := m.validateRuleTypeEnum("rule-type", "body", *m.RuleType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0NameItems0 operations tapi topology get node details post output tapi topology node node rule group items0 inter rule group items0 rule items0 name items0
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0NameItems0
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0NameItems0 struct {

	// The value (leaf)
	Value string `json:"value,omitempty"`

	// The name of the value. The value need not have a name. (leaf)
	ValueName string `json:"value-name,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node rule group items0 inter rule group items0 rule items0 name items0
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0NameItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0NameItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0NameItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0RuleItems0NameItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacity An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacity
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacity struct {

	// total size
	TotalSize *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSize `json:"total-size,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node rule group items0 inter rule group items0 total potential capacity
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTotalSize(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacity) validateTotalSize(formats strfmt.Registry) error {

	if swag.IsZero(m.TotalSize) { // not required
		return nil
	}

	if m.TotalSize != nil {
		if err := m.TotalSize.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("total-potential-capacity" + "." + "total-size")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacity) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSize Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSize
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSize struct {

	// none (leaf)
	// Enum: [TB TBPS GB GBPS MB MBPS KB KBPS GHz MHz]
	Unit *string `json:"unit,omitempty"`

	// none (leaf)
	Value uint64 `json:"value,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node rule group items0 inter rule group items0 total potential capacity total size
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSize) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUnit(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSizeTypeUnitPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["TB","TBPS","GB","GBPS","MB","MBPS","KB","KBPS","GHz","MHz"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSizeTypeUnitPropEnum = append(operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSizeTypeUnitPropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSizeUnitTB captures enum value "TB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSizeUnitTB string = "TB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSizeUnitTBPS captures enum value "TBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSizeUnitTBPS string = "TBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSizeUnitGB captures enum value "GB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSizeUnitGB string = "GB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSizeUnitGBPS captures enum value "GBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSizeUnitGBPS string = "GBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSizeUnitMB captures enum value "MB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSizeUnitMB string = "MB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSizeUnitMBPS captures enum value "MBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSizeUnitMBPS string = "MBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSizeUnitKB captures enum value "KB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSizeUnitKB string = "KB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSizeUnitKBPS captures enum value "KBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSizeUnitKBPS string = "KBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSizeUnitGHz captures enum value "GHz"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSizeUnitGHz string = "GHz"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSizeUnitMHz captures enum value "MHz"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSizeUnitMHz string = "MHz"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSize) validateUnitEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSizeTypeUnitPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSize) validateUnit(formats strfmt.Registry) error {

	if swag.IsZero(m.Unit) { // not required
		return nil
	}

	// value enum
	if err := m.validateUnitEnum("total-potential-capacity"+"."+"total-size"+"."+"unit", "body", *m.Unit); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSize) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSize) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0InterRuleGroupItems0TotalPotentialCapacityTotalSize
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0LatencyCharacteristicItems0 operations tapi topology get node details post output tapi topology node node rule group items0 latency characteristic items0
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0LatencyCharacteristicItems0
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0LatencyCharacteristicItems0 struct {

	// A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity (leaf)
	FixedLatencyCharacteristic string `json:"fixed-latency-characteristic,omitempty"`

	// High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.
	// Applies to TDM systems (and not packet). (leaf)
	JitterCharacteristic string `json:"jitter-characteristic,omitempty"`

	// The specific queuing latency for the traffic property. (leaf)
	QueingLatencyCharacteristic string `json:"queing-latency-characteristic,omitempty"`

	// The identifier of the specific traffic property to which the queuing latency applies. (leaf)
	TrafficPropertyName string `json:"traffic-property-name,omitempty"`

	// Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.
	// Applies to TDM systems (and not packet). (leaf)
	WanderCharacteristic string `json:"wander-characteristic,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node rule group items0 latency characteristic items0
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0LatencyCharacteristicItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0LatencyCharacteristicItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0LatencyCharacteristicItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0LatencyCharacteristicItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0NameItems0 operations tapi topology get node details post output tapi topology node node rule group items0 name items0
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0NameItems0
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0NameItems0 struct {

	// The value (leaf)
	Value string `json:"value,omitempty"`

	// The name of the value. The value need not have a name. (leaf)
	ValueName string `json:"value-name,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node rule group items0 name items0
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0NameItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0NameItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0NameItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0NameItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0NodeEdgePointItems0 operations tapi topology get node details post output tapi topology node node rule group items0 node edge point items0
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0NodeEdgePointItems0
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0NodeEdgePointItems0 struct {

	// none (leaf)
	NodeEdgePointUUID string `json:"node-edge-point-uuid,omitempty"`

	// none (leaf)
	NodeUUID string `json:"node-uuid,omitempty"`

	// none (leaf)
	TopologyUUID string `json:"topology-uuid,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node rule group items0 node edge point items0
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0NodeEdgePointItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0NodeEdgePointItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0NodeEdgePointItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0NodeEdgePointItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RiskCharacteristicItems0 operations tapi topology get node details post output tapi topology node node rule group items0 risk characteristic items0
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RiskCharacteristicItems0
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RiskCharacteristicItems0 struct {

	// The name of the risk characteristic. The characteristic may be related to a specific degree of closeness.
	// For example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).
	// Depending upon the importance of the traffic being routed different risk characteristics will be evaluated. (leaf)
	RiskCharacteristicName string `json:"risk-characteristic-name,omitempty"`

	// risk identifier list
	RiskIdentifierList []string `json:"risk-identifier-list"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node rule group items0 risk characteristic items0
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RiskCharacteristicItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RiskCharacteristicItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RiskCharacteristicItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RiskCharacteristicItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0 operations tapi topology get node details post output tapi topology node node rule group items0 rule items0
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0 struct {

	// none (leaf)
	// Enum: [MAY_FORWARD_ACROSS_GROUP MUST_FORWARD_ACROSS_GROUP CANNOT_FORWARD_ACROSS_GROUP NO_STATEMENT_ON_FORWARDING]
	ForwardingRule *string `json:"forwarding-rule,omitempty"`

	// none (leaf)
	LocalID string `json:"local-id,omitempty"`

	// List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity. (list)
	Name []*OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0NameItems0 `json:"name"`

	// none (leaf)
	OverridePriority uint64 `json:"override-priority,omitempty"`

	// none (leaf)
	// Enum: [FORWARDING CAPACITY COST TIMING RISK GROUPING]
	RuleType *string `json:"rule-type,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node rule group items0 rule items0
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateForwardingRule(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRuleType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0TypeForwardingRulePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["MAY_FORWARD_ACROSS_GROUP","MUST_FORWARD_ACROSS_GROUP","CANNOT_FORWARD_ACROSS_GROUP","NO_STATEMENT_ON_FORWARDING"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0TypeForwardingRulePropEnum = append(operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0TypeForwardingRulePropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0ForwardingRuleMAYFORWARDACROSSGROUP captures enum value "MAY_FORWARD_ACROSS_GROUP"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0ForwardingRuleMAYFORWARDACROSSGROUP string = "MAY_FORWARD_ACROSS_GROUP"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0ForwardingRuleMUSTFORWARDACROSSGROUP captures enum value "MUST_FORWARD_ACROSS_GROUP"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0ForwardingRuleMUSTFORWARDACROSSGROUP string = "MUST_FORWARD_ACROSS_GROUP"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0ForwardingRuleCANNOTFORWARDACROSSGROUP captures enum value "CANNOT_FORWARD_ACROSS_GROUP"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0ForwardingRuleCANNOTFORWARDACROSSGROUP string = "CANNOT_FORWARD_ACROSS_GROUP"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0ForwardingRuleNOSTATEMENTONFORWARDING captures enum value "NO_STATEMENT_ON_FORWARDING"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0ForwardingRuleNOSTATEMENTONFORWARDING string = "NO_STATEMENT_ON_FORWARDING"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0) validateForwardingRuleEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0TypeForwardingRulePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0) validateForwardingRule(formats strfmt.Registry) error {

	if swag.IsZero(m.ForwardingRule) { // not required
		return nil
	}

	// value enum
	if err := m.validateForwardingRuleEnum("forwarding-rule", "body", *m.ForwardingRule); err != nil {
		return err
	}

	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0) validateName(formats strfmt.Registry) error {

	if swag.IsZero(m.Name) { // not required
		return nil
	}

	for i := 0; i < len(m.Name); i++ {
		if swag.IsZero(m.Name[i]) { // not required
			continue
		}

		if m.Name[i] != nil {
			if err := m.Name[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("name" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0TypeRuleTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["FORWARDING","CAPACITY","COST","TIMING","RISK","GROUPING"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0TypeRuleTypePropEnum = append(operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0TypeRuleTypePropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0RuleTypeFORWARDING captures enum value "FORWARDING"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0RuleTypeFORWARDING string = "FORWARDING"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0RuleTypeCAPACITY captures enum value "CAPACITY"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0RuleTypeCAPACITY string = "CAPACITY"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0RuleTypeCOST captures enum value "COST"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0RuleTypeCOST string = "COST"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0RuleTypeTIMING captures enum value "TIMING"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0RuleTypeTIMING string = "TIMING"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0RuleTypeRISK captures enum value "RISK"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0RuleTypeRISK string = "RISK"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0RuleTypeGROUPING captures enum value "GROUPING"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0RuleTypeGROUPING string = "GROUPING"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0) validateRuleTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0TypeRuleTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0) validateRuleType(formats strfmt.Registry) error {

	if swag.IsZero(m.RuleType) { // not required
		return nil
	}

	// value enum
	if err := m.validateRuleTypeEnum("rule-type", "body", *m.RuleType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0NameItems0 operations tapi topology get node details post output tapi topology node node rule group items0 rule items0 name items0
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0NameItems0
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0NameItems0 struct {

	// The value (leaf)
	Value string `json:"value,omitempty"`

	// The name of the value. The value need not have a name. (leaf)
	ValueName string `json:"value-name,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node rule group items0 rule items0 name items0
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0NameItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0NameItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0NameItems0) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0RuleItems0NameItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacity An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacity
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacity struct {

	// total size
	TotalSize *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSize `json:"total-size,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node rule group items0 total potential capacity
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTotalSize(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacity) validateTotalSize(formats strfmt.Registry) error {

	if swag.IsZero(m.TotalSize) { // not required
		return nil
	}

	if m.TotalSize != nil {
		if err := m.TotalSize.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("total-potential-capacity" + "." + "total-size")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacity) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSize Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSize
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSize struct {

	// none (leaf)
	// Enum: [TB TBPS GB GBPS MB MBPS KB KBPS GHz MHz]
	Unit *string `json:"unit,omitempty"`

	// none (leaf)
	Value uint64 `json:"value,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node node rule group items0 total potential capacity total size
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSize) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUnit(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSizeTypeUnitPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["TB","TBPS","GB","GBPS","MB","MBPS","KB","KBPS","GHz","MHz"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSizeTypeUnitPropEnum = append(operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSizeTypeUnitPropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSizeUnitTB captures enum value "TB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSizeUnitTB string = "TB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSizeUnitTBPS captures enum value "TBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSizeUnitTBPS string = "TBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSizeUnitGB captures enum value "GB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSizeUnitGB string = "GB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSizeUnitGBPS captures enum value "GBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSizeUnitGBPS string = "GBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSizeUnitMB captures enum value "MB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSizeUnitMB string = "MB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSizeUnitMBPS captures enum value "MBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSizeUnitMBPS string = "MBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSizeUnitKB captures enum value "KB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSizeUnitKB string = "KB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSizeUnitKBPS captures enum value "KBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSizeUnitKBPS string = "KBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSizeUnitGHz captures enum value "GHz"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSizeUnitGHz string = "GHz"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSizeUnitMHz captures enum value "MHz"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSizeUnitMHz string = "MHz"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSize) validateUnitEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSizeTypeUnitPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSize) validateUnit(formats strfmt.Registry) error {

	if swag.IsZero(m.Unit) { // not required
		return nil
	}

	// value enum
	if err := m.validateUnitEnum("total-potential-capacity"+"."+"total-size"+"."+"unit", "body", *m.Unit); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSize) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSize) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeNodeRuleGroupItems0TotalPotentialCapacityTotalSize
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacity An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken. (non-presence)
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacity
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacity struct {

	// total size
	TotalSize *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSize `json:"total-size,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node total potential capacity
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTotalSize(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacity) validateTotalSize(formats strfmt.Registry) error {

	if swag.IsZero(m.TotalSize) { // not required
		return nil
	}

	if m.TotalSize != nil {
		if err := m.TotalSize.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tapi-topology:node" + "." + "total-potential-capacity" + "." + "total-size")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacity) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSize Total capacity of the TopologicalEntity in MB/s. In case of bandwidthProfile, this is expected to same as the committedInformationRate. (non-presence)
// swagger:model OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSize
type OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSize struct {

	// none (leaf)
	// Enum: [TB TBPS GB GBPS MB MBPS KB KBPS GHz MHz]
	Unit *string `json:"unit,omitempty"`

	// none (leaf)
	Value uint64 `json:"value,omitempty"`
}

// Validate validates this operations tapi topology get node details post output tapi topology node total potential capacity total size
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSize) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUnit(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSizeTypeUnitPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["TB","TBPS","GB","GBPS","MB","MBPS","KB","KBPS","GHz","MHz"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSizeTypeUnitPropEnum = append(operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSizeTypeUnitPropEnum, v)
	}
}

const (

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSizeUnitTB captures enum value "TB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSizeUnitTB string = "TB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSizeUnitTBPS captures enum value "TBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSizeUnitTBPS string = "TBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSizeUnitGB captures enum value "GB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSizeUnitGB string = "GB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSizeUnitGBPS captures enum value "GBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSizeUnitGBPS string = "GBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSizeUnitMB captures enum value "MB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSizeUnitMB string = "MB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSizeUnitMBPS captures enum value "MBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSizeUnitMBPS string = "MBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSizeUnitKB captures enum value "KB"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSizeUnitKB string = "KB"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSizeUnitKBPS captures enum value "KBPS"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSizeUnitKBPS string = "KBPS"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSizeUnitGHz captures enum value "GHz"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSizeUnitGHz string = "GHz"

	// OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSizeUnitMHz captures enum value "MHz"
	OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSizeUnitMHz string = "MHz"
)

// prop value enum
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSize) validateUnitEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, operationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSizeTypeUnitPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSize) validateUnit(formats strfmt.Registry) error {

	if swag.IsZero(m.Unit) { // not required
		return nil
	}

	// value enum
	if err := m.validateUnitEnum("tapi-topology:node"+"."+"total-potential-capacity"+"."+"total-size"+"."+"unit", "body", *m.Unit); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSize) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSize) UnmarshalBinary(b []byte) error {
	var res OperationsTapiTopologyGetNodeDetailsPostOutputTapiTopologyNodeTotalPotentialCapacityTotalSize
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
