// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DataTapiNetworkElementCreateNetworkElementPostInput data tapi network element create network element post input
// swagger:model data_tapi-network-element_create-network-element-post-input
type DataTapiNetworkElementCreateNetworkElementPostInput struct {

	// tapi network element netconf connection
	TapiNetworkElementNetconfConnection *DataTapiNetworkElementCreateNetworkElementPostInputTapiNetworkElementNetconfConnection `json:"tapi-network-element:netconf-connection,omitempty"`
}

// Validate validates this data tapi network element create network element post input
func (m *DataTapiNetworkElementCreateNetworkElementPostInput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTapiNetworkElementNetconfConnection(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DataTapiNetworkElementCreateNetworkElementPostInput) validateTapiNetworkElementNetconfConnection(formats strfmt.Registry) error {

	if swag.IsZero(m.TapiNetworkElementNetconfConnection) { // not required
		return nil
	}

	if m.TapiNetworkElementNetconfConnection != nil {
		if err := m.TapiNetworkElementNetconfConnection.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tapi-network-element:netconf-connection")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DataTapiNetworkElementCreateNetworkElementPostInput) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DataTapiNetworkElementCreateNetworkElementPostInput) UnmarshalBinary(b []byte) error {
	var res DataTapiNetworkElementCreateNetworkElementPostInput
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DataTapiNetworkElementCreateNetworkElementPostInputTapiNetworkElementNetconfConnection none (non-presence)
// swagger:model DataTapiNetworkElementCreateNetworkElementPostInputTapiNetworkElementNetconfConnection
type DataTapiNetworkElementCreateNetworkElementPostInputTapiNetworkElementNetconfConnection struct {

	// none (leaf)
	IP string `json:"ip,omitempty"`

	// Indication that the Network Element is Discoverable. (leaf)
	IsDiscoverable bool `json:"isDiscoverable,omitempty"`

	// none (leaf)
	Latitude string `json:"latitude,omitempty"`

	// none (leaf)
	Longitude string `json:"longitude,omitempty"`

	// none (leaf)
	Password string `json:"password,omitempty"`

	// none (leaf)
	Port uint16 `json:"port,omitempty"`

	// A label that can be used to define the role of the Network Element. (leaf)
	Role string `json:"role,omitempty"`

	// none (leaf)
	SiteName string `json:"siteName,omitempty"`

	// none (leaf)
	Username string `json:"username,omitempty"`
}

// Validate validates this data tapi network element create network element post input tapi network element netconf connection
func (m *DataTapiNetworkElementCreateNetworkElementPostInputTapiNetworkElementNetconfConnection) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DataTapiNetworkElementCreateNetworkElementPostInputTapiNetworkElementNetconfConnection) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DataTapiNetworkElementCreateNetworkElementPostInputTapiNetworkElementNetconfConnection) UnmarshalBinary(b []byte) error {
	var res DataTapiNetworkElementCreateNetworkElementPostInputTapiNetworkElementNetconfConnection
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
